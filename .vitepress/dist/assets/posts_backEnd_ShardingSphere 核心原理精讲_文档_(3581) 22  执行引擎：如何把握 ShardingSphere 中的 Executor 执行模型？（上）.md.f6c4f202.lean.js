import{_ as o,j as e,o as t,g as c,k as a,h as s,s as l,Q as p}from"./chunks/framework.4e7d56ce.js";const b=JSON.parse('{"title":"22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3581) 22  执行引擎：如何把握 ShardingSphere 中的 Executor 执行模型？（上）.md"},E=l("h1",{id:"_22执行引擎-如何把握shardingsphere中的executor执行模型-上",tabindex:"-1"},[s("22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上） "),l("a",{class:"header-anchor",href:"#_22执行引擎-如何把握shardingsphere中的executor执行模型-上","aria-label":'Permalink to "22执行引擎：如何把握ShardingSphere中的Executor执行模型？（上）"'},"​")],-1),y=l("p",null,"在上一课时中，我们对 ShardingGroupExecuteCallback 和 SQLExecuteTemplate 做了介绍。从设计上讲，前者充当 ShardingExecuteEngine 的回调入口；而后者则是一个模板类，完成对 ShardingExecuteEngine 的封装并提供了对外的统一入口，这些类都位于底层的 sharding-core-execute 工程中。",-1),i=p("",16),u=p("",28),F=p("",42);function d(g,S,x,C,A,h){const n=e("Image");return t(),c("div",null,[E,y,a(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/47/4A/CgqCHl9HalOAccqPAACp0Ky_Tl8886.png"}),s(),i,a(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/47/3F/Ciqc1F9HamWACCzmAABPdP2Sna8714.png"}),s(),u,a(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/47/3F/Ciqc1F9HaoaAYskMAACJIb5G6C8859.png"}),s(),F])}const m=o(r,[["render",d]]);export{b as __pageData,m as default};
