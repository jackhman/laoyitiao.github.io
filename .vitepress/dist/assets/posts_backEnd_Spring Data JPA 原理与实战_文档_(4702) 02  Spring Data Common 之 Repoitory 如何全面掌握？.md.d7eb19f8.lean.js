import{_ as l,j as e,o as t,g as r,k as p,h as a,s,Q as o}from"./chunks/framework.4e7d56ce.js";const M=JSON.parse('{"title":"02SpringDataCommon之Repoitory如何全面掌握？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Data JPA 原理与实战_文档/(4702) 02  Spring Data Common 之 Repoitory 如何全面掌握？.md","filePath":"posts/backEnd/Spring Data JPA 原理与实战_文档/(4702) 02  Spring Data Common 之 Repoitory 如何全面掌握？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/Spring Data JPA 原理与实战_文档/(4702) 02  Spring Data Common 之 Repoitory 如何全面掌握？.md"},i=s("h1",{id:"_02springdatacommon之repoitory如何全面掌握",tabindex:"-1"},[a("02SpringDataCommon之Repoitory如何全面掌握？ "),s("a",{class:"header-anchor",href:"#_02springdatacommon之repoitory如何全面掌握","aria-label":'Permalink to "02SpringDataCommon之Repoitory如何全面掌握？"'},"​")],-1),y=s("p",null,"通过上一课时，我们知道了 Spring Data 对整个数据操作做了很好的封装，其中 Spring Data Common 定义了很多公用的接口和一些相对数据操作的公共实现（如分页排序、结果映射、Autiting 信息、事务等），而 Spring Data JPA 就是 Spring Data Common 的关系数据库的查询实现。",-1),E=s("p",null,"所以本课时我们来了解一下 Spring Data Common 的核心内容------Repository。我将从 Repository 的所有子类着手，带领你逐步掌握 CrudRepository、PageingAndSortingRepository、JpaRepository的使用。",-1),g=s("p",null,"在讲解 Repository 之前，我们先来看看 Spring Data JPA 所依赖的 jar 包关系是什么样的，看下 Spring Data Common 的 jar 依赖关系。",-1),d=s("h3",{id:"spring-data-common-的依赖关系",tabindex:"-1"},[a("Spring Data Common 的依赖关系 "),s("a",{class:"header-anchor",href:"#spring-data-common-的依赖关系","aria-label":'Permalink to "Spring Data Common 的依赖关系"'},"​")],-1),A=s("p",null,"我们通过 Gradle 看一下项目依赖，了解一下 Spring Data Common 的依赖关系。",-1),u=o("",12),D=s("p",null,"通过该层次结构视图，你就会明白基类 Repository 的用意，由此可知，存储库分为以下 4 个大类。",-1),F=s("ul",null,[s("li",null,[s("p",null,'ReactiveCrudRepository 这条线是响应式编程，主要支持当前 NoSQL 方面的操作，因为这方面大部分操作都是分布式的，所以由此我们可以看出 Spring Data 想统一数据操作的"野心"，即想提供关于所有 Data 方面的操作。目前 Reactive 主要有 Cassandra、MongoDB、Redis 的实现。')]),s("li",null,[s("p",null,"RxJava2CrudRepository 这条线是为了支持 RxJava 2 做的标准响应式编程的接口。")]),s("li",null,[s("p",null,"CoroutineCrudRepository 这条继承关系链是为了支持 Kotlin 语法而实现的。")]),s("li",null,[s("p",null,"CrudRepository 这条继承关系链正是本课时我要详细介绍的 JPA 相关的操作接口，你也可以把我的这种方法应用到另外 3 种继承关系链里面学习。")])],-1),m=s("p",null,'然后，通过 Intellij Idea，我们也可以打开类 UserRepository.java（第一课时"Spring Data JPA 初识"里面的案例），在此类里面，鼠标右键点击 Show Diagram 显示层次结构图，用图表的方式查看类的关系层次，打开后如下图（Repository 继承关系图）所示：',-1),R=o("",10),h=s("p",null,'这时，我在第 01 课时中"Spring Boot 和 Spring Data JPA 的 Demo 演示"的例子里，提到过的 Controller 中引用 userRepository 的 save 和 findAll 方法就会报错。',-1),C=s("p",null,"上面这个实例通过继承 Repository，使 Spring 容器知道 UserRepository 是 DB 操作的类，是我们可以对 User 对象进行 CURD 的操作。这时我们对 Repository 有了一定的掌握，接下来再来看看它的直接子类 CurdRepository 接口都为我们提供了哪些方法。",-1),S=s("h3",{id:"crudrepository-接口",tabindex:"-1"},[a("CrudRepository 接口 "),s("a",{class:"header-anchor",href:"#crudrepository-接口","aria-label":'Permalink to "CrudRepository 接口"'},"​")],-1),_=s("p",null,"下面我们通过 IDEA 工具，看下 CrudRepository 为我们提供的方法有哪些。",-1),b=o("",8),v=o("",22),B=o("",9),f=o("",5),P=o("",9),k=s("p",null,"并开启 annotation processing。",-1),T=s("blockquote",null,[s("p",null,[a("点击下方链接查看源码（不定时更新）"),s("br"),s("a",{href:"https://github.com/zhangzhenhuajack/spring-boot-guide/tree/master/spring-data/spring-data-jpa",target:"_blank",rel:"noreferrer"},"https://github.com/zhangzhenhuajack/spring-boot-guide/tree/master/spring-data/spring-data-jpa")])],-1);function I(J,q,U,x,w,j){const n=e("Image");return t(),r("div",null,[i,y,E,g,d,A,p(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/50/6F/Ciqc1F9i18OABIgzAAGVeUj3uCU674.png"}),a(),u,p(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/50/7B/CgqCHl9i1-eADg-VAAL1Uy4EvRE891.png"}),a(),D,F,m,p(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/50/70/Ciqc1F9i2AGAReiKAACJ2nYY8aw248.png"}),a(),R,p(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/50/7B/CgqCHl9i2BCAOCRBAADotul53XM199.png"}),a(),h,p(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/50/7B/CgqCHl9i2BWAKgsoAADcQgdoISs764.png"}),a(),C,S,_,p(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/50/7B/CgqCHl9i2B-AcA4zAADw4REfVrA348.png"}),a(),b,p(n,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2PKAdUmeAASdzFspsBQ747.png"}),a(),v,p(n,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2RKAfFGjAAGKTsMkBdw667.png"}),a(),B,p(n,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2SCAeilgAAZs6DPtWQM598.png"}),a(),f,p(n,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2S2AC9AXAAWAo3HVeSY110.png"}),a(),P,p(n,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2TWAJZg_AABb1DeHmt4363.png"}),a(),k,p(n,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image/M00/50/7C/CgqCHl9i2TuAT9DcAACj394zaUc082.png"}),a(),T])}const L=l(c,[["render",I]]);export{M as __pageData,L as default};
