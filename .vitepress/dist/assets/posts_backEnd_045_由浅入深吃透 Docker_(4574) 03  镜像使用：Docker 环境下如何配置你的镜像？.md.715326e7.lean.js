import{_ as o,j as e,o as c,h as t,k as l,f as a,s,Q as p}from"./chunks/framework.d3daa342.js";const C=JSON.parse('{"title":"03镜像使用：Docker环境下如何配置你的镜像？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/045_由浅入深吃透 Docker/(4574) 03  镜像使用：Docker 环境下如何配置你的镜像？.md","filePath":"posts/backEnd/045_由浅入深吃透 Docker/(4574) 03  镜像使用：Docker 环境下如何配置你的镜像？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/045_由浅入深吃透 Docker/(4574) 03  镜像使用：Docker 环境下如何配置你的镜像？.md"},y=s("h1",{id:"_03镜像使用-docker环境下如何配置你的镜像",tabindex:"-1"},[a("03镜像使用：Docker环境下如何配置你的镜像？ "),s("a",{class:"header-anchor",href:"#_03镜像使用-docker环境下如何配置你的镜像","aria-label":'Permalink to "03镜像使用：Docker环境下如何配置你的镜像？"'},"​")],-1),i=s("p",null,"今天我将围绕 Docker 核心概念镜像展开，首先重点讲解一下镜像的基本操作，然后介绍一下镜像的实现原理。首先说明，咱们本课时的镜像均指 Docker 镜像。",-1),E=s("p",null,"你是否还记得镜像是什么？我们先回顾一下。",-1),d=s("p",null,[a("镜像是一个只读的 Docker 容器模板，包含启动容器所需要的所有文件系统结构和内容。简单来讲，镜像是一个特殊的文件系统，它提供了容器运行时所需的程序、软件库、资源、配置等静态数据。即"),s("strong",null,"镜像不包含任何动态数据，镜像内容在构建后不会被改变"),a("。")],-1),b=s("p",null,"然后我们来看下如何操作镜像。",-1),u=s("h3",{id:"镜像操作",tabindex:"-1"},[a("镜像操作 "),s("a",{class:"header-anchor",href:"#镜像操作","aria-label":'Permalink to "镜像操作"'},"​")],-1),k=p("",71),g=p("",9);function h(D,m,f,F,A,v){const n=e("Image");return c(),t("div",null,[y,i,E,d,b,u,l(n,{alt:"Lark20200904-175130.png",src:"https://s0.lgstatic.com/i/image/M00/4A/AD/CgqCHl9SDkWAaxh7AAFaMgWI7cI029.png"}),a(),k,l(n,{alt:"Lark20200904-175137.png",src:"https://s0.lgstatic.com/i/image/M00/4A/AD/CgqCHl9SDmGACBEjAABkgtnn_hE625.png"}),a(),g])}const _=o(r,[["render",h]]);export{C as __pageData,_ as default};
