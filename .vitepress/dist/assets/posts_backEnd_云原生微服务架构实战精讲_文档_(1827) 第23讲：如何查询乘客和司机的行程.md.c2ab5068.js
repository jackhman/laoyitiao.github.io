import{_ as s,o as n,g as a,Q as p}from"./chunks/framework.f67d7268.js";const C=JSON.parse('{"title":"第23讲：如何查询乘客和司机的行程","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1827) 第23讲：如何查询乘客和司机的行程.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1827) 第23讲：如何查询乘客和司机的行程.md","lastUpdated":1696682708000}'),l={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1827) 第23讲：如何查询乘客和司机的行程.md"},o=p(`<h1 id="第23讲-如何查询乘客和司机的行程" tabindex="-1">第23讲：如何查询乘客和司机的行程 <a class="header-anchor" href="#第23讲-如何查询乘客和司机的行程" aria-label="Permalink to &quot;第23讲：如何查询乘客和司机的行程&quot;">​</a></h1><p>上一课时对 CQRS 技术做了理论上的介绍，本课时将讲解 CQRS 技术在实际开发中的应用。</p><h3 id="历史行程查询" tabindex="-1">历史行程查询 <a class="header-anchor" href="#历史行程查询" aria-label="Permalink to &quot;历史行程查询&quot;">​</a></h3><p>在示例应用中，乘客和司机都需要查询历史行程的信息，行程的信息由行程管理微服务负责维护，保存在数据库中。最直接的做法是由行程管理微服务提供 API 来查询历史行程。但是这种做法有一个最大的问题在于，行程管理微服务中保存的行程信息是不完整的，行程的乘客和司机都只有标识符，没有具体的信息。相关的具体信息由乘客管理微服务和司机管理微服务来维护，这也是应用领域驱动设计的结果。乘客和司机分别是所在聚合的根实体，同样作为聚合根实体的行程，只能引用其他聚合根实体的标识符。</p><p>历史行程中需要包含乘客和司机的具体信息，这就意味着我们需要一种方式从这两个微服务中获取这些信息。</p><p>第一种获取信息的做法是在查询历史行程时，通过这两个微服务的 API 来获取。因为行程对象中已经包含了乘客和司机的标识符，只需要一个 API 调用，就可以获取到所需的信息，然后再与行程对象中的已有信息进行合并，就得到了所需要的结果。这种做法类似于关系型数据库中的表连接操作。它的缺点是性能很差，每个历史行程的获取都需要两次微服务 API 的调用。</p><p>第二种做法是修改行程管理服务中的行程对象的定义，以增加所需要的额外字段。这种做法的不足之处在于，这些附加的乘客和司机信息，与行程管理微服务的业务逻辑无关，只是为了满足特定的查询需要而引入的，并不是一个很好的设计。</p><p>第三种做法是为行程历史记录创建独立的存储，包含所需的全部数据。这种做法的好处是查询的性能很好，不需要额外的操作，从设计的角度来说，也实现了更好的职责划分。问题在于需要在不同的微服务之间同步数据。</p><p>下面通过具体的历史行程查询服务来说明第三种做法的实现。下面代码中的 Trip 类是历史行程查询服务中表示行程的领域对象类。与行程管理服务中的 Trip 类相比，下面所展示的 Trip 类的定义被简化了很多，只包含所需的属性，并没有相关的业务逻辑。这也符合对于查询模型的期望，查询模型只是作为数据的容器，其中除了一些基本的数据转换逻辑之外，并不包含与业务相关的内容。Trip 类的属性 passengerName 和 driverName 分别表示乘客和司机的名字，这是相对于行程管理服务中的 Trip 类而言，新增加的附加属性。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Entity</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Table</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;trips&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Trip</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Id</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;passenger_id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String passengerId;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;passenger_name&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String passengerName;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;driver_id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String driverId;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;driver_name&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String driverName;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;start_pos_lng&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal startPosLng;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;start_pos_lat&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal startPosLat;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;end_pos_lng&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal endPosLng;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;end_pos_lat&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal endPosLat;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;state&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Enumerated</span><span style="color:#E1E4E8;">(EnumType.STRING)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TripState state;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Entity</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Table</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;trips&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Trip</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Id</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String id;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;passenger_id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String passengerId;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;passenger_name&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String passengerName;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;driver_id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String driverId;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;driver_name&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String driverName;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;start_pos_lng&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal startPosLng;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;start_pos_lat&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal startPosLat;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;end_pos_lng&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal endPosLng;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;end_pos_lat&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal endPosLat;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;state&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Enumerated</span><span style="color:#24292E;">(EnumType.STRING)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TripState state;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>接下来需要解决的问题是如何保持数据的同步。由于行程管理服务已经发布与行程对象相关的事件，我们只需要处理这些事件，就可以使得历史行程查询服务中的数据，与行程管理服务中的数据保持一致。当表示行程已创建的 TripCreatedEvent 事件发布时，历史行程查询服务需要创建同样的行程对象。当行程状态发生改变时，历史行程查询服务需要做出来相同的改动。</p><p>下面代码中的 TripHistoryServiceEventConsumer 类负责处理与行程对象相关的事件。当不同的事件发生时，调用 TripService 的不同方法来更新数据。通过这样的方式，可以保证查询模型中的数据的最终一致性。所处理的事件来自不同的微服务中聚合的根实体，包括行程、乘客和行程派发。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripHistoryServiceEventConsumer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripService </span><span style="color:#FFAB70;">tripService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DomainEventHandlers </span><span style="color:#B392F0;">tripDomainEventHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forAggregateType</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripCreatedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripCreated)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripConfirmedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripConfirmed)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripCancelledEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripCancelled)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DomainEventHandlers </span><span style="color:#B392F0;">passengerDomainEventHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forAggregateType</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.passengerservice.domain.Passenger&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(PassengerDetailsUpdatedEvent.class,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onPassengerDetailsUpdated)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DomainEventHandlers </span><span style="color:#B392F0;">dispatchDomainEventHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forAggregateType</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.dispatchservice.domain.Dispatch&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripAcceptanceSelectedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripAccepted)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripCreated</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripCreatedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService.</span><span style="color:#B392F0;">createTrip</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onPassengerDetailsUpdated</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">PassengerDetailsUpdatedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">updatePassengerDetails</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">            envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getPassengerDetails</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripConfirmed</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripConfirmedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">updateTripState</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(), TripState.</span><span style="color:#79B8FF;">CONFIRMED</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripCancelled</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripCancelledEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">updateTripState</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(), TripState.</span><span style="color:#79B8FF;">CANCELLED</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripAccepted</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripAcceptanceSelectedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    final TripAcceptanceSelectedEvent event </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">setTripDriver</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(), event.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripHistoryServiceEventConsumer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripService </span><span style="color:#E36209;">tripService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DomainEventHandlers </span><span style="color:#6F42C1;">tripDomainEventHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forAggregateType</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripCreatedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripCreated)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripConfirmedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripConfirmed)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripCancelledEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripCancelled)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DomainEventHandlers </span><span style="color:#6F42C1;">passengerDomainEventHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forAggregateType</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;io.vividcode.happyride.passengerservice.domain.Passenger&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(PassengerDetailsUpdatedEvent.class,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onPassengerDetailsUpdated)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DomainEventHandlers </span><span style="color:#6F42C1;">dispatchDomainEventHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forAggregateType</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;io.vividcode.happyride.dispatchservice.domain.Dispatch&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripAcceptanceSelectedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripAccepted)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripCreated</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripCreatedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService.</span><span style="color:#6F42C1;">createTrip</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onPassengerDetailsUpdated</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">PassengerDetailsUpdatedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">updatePassengerDetails</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">            envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getPassengerDetails</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripConfirmed</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripConfirmedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">updateTripState</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(), TripState.</span><span style="color:#005CC5;">CONFIRMED</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripCancelled</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripCancelledEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">updateTripState</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(), TripState.</span><span style="color:#005CC5;">CANCELLED</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripAccepted</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripAcceptanceSelectedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    final TripAcceptanceSelectedEvent event </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">setTripDriver</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(), event.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这里需要注意的是对 PassengerDetailsUpdatedEvent 事件的处理，这是一个新增的事件，用来更新 Trip 对象中的 passengerName 属性。乘客管理服务同样会对 TripCreatedEvent 事件进行处理，并根据事件中的行程对象的乘客标识符，找到乘客的名称，并发布新的 PassengerDetailsUpdatedEvent 事件。下面代码中的 PassengerServiceEventConsumer 类展示了乘客管理服务对 TripCreatedEvent 事件的处理逻辑。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PassengerServiceEventConsumer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  PassengerService </span><span style="color:#FFAB70;">passengerService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  DomainEventPublisher </span><span style="color:#FFAB70;">domainEventPublisher</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DomainEventHandlers </span><span style="color:#B392F0;">domainEventHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forAggregateType</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripCreatedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripCreated)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripCreated</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripCreatedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    final String passengerId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">getPassengerId</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.passengerService.</span><span style="color:#B392F0;">getPassenger</span><span style="color:#E1E4E8;">(passengerId)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">ifPresent</span><span style="color:#E1E4E8;">(passenger </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          final PassengerDetails passengerDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PassengerDetails</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              passenger.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">          this.domainEventPublisher</span></span>
<span class="line"><span style="color:#E1E4E8;">              .publish(</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.passengerservice.domain.Passenger&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  passengerId,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  Collections.singletonList(</span></span>
<span class="line"><span style="color:#E1E4E8;">                      new </span><span style="color:#B392F0;">PassengerDetailsUpdatedEvent</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">passengerDetails</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PassengerServiceEventConsumer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  PassengerService </span><span style="color:#E36209;">passengerService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  DomainEventPublisher </span><span style="color:#E36209;">domainEventPublisher</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DomainEventHandlers </span><span style="color:#6F42C1;">domainEventHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forAggregateType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripCreatedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripCreated)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripCreated</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripCreatedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    final String passengerId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">getPassengerId</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.passengerService.</span><span style="color:#6F42C1;">getPassenger</span><span style="color:#24292E;">(passengerId)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">ifPresent</span><span style="color:#24292E;">(passenger </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          final PassengerDetails passengerDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PassengerDetails</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">              passenger.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">          this.domainEventPublisher</span></span>
<span class="line"><span style="color:#24292E;">              .publish(</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&quot;io.vividcode.happyride.passengerservice.domain.Passenger&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  passengerId,</span></span>
<span class="line"><span style="color:#24292E;">                  Collections.singletonList(</span></span>
<span class="line"><span style="color:#24292E;">                      new </span><span style="color:#6F42C1;">PassengerDetailsUpdatedEvent</span><span style="color:#24292E;">(</span><span style="color:#E36209;">passengerDetails</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果乘客修改了自己的名字，乘客管理服务同样可以发布 PassengerDetailsUpdatedEvent 事件，这样历史行程查询服务中的行程信息同样会被更新。当乘客名称更新时，该乘客的所有行程记录都会被更新。</p><h3 id="axon-框架实现" tabindex="-1">Axon 框架实现 <a class="header-anchor" href="#axon-框架实现" aria-label="Permalink to &quot;Axon 框架实现&quot;">​</a></h3><p>Axon 框架提供了事件源和 CQRS 技术的完整实现，如果使用 Axon 框架，可以更容易的实现 CQRS。下面介绍如何使用 Axon 框架来实现行程管理服务。</p><h4 id="聚合" tabindex="-1">聚合 <a class="header-anchor" href="#聚合" aria-label="Permalink to &quot;聚合&quot;">​</a></h4><p>Axon 框架对领域驱动设计中的一些概念提供了原生的支持。以聚合来说，只需要在领域对象类上添加 @Aggregate 注解，就可以声明它是一个聚合的根实体。聚合对象类中包含了表示状态的属性，以及改变状态的方法。通过在不同的属性和方法上添加 Axon 框架的注解，就可以定义对于聚合对象的不同操作。</p><p>下面代码中的 Trip 类是行程管理服务的聚合根实体，其中用到了几个重要的 Axon 框架注解。</p><p>@AggregateIdentifier 注解表示的是聚合根实体对象的标识符，该标识符应该是全局唯一的，该注解的作用是声明属性 id 作为 Trip 对象的标识符。</p><p>@CommandHandler 注解用来声明处理命令的构造器或方法，命令处理器方法的第一个参数表示了所接受的命令类型。如果该注解添加在构造器上，则说明在处理该命令时，会创建聚合根实体的一个新对象。命令处理器中包含的是处理请求的业务逻辑。</p><p>@EventSourcingHandler 注解用来声明事件源技术中事件的处理器，事件处理器中包含的是改变对象状态的逻辑。在事件源技术中，对象状态的所有修改都以事件的形式来描述。只需要重放所有的事件，再应用事件处理器中所做的修改，就得到了对象的当前状态。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Aggregate</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Trip</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">AggregateIdentifier</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TripState state;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">CommandHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Trip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CreateTripCommand </span><span style="color:#FFAB70;">command</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripCreatedEvent</span><span style="color:#E1E4E8;">(command.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">(), command.</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">CommandHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CancelTripCommand </span><span style="color:#FFAB70;">command</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> TripState.CREATED) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalTripStateException</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state, TripState.CANCELLED);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripCancelledEvent</span><span style="color:#E1E4E8;">(command.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">CommandHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> ConfirmTripCommand </span><span style="color:#FFAB70;">command</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> TripState.CREATED) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalTripStateException</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state, TripState.CONFIRMED);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripConfirmedEvent</span><span style="color:#E1E4E8;">(command.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripCreatedEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TripState.CREATED;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripCancelledEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TripState.CANCELLED;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripConfirmedEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.state </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TripState.CONFIRMED;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Trip</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Aggregate</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Trip</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">AggregateIdentifier</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String id;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TripState state;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">CommandHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Trip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CreateTripCommand </span><span style="color:#E36209;">command</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripCreatedEvent</span><span style="color:#24292E;">(command.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">(), command.</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">CommandHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CancelTripCommand </span><span style="color:#E36209;">command</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> TripState.CREATED) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalTripStateException</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state, TripState.CANCELLED);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripCancelledEvent</span><span style="color:#24292E;">(command.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">CommandHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ConfirmTripCommand </span><span style="color:#E36209;">command</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> TripState.CREATED) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalTripStateException</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state, TripState.CONFIRMED);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripConfirmedEvent</span><span style="color:#24292E;">(command.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripCreatedEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TripState.CREATED;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripCancelledEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TripState.CANCELLED;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventSourcingHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripConfirmedEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.state </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TripState.CONFIRMED;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Trip</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="命令处理器" tabindex="-1">命令处理器 <a class="header-anchor" href="#命令处理器" aria-label="Permalink to &quot;命令处理器&quot;">​</a></h4><p>命令处理器所处理的命令只是简单的 POJO 对象，命令对象通常表示来自客户端的请求。下面代码中的 ConfirmTripCommand 类表示的是确认行程的命令，命令对象中需要包含一个属性来声明处理该命令的聚合对象的标识符，这是通过 @TargetAggregateIdentifier 注解来表示的。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmTripCommand</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">NonNull</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">TargetAggregateIdentifier</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String tripId;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmTripCommand</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">NonNull</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">TargetAggregateIdentifier</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String tripId;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在命令处理器中，AggregateLifecycle 类的静态方法 apply 用来发布事件消息，所发布的事件会触发对应的事件源处理器，从而改变对象的状态。在处理 ConfirmTripCommand 命令的 handle 方法中，首先检查当前行程对象的状态是否合法，如果合法的话，则使用 apply 方法来发布 TripConfirmedEvent 事件。而 TripConfirmedEvent 事件的处理器，把当前行程对象的状态修改为 CONFIRMED。</p><p>从这里可以看出来 CQRS 技术中命令模型的基本处理流程，那就是命令处理器发布事件，事件处理器更新对象状态。</p><p>一般来说，会有一个命令负责创建聚合对象，通过添加了 @CommandHandler 注解的构造器来实现。在 Trip 类中，CreateTripCommand 命令用来创建 Trip 对象。在构造器所发布的 TripCreatedEvent 事件的处理器中，必须要设置聚合对象的标识符，这样后续的命令才能找到对应的对象。</p><h4 id="发送命令" tabindex="-1">发送命令 <a class="header-anchor" href="#发送命令" aria-label="Permalink to &quot;发送命令&quot;">​</a></h4><p>Axon 框架中的 CommandGateway 用来发送命令。下面代码中的 TripService 使用 CommandGateway 的 send 方法来发送命令，send 方法的返回值是 CompletableFuture 对象，也可以使用 sendAndWait 方法来发送命令并等待完成。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  CommandGateway commandGateway;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CompletableFuture&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">createTrip</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">passengerId</span><span style="color:#E1E4E8;">, PositionVO </span><span style="color:#FFAB70;">startPos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      PositionVO </span><span style="color:#FFAB70;">endPos</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    String tripId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> UUID.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    TripDetails tripDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripDetails</span><span style="color:#E1E4E8;">(passengerId, startPos, endPos);</span></span>
<span class="line"><span style="color:#E1E4E8;">    CreateTripCommand command </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripCommand</span><span style="color:#E1E4E8;">(tripId, tripDetails);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> commandGateway.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(command);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CompletableFuture&lt;</span><span style="color:#F97583;">Void</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">cancelTrip</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    CancelTripCommand command </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CancelTripCommand</span><span style="color:#E1E4E8;">(tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> commandGateway.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(command);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CompletableFuture&lt;</span><span style="color:#F97583;">Void</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">confirmTrip</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ConfirmTripCommand command </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmTripCommand</span><span style="color:#E1E4E8;">(tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> commandGateway.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(command);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  CommandGateway commandGateway;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CompletableFuture&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">createTrip</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">passengerId</span><span style="color:#24292E;">, PositionVO </span><span style="color:#E36209;">startPos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      PositionVO </span><span style="color:#E36209;">endPos</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    String tripId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> UUID.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    TripDetails tripDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripDetails</span><span style="color:#24292E;">(passengerId, startPos, endPos);</span></span>
<span class="line"><span style="color:#24292E;">    CreateTripCommand command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripCommand</span><span style="color:#24292E;">(tripId, tripDetails);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> commandGateway.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(command);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CompletableFuture&lt;</span><span style="color:#D73A49;">Void</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">cancelTrip</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    CancelTripCommand command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CancelTripCommand</span><span style="color:#24292E;">(tripId);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> commandGateway.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(command);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CompletableFuture&lt;</span><span style="color:#D73A49;">Void</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">confirmTrip</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    ConfirmTripCommand command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmTripCommand</span><span style="color:#24292E;">(tripId);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> commandGateway.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(command);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="查询模型" tabindex="-1">查询模型 <a class="header-anchor" href="#查询模型" aria-label="Permalink to &quot;查询模型&quot;">​</a></h4><p>在设计查询模型时，要满足的需求是查询历史行程的相关信息。为了查询方便，使用关系型数据库来保存行程数据，通过 Spring Data JPA 来实现。下面代码中的 TripView 是表示历史行程的领域对象类，同时也是 JPA 的实体类。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Entity</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Table</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;trip_view&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripView</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Id</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;start_pos_lng&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal startPosLng;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;start_pos_lat&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal startPosLat;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;end_pos_lng&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal endPosLng;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ent_pos_lat&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal endPosLat;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;state&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Enumerated</span><span style="color:#E1E4E8;">(EnumType.STRING)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TripState state;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Entity</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Table</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;trip_view&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripView</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Id</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String id;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;start_pos_lng&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal startPosLng;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;start_pos_lat&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal startPosLat;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;end_pos_lng&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal endPosLng;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ent_pos_lat&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal endPosLat;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;state&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Enumerated</span><span style="color:#24292E;">(EnumType.STRING)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TripState state;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>查询模型中的数据更新来自对不同事件的处理。下面代码中的 TripViewEventHandler 类中包含了不同的事件处理方法，通过 @EventHandler 注解来声明。在处理事件时，只需要根据事件的类型，对相应的 TripView 对象使用 TripViewRepository 进行修改即可。所有的修改都会保存在数据库中，与命令模型中的状态保持一致。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripViewEventHandler</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripViewRepository repository;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(TripCreatedEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TripView tripView </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripView</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setId</span><span style="color:#E1E4E8;">(event.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    TripDetails tripDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> event.</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    PositionVO startPos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tripDetails.</span><span style="color:#B392F0;">getStartPos</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setStartPosLng</span><span style="color:#E1E4E8;">(startPos.</span><span style="color:#B392F0;">getLng</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setStartPosLat</span><span style="color:#E1E4E8;">(startPos.</span><span style="color:#B392F0;">getLat</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    PositionVO endPos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tripDetails.</span><span style="color:#B392F0;">getEndPos</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setEndPosLng</span><span style="color:#E1E4E8;">(endPos.</span><span style="color:#B392F0;">getLng</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setEndPosLat</span><span style="color:#E1E4E8;">(endPos.</span><span style="color:#B392F0;">getLat</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    tripView.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(TripState.CREATED);</span></span>
<span class="line"><span style="color:#E1E4E8;">    repository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(tripView);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(TripCancelledEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    repository.</span><span style="color:#B392F0;">findById</span><span style="color:#E1E4E8;">(event.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">ifPresent</span><span style="color:#E1E4E8;">(tripView </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> tripView.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(TripState.CANCELLED));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">EventHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(TripConfirmedEvent </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    repository.</span><span style="color:#B392F0;">findById</span><span style="color:#E1E4E8;">(event.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">ifPresent</span><span style="color:#E1E4E8;">(tripView </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> tripView.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(TripState.CONFIRMED));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripViewEventHandler</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripViewRepository repository;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(TripCreatedEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    TripView tripView </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripView</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setId</span><span style="color:#24292E;">(event.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    TripDetails tripDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> event.</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    PositionVO startPos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tripDetails.</span><span style="color:#6F42C1;">getStartPos</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setStartPosLng</span><span style="color:#24292E;">(startPos.</span><span style="color:#6F42C1;">getLng</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setStartPosLat</span><span style="color:#24292E;">(startPos.</span><span style="color:#6F42C1;">getLat</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    PositionVO endPos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tripDetails.</span><span style="color:#6F42C1;">getEndPos</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setEndPosLng</span><span style="color:#24292E;">(endPos.</span><span style="color:#6F42C1;">getLng</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setEndPosLat</span><span style="color:#24292E;">(endPos.</span><span style="color:#6F42C1;">getLat</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    tripView.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(TripState.CREATED);</span></span>
<span class="line"><span style="color:#24292E;">    repository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(tripView);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(TripCancelledEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    repository.</span><span style="color:#6F42C1;">findById</span><span style="color:#24292E;">(event.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">ifPresent</span><span style="color:#24292E;">(tripView </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> tripView.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(TripState.CANCELLED));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">EventHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(TripConfirmedEvent </span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    repository.</span><span style="color:#6F42C1;">findById</span><span style="color:#24292E;">(event.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">ifPresent</span><span style="color:#24292E;">(tripView </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> tripView.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(TripState.CONFIRMED));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="处理查询" tabindex="-1">处理查询 <a class="header-anchor" href="#处理查询" aria-label="Permalink to &quot;处理查询&quot;">​</a></h4><p>Axon 框架提供了对查询的支持，由<strong>查询请求</strong> 和<strong>查询处理器</strong>两部分组成。查询请求是一个 POJO 对象，包含了自定义的查询元数据。查询处理器的方法通过 @QueryHandler 注解来进行声明。查询处理器方法的参数是它所能处理的查询请求对象，而返回值则是查询的处理结果。</p><p>Axon 框架支持 3 种不同类型的查询，如下表所示。</p><table><thead><tr><th style="text-align:left;"><strong>查询类型</strong></th><th style="text-align:left;"><strong>说明</strong></th></tr></thead><tbody><tr><td style="text-align:left;">点对点查询</td><td style="text-align:left;">每个查询请求对应于单一的查询处理器</td></tr><tr><td style="text-align:left;">分散-收集查询</td><td style="text-align:left;">对于一个查询请求，所有能够处理该请求的查询处理器都会被调用，得到的结果是一个流，其中包含了所有成功处理该请求的查询处理器的返回值</td></tr><tr><td style="text-align:left;">订阅查询</td><td style="text-align:left;">订阅查询除了可以获取到查询结果的初始值之外，还可以获取到之后的更新结果</td></tr></tbody></table><p>查询请求由 QueryGateway 来进行处理，应用代码调用 QueryGateway 的不同方法来执行查询，并获取结果。QueryGateway 中的方法如下表所示，类型参数 R 表示查询结果的类型。</p><table><thead><tr><th style="text-align:left;"><strong>查询类型</strong></th><th style="text-align:left;"><strong>方法名称</strong></th><th style="text-align:left;"><strong>返回值类型</strong></th></tr></thead><tbody><tr><td style="text-align:left;">点对点查询</td><td style="text-align:left;">query</td><td style="text-align:left;">CompletableFuture</td></tr><tr><td style="text-align:left;">分散-收集查询</td><td style="text-align:left;">scatterGather</td><td style="text-align:left;">Stream</td></tr><tr><td style="text-align:left;">订阅查询</td><td style="text-align:left;">subscriptionQuery</td><td style="text-align:left;">SubscriptionQueryResult</td></tr></tbody></table><p>在下面的代码中，TripService的queryTrip 方法用来处理 FetchTripQuery 类型的查询请求，查询结果以 TripSummary 对象表示。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">QueryHandler</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> TripSummary </span><span style="color:#B392F0;">queryTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FetchTripQuery </span><span style="color:#FFAB70;">query</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripViewRepository.</span><span style="color:#B392F0;">findById</span><span style="color:#E1E4E8;">(query.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(tripView </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripSummary tripSummary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripSummary</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">          tripSummary.</span><span style="color:#B392F0;">setId</span><span style="color:#E1E4E8;">(tripView.</span><span style="color:#B392F0;">getId</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">          tripSummary</span></span>
<span class="line"><span style="color:#E1E4E8;">              .</span><span style="color:#B392F0;">setStartPos</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PositionVO</span><span style="color:#E1E4E8;">(tripView.</span><span style="color:#B392F0;">getStartPosLng</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">                  tripView.</span><span style="color:#B392F0;">getStartPosLat</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">          tripSummary.</span><span style="color:#B392F0;">setEndPos</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PositionVO</span><span style="color:#E1E4E8;">(tripView.</span><span style="color:#B392F0;">getEndPosLng</span><span style="color:#E1E4E8;">(), tripView.</span><span style="color:#B392F0;">getEndPosLat</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">          tripSummary.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(tripView.</span><span style="color:#B392F0;">getState</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> tripSummary;</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">orElseThrow</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripNotFoundException</span><span style="color:#E1E4E8;">(query.</span><span style="color:#B392F0;">getTripId</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">QueryHandler</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> TripSummary </span><span style="color:#6F42C1;">queryTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FetchTripQuery </span><span style="color:#E36209;">query</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripViewRepository.</span><span style="color:#6F42C1;">findById</span><span style="color:#24292E;">(query.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(tripView </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripSummary tripSummary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripSummary</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">          tripSummary.</span><span style="color:#6F42C1;">setId</span><span style="color:#24292E;">(tripView.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">          tripSummary</span></span>
<span class="line"><span style="color:#24292E;">              .</span><span style="color:#6F42C1;">setStartPos</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PositionVO</span><span style="color:#24292E;">(tripView.</span><span style="color:#6F42C1;">getStartPosLng</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                  tripView.</span><span style="color:#6F42C1;">getStartPosLat</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">          tripSummary.</span><span style="color:#6F42C1;">setEndPos</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PositionVO</span><span style="color:#24292E;">(tripView.</span><span style="color:#6F42C1;">getEndPosLng</span><span style="color:#24292E;">(), tripView.</span><span style="color:#6F42C1;">getEndPosLat</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">          tripSummary.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(tripView.</span><span style="color:#6F42C1;">getState</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tripSummary;</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">orElseThrow</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripNotFoundException</span><span style="color:#24292E;">(query.</span><span style="color:#6F42C1;">getTripId</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>下面代码中的 TripController 是行程管理服务 REST API 的实现，其中的 getTrip 方法使用 QueryGateway 的 query 方法来发送点对点的 FetchTripQuery 类型的查询请求，并把查询结果返回给客户端。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  QueryGateway queryGateway;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;{id}&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CompletableFuture&lt;</span><span style="color:#F97583;">TripSummary</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">getTrip</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      @</span><span style="color:#F97583;">PathVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.queryGateway</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FetchTripQuery</span><span style="color:#E1E4E8;">(tripId), TripSummary.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  QueryGateway queryGateway;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;{id}&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CompletableFuture&lt;</span><span style="color:#D73A49;">TripSummary</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getTrip</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      @</span><span style="color:#D73A49;">PathVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.queryGateway</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FetchTripQuery</span><span style="color:#24292E;">(tripId), TripSummary.class);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>本课时介绍了 CQRS 技术的两种实现方式，第一种方式是创建新的查询模型并进行存储，再通过事件来与更新模型中的数据保持一致；第二种方式是使用 Axon 框架提供的事件源和 CQRS 技术的支持。通过本课时的学习，你应该掌握根据应用的不同需求来选择合适的 CQRS 技术的实现方式。最后需要强调的是，CQRS 技术有其特定的适用范围，盲目使用该技术可能带来更多的问题，在使用之前需要充分调研和谨慎对待。</p>`,51),e=[o];function t(r,c,E,y,i,F){return n(),a("div",null,e)}const g=s(l,[["render",t]]);export{C as __pageData,g as default};
