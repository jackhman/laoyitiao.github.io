import{_ as o,j as e,o as t,g as c,k as p,s,h as n,Q as l}from"./chunks/framework.e0c66c3f.js";const P=JSON.parse('{"title":"模式原理分析 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6897) 32  状态模式：如何通过有限状态机监控功能的“状态变化”？.md","filePath":"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6897) 32  状态模式：如何通过有限状态机监控功能的“状态变化”？.md","lastUpdated":1696338709000}'),r={name:"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6897) 32  状态模式：如何通过有限状态机监控功能的“状态变化”？.md"},E=s("p",null,"状态模式的应用场景非常广泛，比如，线上购物订单、手机支付、音乐播放器、游戏、工作流引擎等场景。状态模式设计的初衷是应对同一个对象里不同状态变化时的不同行为的变化。那么，当我们遇见类似的场景时，该如何来使用状态模式呢？",-1),y=s("p",null,"话不多说，让我们开始今天的学习吧。",-1),i=s("h3",{id:"模式原理分析",tabindex:"-1"},[n("模式原理分析 "),s("a",{class:"header-anchor",href:"#模式原理分析","aria-label":'Permalink to "模式原理分析"'},"​")],-1),F=s("p",null,"状态模式的原始定义是：允许一个对象在其内部状态改变时改变它的行为，对象看起来似乎修改了自己的类一样。",-1),u=s("p",null,[n("这个定义确实有点抽象，简单来说，"),s("strong",null,"状态模式就是让一个对象通过定义一系列状态的变化来控制行为的变化"),n('。比如，给购买的物品定义几个包裹运送状态，已下单、运送中、已签收等，当"已下单"状态变为"运送中"状态时，物流货车会把包装好的包裹运送到指定地址，也就是说，当包裹的状态发生改变时，就会触发相应的外部操作。')],-1),A=s("p",null,"我们先来看看状态模式的标准 UML 图：",-1),d=l("",12),g=l("",25);function D(C,S,B,v,k,h){const a=e("Image");return t(),c("div",null,[E,y,i,F,u,A,p(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M01/49/B1/CioPOWDcE0yATvGQAADj5AhFr90365.png"}),d,p(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M01/49/A9/Cgp9HWDcE2KALQXBAACLlk93BXs706.png"}),g])}const x=o(r,[["render",D]]);export{P as __pageData,x as default};
