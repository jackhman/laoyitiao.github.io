import{_ as o,j as e,o as t,g as c,k as a,h as s,Q as p,s as l}from"./chunks/framework.cfb14fe0.js";const _=JSON.parse('{"title":"24组合模式：如何用树形结构处理对象之间的复杂关系？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md"},E=p("",8),y=p("",3),i=l("p",null,[s("除了树形结构以外，组合模式中还有"),l("strong",null,"环形结构"),s(" 和"),l("strong",null,"双向结构"),s("（如下图），其中，环形结构和数据结构中的单向链表很相似，而双向结构其实就是 Spring 中 Bean 常用的结构。")],-1),d=p("",10),F=p("",32);function A(b,u,D,g,C,h){const n=e("Image");return t(),c("div",null,[E,a(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3VjyAdaL-AABoXi-mYc0931.png"}),s(),y,a(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VkWAAa_UAACkaBZlf0E608.png"}),s(),i,a(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3Vk-AIZSUAAFRh5xYT_k955.png"}),s(),d,a(n,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VlqAYuyLAABhZFxXIQY493.png"}),s(),F])}const B=o(r,[["render",A]]);export{_ as __pageData,B as default};
