import{_ as a,j as l,o as p,g as o,k as e,Q as s}from"./chunks/framework.e0c66c3f.js";const B=JSON.parse('{"title":"生成 AST 抽象语法树 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7639) 12  模板解析：构造 AST 的完整流程是怎样的？（上）.md","filePath":"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7639) 12  模板解析：构造 AST 的完整流程是怎样的？（上）.md","lastUpdated":null}'),t={name:"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7639) 12  模板解析：构造 AST 的完整流程是怎样的？（上）.md"},c=s("",49),E=s("",17);function r(y,i,F,u,C,q){const n=l("Image");return p(),o("div",null,[c,e(n,{alt:"22.png",src:"https://s0.lgstatic.com/i/image/M00/43/D2/Ciqc1F88z3mACHOrAAFRdAq-Jxw187.png"}),E])}const d=a(t,[["render",r]]);export{B as __pageData,d as default};
