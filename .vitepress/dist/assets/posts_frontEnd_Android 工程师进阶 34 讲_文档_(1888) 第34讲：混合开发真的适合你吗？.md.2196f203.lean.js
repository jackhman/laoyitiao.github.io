import{_ as n,j as o,o as r,g as p,k as s,h as t,s as a,Q as l}from"./chunks/framework.a0d18f64.js";const J=JSON.parse('{"title":"第34讲：混合开发真的适合你吗？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1888) 第34讲：混合开发真的适合你吗？.md","filePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1888) 第34讲：混合开发真的适合你吗？.md","lastUpdated":1696682708000}'),i={name:"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1888) 第34讲：混合开发真的适合你吗？.md"},c=a("h1",{id:"第34讲-混合开发真的适合你吗",tabindex:"-1"},[t("第34讲：混合开发真的适合你吗？ "),a("a",{class:"header-anchor",href:"#第34讲-混合开发真的适合你吗","aria-label":'Permalink to "第34讲：混合开发真的适合你吗？"'},"​")],-1),d=a("p",null,"有很多人私底下问我需不需要学习一下 Flutter，我的答案都是肯定的。不管是 Android 工程师或者是 iOS 工程师，如果不说自己会点混合开发的技术，已经说不过去了。但是我们面临的问题是，不管是初期的 Xamarin，或是到后来的 React Native，再到现在的 Flutter 或者 uni-app，都需要工程师重新掌握一门新的语言，还需要我们解决跨平台端与原生端通信的诸多问题，所以在众多的跨平台混合开发方案中，我们需要慎重选择。",-1),h=a("p",null,"就我个人而言，我是非常推崇 Flutter 的。一方面是因为谷歌强大的背景，使我对它有天然的好感；另一方面截至目前 Flutter 在 GitHub 上已经有 95.8k 的 Star，如此火爆的程度使我们不得不对其多一些关注。",-1),u=a("p",null,"下图是一张描述整个 Flutter 框架的架构图。",-1),g=l("",8),_=a("p",null,'上述代码中，var1 开始是字符串类型"hello"，但是在程序运行时可以动态地修改为整型类型 19。',-1),y=a("h4",{id:"命名参数函数",tabindex:"-1"},[t("命名参数函数 "),a("a",{class:"header-anchor",href:"#命名参数函数","aria-label":'Permalink to "命名参数函数"'},"​")],-1),E=a("p",null,"命名参数函数顾名思义就是给参数定了个名字，如下所示：",-1),F=l("",4),m=l("",4),f=a("p",null,"上述方法中，我向 print 函数传入了 test 函数，并在调用 test 函数时传入了真正进行计算的 add 函数。",-1),A=a("h3",{id:"热重载-hot-reload",tabindex:"-1"},[t("热重载 Hot Reload "),a("a",{class:"header-anchor",href:"#热重载-hot-reload","aria-label":'Permalink to "热重载 Hot Reload"'},"​")],-1),b=a("p",null,"Flutter 最受欢迎的功能之一就是热重载，Flutter 的热重载（Hot Reload）功能可以在 App 无须重新启动应用的情况下快速、轻松地进行测试、构建用户界面、添加功能，以及修复错误。 具体效果如下图所示：",-1),w=a("p",null,"通过将更新后的源代码文件注入正在运行的 Dart 虚拟机（VM）中来实现热重载。在虚拟机使用新的字段和函数更新类后，Flutter 框架会自动重新构建 widget 树，以便快速查看更改的效果。通常可以在一秒之内重新加载并继续执行代码，就像刷新一个 Web 网页一样。并且 Flutter 的热重载是有状态的（stateful），因此 App 不需要重启就可以将代码修改的部分刷新到页面。",-1),C=a("h3",{id:"widget",tabindex:"-1"},[t("Widget "),a("a",{class:"header-anchor",href:"#widget","aria-label":'Permalink to "Widget"'},"​")],-1),k=a("p",null,'在 Flutter 中有"一切皆 widget"的概念，开发者几乎自始至终都是在与各种 widget 打交道，并且这些 widget 都是 Flutter 自己在 skia 渲染框架基础上，由 Flutter 自带引擎渲染。所以与 Android/iOS 原生组件不存在依赖性，这种实现方式一方面可以提高性能，另一方面对设备和系统版本有很好的兼容性，即使用户将 Android 或者 iOS 系统更新到新的版本，也丝毫不会对当前 Flutter 应用产生影响。',-1),S=a("p",null,"Flutter 中的 Widget 总体上分为两种：StatelessWidget 和 StatefulWidget。",-1),D=a("h4",{id:"statelesswidget",tabindex:"-1"},[t("StatelessWidget "),a("a",{class:"header-anchor",href:"#statelesswidget","aria-label":'Permalink to "StatelessWidget"'},"​")],-1),P=a("p",null,"StatelessWidget 表示不可变的 widget，这种 widget 只需要绘制一次即可。例如一些固定的标题、Icon 等，此类 widget 的特征不会在运行时发生变化。",-1),q=a("p",null,"我们在使用时直接继承它，然后通过 build 方法创建一个不可变的 widget 即可，如下所示：",-1),T=a("h4",{id:"statefulwidget",tabindex:"-1"},[t("StatefulWidget "),a("a",{class:"header-anchor",href:"#statefulwidget","aria-label":'Permalink to "StatefulWidget"'},"​")],-1),v=a("p",null,"StatefulWidget 则相反，其属性可能会在运行时发生变化，例如进度条、输入框等。在使用时需要继承 StatefulWidget，复写 createState 方法创建一个 State 对象，再通过 State 中的 build 方法创建一个 widget，后面每次状态变化时都会调用 build 方法重新绘制一个 widget。最后可以使用 setState 方法来触发 widget 更新，如下所示：",-1),x=l("",11);function W(B,N,I,O,V,M){const e=o("Image");return r(),p("div",null,[c,d,h,s(e,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/33/5A/Ciqc1F8P_cyAClMfAAB3x5a_qe8387.png"}),t(),u,s(e,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/33/5A/Ciqc1F8P_dSAUUKtAAGZWfKnE98391.png"}),t(),g,s(e,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/33/5A/Ciqc1F8P_eyAKaafAAGa6LhmZmY104.png"}),t(),_,y,E,s(e,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/33/65/CgqCHl8P_feAfOEIAAKnKvhizy8211.png"}),t(),F,s(e,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/33/5A/Ciqc1F8P_hWAElmMAAEJAr9u0h8350.png"}),t(),m,s(e,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/33/65/CgqCHl8P_gyAKLuwAACFJ9z2vvE511.png"}),t(),f,A,b,s(e,{alt:"hot_reload.gif",src:"https://s0.lgstatic.com/i/image/M00/33/5A/Ciqc1F8P_jOACho2AAw9laxZmT0299.gif"}),t(),w,C,k,S,D,P,q,s(e,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/33/5B/Ciqc1F8P_kSACCpRAABzYup1r2Y463.png"}),t(),T,v,s(e,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/33/66/CgqCHl8P_k6APJL5AAHOAecSHoA997.png"}),t(),x])}const R=n(i,[["render",W]]);export{J as __pageData,R as default};
