import{_ as o,j as t,o as e,g as p,k as n,s,h as l,Q as c}from"./chunks/framework.e0c66c3f.js";const L=JSON.parse('{"title":"悲观锁 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/096-Java 并发编程文档/(258) 第20讲：悲观锁和乐观锁的本质是什么？.md","filePath":"posts/backEnd/096-Java 并发编程文档/(258) 第20讲：悲观锁和乐观锁的本质是什么？.md","lastUpdated":1696338709000}'),i={name:"posts/backEnd/096-Java 并发编程文档/(258) 第20讲：悲观锁和乐观锁的本质是什么？.md"},r=s("p",null,"本课时我们会讲讲悲观锁和乐观锁。",-1),_=s("p",null,"首先我们看下悲观锁与乐观锁是如何进行分类的，悲观锁和乐观锁是从是否锁住资源的角度进行分类的。",-1),d=s("h3",{id:"悲观锁",tabindex:"-1"},[l("悲观锁 "),s("a",{class:"header-anchor",href:"#悲观锁","aria-label":'Permalink to "悲观锁"'},"​")],-1),E=s("p",null,"悲观锁比较悲观，它认为如果不锁住这个资源，别的线程就会来争抢，就会造成数据结果错误，所以悲观锁为了确保结果的正确性，会在每次获取并修改数据时，都把数据锁住，让其他线程无法访问该数据，这样就可以确保数据内容万无一失。",-1),h=s("p",null,"这也和我们人类中悲观主义者的性格是一样的，悲观主义者做事情之前总是担惊受怕，所以会严防死守，保证别人不能来碰我的东西，这就是悲观锁名字的含义。",-1),A=s("p",null,"我们举个例子，假设线程 A 和 B 使用的都是悲观锁，所以它们在尝试获取同步资源时，必须要先拿到锁。",-1),u=s("p",null,"假设线程 A 拿到了锁，并且正在操作同步资源，那么此时线程 B 就必须进行等待。",-1),g=s("p",null,"而当线程 A 执行完毕后，CPU 才会唤醒正在等待这把锁的线程 B 再次尝试获取锁。",-1),y=s("p",null,"如果线程 B 现在获取到了锁，才可以对同步资源进行自己的操作。这就是悲观锁的操作流程。",-1),m=s("h3",{id:"乐观锁",tabindex:"-1"},[l("乐观锁 "),s("a",{class:"header-anchor",href:"#乐观锁","aria-label":'Permalink to "乐观锁"'},"​")],-1),C=s("p",null,"乐观锁比较乐观，认为自己在操作资源的时候不会有其他线程来干扰，所以并不会锁住被操作对象，不会不让别的线程来接触它，同时，为了确保数据正确性，在更新之前，会去对比在我修改数据期间，数据有没有被其他线程修改过：如果没被修改过，就说明真的只有我自己在操作，那我就可以正常的修改数据；如果发现数据和我一开始拿到的不一样了，说明其他线程在这段时间内修改过数据，那说明我迟了一步，所以我会放弃这次修改，并选择报错、重试等策略。",-1),k=s("p",null,"这和我们生活中乐天派的人的性格是一样的，乐观的人并不会担忧还没有发生的事情，相反，他会认为未来是美好的，所以他在修改数据之前，并不会把数据给锁住。当然，乐天派也不会盲目行动，如果他发现事情和他预想的不一样，也会有相应的处理办法，他不会坐以待毙，这就是乐观锁的思想。",-1),v=s("p",null,"乐观锁的实现一般都是利用 CAS 算法实现的。我们举个例子，假设线程 A 此时运用的是乐观锁。那么它去操作同步资源的时候，不需要提前获取到锁，而是可以直接去读取同步资源，并且在自己的线程内进行计算。",-1),f=s("p",null,"当它计算完毕之后、准备更新同步资源之前，会先判断这个资源是否已经被其他线程所修改过。",-1),q=s("p",null,"如果这个时候同步资源没有被其他线程修改更新，也就是说此时的数据和线程 A 最开始拿到的数据是一致的话，那么此时线程 A 就会去更新同步资源，完成修改的过程。",-1),F=c("",21);function b(B,T,S,x,P,D){const a=t("Image");return e(),p("div",null,[r,_,d,E,h,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/A9/CgpOIF38fTSAPhRdAABUFKF4IW4912.png"}),A,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/A9/Cgq2xl38fTSAE0T3AABXxHZ9Gus225.png"}),u,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/A9/Cgq2xl38fTSALLQ8AABbKYnu-eg621.png"}),g,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/A9/CgpOIF38fTSAPYuRAABkLHzXEVA431.png"}),y,m,C,k,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/AA/Cgq2xl38fqeAFJ8QAABFSTPDdrc325.png"}),v,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/AA/CgpOIF38fqeAIE65AABSE0sY_RQ235.png"}),f,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/AD/Cgq2xl38g46AE_bVAABmy6oWA2I750.png"}),q,n(a,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/59/AA/Cgq2xl38fqeACYJNAACQDeJBU58075.png"}),F])}const J=o(i,[["render",b]]);export{L as __pageData,J as default};
