import{_ as t,j as o,o as e,g as c,k as l,h as s,Q as p,s as a}from"./chunks/framework.cfb14fe0.js";const j=JSON.parse('{"title":"第06讲：手动模式构建双Namenode+Yarn的Hadoop集群（下）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/042_大数据运维实战/(3208) 第06讲：手动模式构建双 Namenode+Yarn 的 Hadoop 集群（下）.md","filePath":"posts/devops/042_大数据运维实战/(3208) 第06讲：手动模式构建双 Namenode+Yarn 的 Hadoop 集群（下）.md","lastUpdated":1696682708000}'),r={name:"posts/devops/042_大数据运维实战/(3208) 第06讲：手动模式构建双 Namenode+Yarn 的 Hadoop 集群（下）.md"},y=p("",9),E=p("",4),i=p("",4),d=p("",4),g=p("",55),f=a("p",null,"由图可知，namenodemaster 目前是 Active 状态，还看到 Namespace、Namenode ID、Version、Cluster ID 等信息，这些信息在前面介绍配置文件时定义好的。此外，还能看到 HDFS 的 Summary 信息，前面课时中已经做过介绍了；另外，还有 NameNode Journal Status、NameNode Storage 及 DFS Storage Types 等信息，如下图所示：",-1),D=a("p",null,"其中，NameNode Journal Status 部分显示了 JournalNode 集群的节点信息以及目前处于 inprogress 的 edits 文件写的位置。NameNode Storage 部分显示了 NameNode 元数据的存放路径，可以看到元数据有两份互为镜像，且状态均为 active，这表明两个元数据均正常，如果元数据状态不是 Active，说明元数据有问题，需要检查对应路径下的元数据信息。最后 DFS Storage Types 部分，主要展示了 HDFS 的总存储容量以及活跃的节点数。",-1),B=a("p",null,"接着来看看 yarnserver 主机，此时 yarnserver 应该处于 standby 状态，访问 http:// yarnserver:50070，得到如下截图：",-1),m=a("p",null,"Yarnserver 上展示的 HDFS 集群状态跟 namenodemaster 主机上基本相同，不同的是 NameNode Journal Status 部分，因为是 standby 状态，所以对 JournalNode 集群是只读的。",-1),u=a("p",null,"下面测试下两个 NameNode 是否能够实现自动切换功能，测试方法很简单，可以将目前处于 Active 状态的 NameNode 的服务关闭，或者切断它的网络，然后观察另一个 NameNode 是否会自动从 Standby 状态变为 Active 状态。",-1),v=a("p",null,"如果高可用的 NameNode 配置正常，那么当 Active 状态的 NameNode 发生故障后，Standby 状态的 NameNode 会在几秒钟内自动接管服务，将状态转换为 Active，可以动手测试一下。",-1),h=a("h4",{id:"_10-验证-yarn-是否正常运行",tabindex:"-1"},[s("10. 验证 Yarn 是否正常运行 "),a("a",{class:"header-anchor",href:"#_10-验证-yarn-是否正常运行","aria-label":'Permalink to "10. 验证 Yarn 是否正常运行"'},"​")],-1),A=a("p",null,[s("在 ResourceManager 和 NodeManager 服务启动后，可通过访问 "),a("a",{href:"http://yarnserver:8088/cluster/nodes",target:"_blank",rel:"noreferrer"},"http://yarnserver:8088/cluster/nodes"),s(" 来检查 Yarn 资源管理器是否正常运行，如下图所示：")],-1),F=a("p",null,"上图中，显示了 yarn 资源管理器中可用的计算资源，主要是可用 CPU VCores、内存以及活跃的计算节点数，最下面显示的是每个节点的运行状态、节点地址以及节点可用的 CPU、内存等资源信息。目前集群总共三个计算节点，每个节点提供了 8 个 CPU 核、20GB 内存，所以 Yarn 总共可用的 CPU 资源为 24 核，内存资源为 60GB。",-1),_=a("h3",{id:"总结",tabindex:"-1"},[s("总结 "),a("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),b=a("p",null,"本课时主要介绍了如何通过手动方式去构建一个双 Namenode + Yarn 的 Hadoop 集群系统，手动部署方式有助于我们了解 Haoop 的内部运作机制和技术细节，这对于大数据运维来说非常重要。",-1);function N(k,O,H,C,M,P){const n=o("Image");return e(),c("div",null,[y,l(n,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B4/CgqCHl6-Wt2AV5l0AAFCOLCd2K4775.png"}),s(),E,l(n,{alt:"图片2-1.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B4/Ciqc1F6-WxCABpPmAAE9vEHRMgc089.png"}),s(),l(n,{alt:"图片2-2.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B4/Ciqc1F6-WxaAUnnLAAGL3rsyvBU330.png"}),s(),l(n,{alt:"图片2-3.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B4/Ciqc1F6-Wx2AEUU0AAG1MKpUL-A807.png"}),s(),i,l(n,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B5/CgqCHl6-W0OAETx9AAC4Ao4YdUw462.png"}),s(),d,l(n,{alt:"图片4-1.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B5/Ciqc1F6-W2qADyrVAAFeCAR3VRo004.png"}),s(),l(n,{alt:"图片4-2.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B5/Ciqc1F6-W2-AYKY5AAFxWlwVqZ0347.png"}),s(),l(n,{alt:"图片4-3.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B5/CgqCHl6-W3WAMosXAADyhIAnDJM901.png"}),s(),g,l(n,{alt:"image4.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B6/Ciqc1F6-XMKAJagjAACPxB44lJU201.png"}),s(),f,l(n,{alt:"image5.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B6/Ciqc1F6-XMqAM4oAAADRhtEnqsY823.png"}),s(),D,B,l(n,{alt:"image6.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B6/CgqCHl6-XNOAFkL5AACO-vATZLk481.png"}),s(),m,u,v,h,A,l(n,{alt:"image7.png",src:"https://s0.lgstatic.com/i/image/M00/0A/B6/CgqCHl6-XNuAMmICAAGXC0we9l4454.png"}),s(),F,_,b])}const S=t(r,[["render",N]]);export{j as __pageData,S as default};
