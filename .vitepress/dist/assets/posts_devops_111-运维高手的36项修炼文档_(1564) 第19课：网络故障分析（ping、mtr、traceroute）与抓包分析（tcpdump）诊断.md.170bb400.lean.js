import{_ as o,D as n,o as l,g as c,J as p,h as t,Q as e,m as s}from"./chunks/framework.f67d7268.js";const B=JSON.parse('{"title":"第19课：网络故障分析（ping、mtr、traceroute）与抓包分析（tcpdump）诊断","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/111-运维高手的36项修炼文档/(1564) 第19课：网络故障分析（ping、mtr、traceroute）与抓包分析（tcpdump）诊断.md","filePath":"posts/devops/111-运维高手的36项修炼文档/(1564) 第19课：网络故障分析（ping、mtr、traceroute）与抓包分析（tcpdump）诊断.md","lastUpdated":1696682708000}'),r={name:"posts/devops/111-运维高手的36项修炼文档/(1564) 第19课：网络故障分析（ping、mtr、traceroute）与抓包分析（tcpdump）诊断.md"},i=e("",12),u=e("",10),d=s("p",null,[t('我们会看到在第七跳的时候，会一直是 "'),s("em",null,"."),t(" ."),s("em",null,'"、"'),t(" ."),s("em",null,"."),t('"，没有新的数据在客户端显示。这种情况就可能是服务端因为一些安全策略关闭了对 UDP 数据包返回数据（ICMP 不可达的错误响应），所以我的客户端会不断向服务端去发送 UDP 数据包。')],-1),h=s("p",null,"这时我在 -n 的选项之前再加一个 -I，表示客户端向目标服务端发送 ICMP 的数据包，我们再来看一下效果，发现在发送到第 12 条的时候，就到了目标服务器端，然后直接给出了一个反馈，完成了整个 traceroute 过程。",-1),_=e("",23),g=s("p",null,"接下来直接在服务端执行这样的命令，抓取的数据包改为 5 个，然后我在客户端执行 curl 命令，请求服务端目标地址是 6060 的端口，发送一个 HTTP 协议。",-1),y=s("p",null,"这个时候我们可以在服务端看到抓包结果，客户端 7 个数据包，采集了 5 个数据包。所以在本地 执行ls命令 会生成一个 test.cap 的文件。打开这个数据包，看到的是一些二进制的格式，这个是无法通过文本来查看的，我们需要通过一些其他分析工具分析（如：WireShark）。",-1),E=s("p",null,"tcpdump使用样例，这里介绍另外一种方式，就是 tcpdump 后面加了一个 -vv，vv 表示展示结果的详细程度，一个 v 的级别更为简单，两个 v 就更为详细，这种方式 tcpdump 可以通过加入 v 的个数来设置抓取结果详细程度。",-1),C=s("p",null,"区别于上面这个命令，我这里加了一个 host，表示只抓取发送的原地址和发送的地址，都是 IP 为 192.168.1.104 的数据包。",-1),m=s("p",null,"这两种演示方式都是在数据包中加入 -w，也就是采集到一个文件里，如果我们不加 -w，在终端里就可以直接看到它整个抓包的。当然这些数据不是非常的方便进行分析，所以我们可以通过采集到 cap 文件的方式（-w 选项），然后通过一些专业的分析工具得到更加详细的或者更加方便的查看。",-1),T=s("p",null,"接下来我们就可以把刚刚采集下来的文件，通过一些专业的工具进行分析。这里推荐你使用 WireShark，我们可以在客户端先安装好 WireShark 工具，然后在里面打开采集好的问天，我们会看到在这样的一个界面，它包含整个客户端和服务端发送数据包连接情况。",-1),P=s("p",null,"另外， WireShark 也是一个很好的客户端抓包工具，因为它是一个图形化的展示，所以在客户端我们可以用 WireShark 直接抓取数据包。",-1),A=s("p",null,"比如我们想要去了解 HTTP 的长连接和 TCP 连接的关系，在这种场景下可能就需要通过抓包，去整体分析 TCP 的建连以及 HTTP 的长连接的数据包发包过程，来判断长连接在这种业务场景下是否能够完整的执行每一次请求，这就是一个典型需要用到抓包工具分析的场景。",-1),M=s("p",null,"对于 tcpdump\\WireShark 的具体使用，课时中就不做过多的讲解了，如果感兴趣的话，你可以在网上搜索更多的资料。",-1),D=s("p",null,"课时最后再给你提及一个专业性更强的抓包分析工具 charles，charles 是 Mac下非常好用的一款分析 HTTP 和 HTTPS 协议数据包的工具，相对于 WireShark 而言，它更加偏重于对 HTTP 和 HTTPS 的数据包协议包的分析。所以如果你是一个网站类的技术工程师，希望帮助分析 HTTP 和 HTTPS 协议数据包的请求、响应情况，那么这里十分推荐你 charles。",-1);function F(I,q,v,k,S,b){const a=n("Image");return l(),c("div",null,[i,p(a,{alt:"1.png",src:"https://s0.lgstatic.com/i/image3/M01/05/AD/CgoCgV6esyWAGx1tAAGuPOyHnUo585.png"}),t(),u,p(a,{alt:"2.png",src:"https://s0.lgstatic.com/i/image3/M01/05/AD/CgoCgV6es2GADVtdAAHGVu-elhg712.png"}),t(),d,p(a,{alt:"3.png",src:"https://s0.lgstatic.com/i/image3/M01/12/DC/Ciqah16es26ACqVnAAHPywKy70k381.png"}),t(),h,p(a,{alt:"4.png",src:"https://s0.lgstatic.com/i/image3/M01/05/AD/CgoCgV6es36AaTLIAAI7PnT0K7I888.png"}),t(),_,p(a,{alt:"5.png",src:"https://s0.lgstatic.com/i/image3/M01/05/AF/CgoCgV6etK2AfgBEAAEfyWiBW5E145.png"}),t(),g,p(a,{alt:"6.png",src:"https://s0.lgstatic.com/i/image3/M01/12/DE/Ciqah16etLWAcs2dAAC3nOSs2iU257.png"}),t(),y,p(a,{alt:"7.png",src:"https://s0.lgstatic.com/i/image3/M01/12/DE/Ciqah16etMCAKir4AAGFAKrq2qs530.png"}),t(),E,C,m,p(a,{alt:"8.png",src:"https://s0.lgstatic.com/i/image3/M01/05/AF/CgoCgV6etMyAcMDhAAchCFSUgLE411.png"}),t(),T,p(a,{alt:"9.png",src:"https://s0.lgstatic.com/i/image3/M01/12/DE/Ciqah16etNSAWvR2AAj7TMGILF4299.png"}),t(),P,A,M,D])}const R=o(r,[["render",F]]);export{B as __pageData,R as default};
