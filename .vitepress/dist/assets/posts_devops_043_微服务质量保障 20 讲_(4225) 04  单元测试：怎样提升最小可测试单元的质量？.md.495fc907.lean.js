import{_ as s,j as i,o as n,g as l,k as e,h as t,Q as a,s as o}from"./chunks/framework.a0d18f64.js";const S=JSON.parse('{"title":"04单元测试：怎样提升最小可测试单元的质量？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/043_微服务质量保障 20 讲/(4225) 04  单元测试：怎样提升最小可测试单元的质量？.md","filePath":"posts/devops/043_微服务质量保障 20 讲/(4225) 04  单元测试：怎样提升最小可测试单元的质量？.md","lastUpdated":1696682708000}'),p={name:"posts/devops/043_微服务质量保障 20 讲/(4225) 04  单元测试：怎样提升最小可测试单元的质量？.md"},c=a("",5),g=a("",11),_=o("p",null,[t("如图，测试订单类的获取总价方法（Order.getTotalPrice()）时会真实调用用户类的优惠等级方法（User.reductionLevel()）和商品类的商品单价方法（Goods.getUnitPrice()）。将被测试单元视为黑盒子，直接对其进行测试，这种单元测试称之为"),o("strong",null,"社交型单元测试（Sociable Unit Testing）"),t("。")],-1),h=o("h4",{id:"_2-孤立型单元测试-solitary-unit-testing",tabindex:"-1"},[t("2. 孤立型单元测试（Solitary Unit Testing） "),o("a",{class:"header-anchor",href:"#_2-孤立型单元测试-solitary-unit-testing","aria-label":'Permalink to "2. 孤立型单元测试（Solitary Unit Testing）"'},"​")],-1),u=a("",4),m=o("p",null,[o("strong",null,"由上图可知，在微服务架构中，不同组成使用的单元测试类型不同：")],-1),d=a("",13),k=a("",13);function b(f,A,T,q,w,v){const r=i("Image");return n(),l("div",null,[c,e(r,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/39/96/Ciqc1F8f7cWAVsrMAABFwThSg-U472.png"}),t(),g,e(r,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/39/A1/CgqCHl8f7e6AKMwnAABnkatxrFM928.png"}),t(),_,h,e(r,{alt:"Lark20200728-165448.png",src:"https://s0.lgstatic.com/i/image/M00/39/96/Ciqc1F8f7h-AU6TmAAC372KA44g862.png"}),t(),u,e(r,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/39/A2/CgqCHl8f7kiAI3ksAAFYtUA3syQ407.png"}),t(),m,e(r,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/39/A2/CgqCHl8f7lqAYCVuAACnpSlf1e4918.png"}),t(),d,e(r,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/39/A2/CgqCHl8f7peAZGzxAABmknW8jXs450.png"}),t(),k])}const P=s(p,[["render",b]]);export{S as __pageData,P as default};
