import{_ as o,j as l,o as p,g as r,k as n,s,h as a,Q as t}from"./chunks/framework.b3d8e22e.js";const D=JSON.parse('{"title":"Leader 的协调过程 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ZooKeeper源码分析与实战_文档/(3144) 第14讲：Leader 选举：如何保证分布式数据的一致性？.md","filePath":"posts/backEnd/ZooKeeper源码分析与实战_文档/(3144) 第14讲：Leader 选举：如何保证分布式数据的一致性？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/ZooKeeper源码分析与实战_文档/(3144) 第14讲：Leader 选举：如何保证分布式数据的一致性？.md"},E=s("p",null,"在前面的课程中，我们介绍了 ZooKeeper 集群服务的相关知识，我们知道在 ZooKeeper 集群中，服务器分为 Leader 服务器、 Follower 服务器以及 Observer 服务器。",-1),y=s("p",null,"可以这样认为，Leader 选举是一个过程，在这个过程中 ZooKeeper 主要做了两个重要工作，一个是数据同步，另一个是选举出新的 Leader 服务器。今天我们主要先介绍第一个工作，ZooKeeper 集群中的数据同步问题。",-1),i=s("h3",{id:"leader-的协调过程",tabindex:"-1"},[a("Leader 的协调过程 "),s("a",{class:"header-anchor",href:"#leader-的协调过程","aria-label":'Permalink to "Leader 的协调过程"'},"​")],-1),d=s("p",null,[a("在分布式系统中有一个著名的 CAP 定理，是说一个分布式系统不能同时满足一致性、可用性，以及分区容错性。今天我们要讲的就是一致性。其实 ZooKeeper 中实现的一致性也不是强一致性，即集群中各个服务器上的数据每时每刻都是保持一致的特性。在 ZooKeeper 中，采用的是最终一致的特性，"),s("strong",null,"即经过一段时间后，ZooKeeper 集群服务器上的数据最终保持一致的特性"),a("。")],-1),F=s("p",null,"在 ZooKeeper 集群中，Leader 服务器主要负责处理事物性的请求，而在接收到一个客户端的事务性请求操作时，Leader 服务器会先向集群中的各个机器针对该条会话发起投票询问。",-1),u=s("p",null,"要想实现 ZooKeeper 集群中的最终一致性，我们先要确定什么情况下会对 ZooKeeper 集群服务产生不一致的情况。如下图所示：",-1),g=s("p",null,"在集群初始化启动的时候，首先要同步集群中各个服务器上的数据。而在集群中 Leader 服务器崩溃时，需要选举出新的 Leader 而在这一过程中会导致各个服务器上数据的不一致，所以当选举出新的 Leader 服务器后需要进行数据的同步操作。",-1),h=s("h3",{id:"底层实现",tabindex:"-1"},[a("底层实现 "),s("a",{class:"header-anchor",href:"#底层实现","aria-label":'Permalink to "底层实现"'},"​")],-1),_=s("p",null,[a("与上面介绍的一样，我们的底层实现讲解主要围绕 ZooKeeper 集群中数据一致性的底层实现。ZooKeeper 在集群中采用的是多数原则方式，即"),s("strong",null,"当一个事务性的请求导致服务器上的数据发生改变时，ZooKeeper 只要保证集群上的多数机器的数据都正确变更了，就可以保证系统数据的一致性。"),a(" 这是因为在一个 ZooKeeper 集群中，每一个 Follower 服务器都可以看作是 Leader 服务器的数据副本，需要保证集群中大多数机器数据是一致的，这样在集群中出现个别机器故障的时候，ZooKeeper 集群依然能够保证稳定运行。")],-1),L=s("p",null,"在 ZooKeeper 集群服务的运行过程中，数据同步的过程如下图所示。当执行完数据变更的会话请求时，需要对集群中的服务器进行数据同步。",-1),w=t("",25);function Z(b,K,v,f,C,m){const e=l("Image");return p(),r("div",null,[E,y,i,d,F,u,n(e,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/22/F4/CgqCHl7siPqAEgUiAAAsZnldQKA321.png"}),g,h,_,L,n(e,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/22/F4/CgqCHl7siSSAGaKOAABaTR2X0Wo408.png"}),w])}const k=o(c,[["render",Z]]);export{D as __pageData,k as default};
