import{_ as o,j as e,o as t,g as c,k as p,h as a,s,Q as l}from"./chunks/framework.e0c66c3f.js";const S=JSON.parse('{"title":"创建第一个 Spring Boot Web 应用程序 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5718) 03  多维配置：如何使用 Spring Boot 中的配置体系？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5718) 03  多维配置：如何使用 Spring Boot 中的配置体系？.md","lastUpdated":1696338709000}'),r={name:"posts/backEnd/Spring Boot 实战开发_文档/(5718) 03  多维配置：如何使用 Spring Boot 中的配置体系？.md"},i=s("p",null,"配置体系是基于 Spring Boot 框架开发应用程序的基础，而自动配置也是该框架的核心功能之一。今天我将带领大家梳理使用 Spring Boot 配置体系的系统方法。我们先从创建和运行第一个 Web 应用程序开始吧。",-1),E=s("h3",{id:"创建第一个-spring-boot-web-应用程序",tabindex:"-1"},[a("创建第一个 Spring Boot Web 应用程序 "),s("a",{class:"header-anchor",href:"#创建第一个-spring-boot-web-应用程序","aria-label":'Permalink to "创建第一个 Spring Boot Web 应用程序"'},"​")],-1),y=s("p",null,"基于 Spring Boot 创建 Web 应用程序的方法有很多，但最简单、最直接的方法是使用 Spring 官方提供的 Spring Initializer 初始化模板。",-1),d=s("p",null,[a("初始化使用操作：直接访问 Spring Initializer 网站（"),s("a",{href:"http://start.spring.io/",target:"_blank",rel:"noreferrer"},"http://start.spring.io/"),a("），选择创建一个 Maven 项目并指定相应的 Group 和 Artifact，然后在添加的依赖中选择 Spring Web，点击生成即可。界面效果下图所示：")],-1),u=l("",10),g=l("",12),h=l("",35);function m(v,b,C,F,k,f){const n=e("Image");return t(),c("div",null,[i,E,y,d,p(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/71/0D/Ciqc1F-83-KAYTQAAADMrUH44hQ767.png"}),a(),u,p(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/71/0D/Ciqc1F-83_CAMxyvAABNmxMQRXc212.png"}),g,p(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/71/19/CgqCHl-83_2AOKfAAAAKdvXQRn8485.png"}),a(),h])}const D=o(r,[["render",m]]);export{S as __pageData,D as default};
