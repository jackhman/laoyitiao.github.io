import{_ as l,j as o,o as e,g as t,k as a,h as n,Q as p,s as r}from"./chunks/framework.cfb14fe0.js";const h=JSON.parse('{"title":"第21讲：如何使用Saga模式实现行程验证","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1825) 第21讲：如何使用 Saga 模式实现行程验证.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1825) 第21讲：如何使用 Saga 模式实现行程验证.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1825) 第21讲：如何使用 Saga 模式实现行程验证.md"},E=p('<h1 id="第21讲-如何使用saga模式实现行程验证" tabindex="-1">第21讲：如何使用Saga模式实现行程验证 <a class="header-anchor" href="#第21讲-如何使用saga模式实现行程验证" aria-label="Permalink to &quot;第21讲：如何使用Saga模式实现行程验证&quot;">​</a></h1><p>上一课时对 Saga 模式进行了概念上的介绍，本课时将介绍 Saga 模式在实际开发中的应用，涉及示例应用中<strong>创建行程</strong> 和<strong>取消行程</strong> 这两个业务场景。Eventuate Tram 和 Axon 框架都提供了对 Saga 模式的支持，示例应用使用的是 Eventuate Tram 框架。Saga 分成<strong>编制型</strong> 和<strong>编排型</strong>两类，本课时将通过两个不同的业务事务来分别说明。创建行程的业务使用编制型 Saga 来实现，而取消行程的业务使用编排型 Saga 来实现，其中又以编制型 Saga 为重点。</p><h3 id="编制型-saga" tabindex="-1">编制型 Saga <a class="header-anchor" href="#编制型-saga" aria-label="Permalink to &quot;编制型 Saga&quot;">​</a></h3><p>编制型 Saga 使用一个协调者来管理 Saga 的生命周期，每个 Saga 描述一个业务事务。Saga 的定义用来描述对应的业务事务流程，主要包含具体的步骤，以及步骤之间的递进关系。Saga 定义中有多个参与者，每个参与者可以接受命令并返回响应。在微服务架构的应用中，参与者通常来自不同的微服务。</p><p>在运行时，每个 Saga 定义会产生多个实例，每个实例表示业务事务的一次执行。以创建行程为例，每个行程对象的创建过程都有与之对应的 Saga 实例，该实例的状态会被持久化下来。Eventuate Tram 使用关系型数据库来保存 Saga 实例。</p><p>Saga 定义可以看成是一个状态机的描述，状态机中的状态来自 Saga 所工作的领域对象，通常是聚合的根实体。状态机中的状态变迁来自对 Saga 参与者所提供的命令的调用，以及命令的回应消息。根据命令的回应结果，状态机转换到不同的状态，当状态机处于某个状态时，会调用与当前状态相关的参与者的命令。</p><h4 id="了解业务事务" tabindex="-1">了解业务事务 <a class="header-anchor" href="#了解业务事务" aria-label="Permalink to &quot;了解业务事务&quot;">​</a></h4><p>创建 Saga 的第一步是了解所要描述的业务事务，典型的做法是使用流程图来描述。下图是创建行程的流程图。</p>',8),y=r("p",null,"从这个流程图中，可以识别出创建行程的 Saga 中的参与者，以及每个参与者需要支持的命令，如下表所示。",-1),i=p(`<h4 id="处理命令" tabindex="-1">处理命令 <a class="header-anchor" href="#处理命令" aria-label="Permalink to &quot;处理命令&quot;">​</a></h4><p>下一步是在每个微服务中处理与 Saga 相关的命令。在第 16 课时中已经介绍了 Eventuate Tram 框架中的命令的用法。Saga 参与者所使用的命令与普通的命令是相似的，只不过 Saga 中的命令的回应要区分成功和失败这两种情况，这是通过命令消息中特定的消息头的值来确定的。当接收到命令的失败回应时，需要执行补偿操作。</p><p>下面代码中的 TripValidationServiceCommandHandlers 类用来定义行程验证服务中，对验证行程的命令 ValidateTripCommand 的处理器。这里需要注意的是，创建 CommandHandlers 对象时使用的是 Saga 参与者特有的 SagaCommandHandlersBuilder 类，而不是通用的 CommandHandlersBuilder 类。</p><p>处理 ValidateTripCommand 命令的 validateTrip 方法调用的是 TripValidationService 类的 validateTrip 方法来进行验证。验证时执行的操作包括检查发起行程的乘客是否处于被封禁的状态，以及行程的距离是否超过预设的限制值。如果行程验证成功，则使用 withSuccess 方法返回表示成功的消息；如果验证失败，则使用 withFailure 方法返回以 InvalidTripReply 对象作为载荷的错误消息。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@Component</span></span>
<span class="line"><span style="color:#E1E4E8;">@Slf4j</span></span>
<span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripValidationServiceCommandHandlers</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripValidationService </span><span style="color:#FFAB70;">tripValidationService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CommandHandlers </span><span style="color:#B392F0;">commandHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> SagaCommandHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">fromChannel</span><span style="color:#E1E4E8;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onMessage</span><span style="color:#E1E4E8;">(ValidateTripCommand.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::validateTrip)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Message </span><span style="color:#B392F0;">validateTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">CommandMessage</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">ValidateTripCommand</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">cm</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripValidationService.</span><span style="color:#B392F0;">validateTrip</span><span style="color:#E1E4E8;">(cm.</span><span style="color:#B392F0;">getCommand</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">withSuccess</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (final TripValidationException e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Trip is not valid&quot;</span><span style="color:#E1E4E8;">, e);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">withFailure</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">InvalidTripReply</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@Component</span></span>
<span class="line"><span style="color:#24292E;">@Slf4j</span></span>
<span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripValidationServiceCommandHandlers</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripValidationService </span><span style="color:#E36209;">tripValidationService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CommandHandlers </span><span style="color:#6F42C1;">commandHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> SagaCommandHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">fromChannel</span><span style="color:#24292E;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onMessage</span><span style="color:#24292E;">(ValidateTripCommand.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::validateTrip)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Message </span><span style="color:#6F42C1;">validateTrip</span><span style="color:#24292E;">(</span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">CommandMessage</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">ValidateTripCommand</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">cm</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripValidationService.</span><span style="color:#6F42C1;">validateTrip</span><span style="color:#24292E;">(cm.</span><span style="color:#6F42C1;">getCommand</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withSuccess</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (final TripValidationException e) {</span></span>
<span class="line"><span style="color:#24292E;">      log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Trip is not valid&quot;</span><span style="color:#24292E;">, e);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">withFailure</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">InvalidTripReply</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Saga 参与者的命令处理器的配置方式也发生了变化，如下面的代码所示。CommandDispatcher 对象使用 SagaCommandDispatcherFactory 来创建，而不是普通的 CommandDispatcherFactory 对象。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableAutoConfiguration</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Import</span><span style="color:#E1E4E8;">({SagaParticipantConfiguration.class})</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">ComponentScan</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripValidationServiceConfiguration</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CommandDispatcher </span><span style="color:#B392F0;">commandDispatcher</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripValidationServiceCommandHandlers </span><span style="color:#FFAB70;">commandHandlers</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> SagaCommandDispatcherFactory </span><span style="color:#FFAB70;">sagaCommandDispatcherFactory</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sagaCommandDispatcherFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;tripValidationServiceDispatcher&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            commandHandlers.</span><span style="color:#B392F0;">commandHandlers</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableAutoConfiguration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Import</span><span style="color:#24292E;">({SagaParticipantConfiguration.class})</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">ComponentScan</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripValidationServiceConfiguration</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CommandDispatcher </span><span style="color:#6F42C1;">commandDispatcher</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripValidationServiceCommandHandlers </span><span style="color:#E36209;">commandHandlers</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> SagaCommandDispatcherFactory </span><span style="color:#E36209;">sagaCommandDispatcherFactory</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sagaCommandDispatcherFactory</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tripValidationServiceDispatcher&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            commandHandlers.</span><span style="color:#6F42C1;">commandHandlers</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>除了行程验证服务之外，行程管理服务和支付服务中的命令处理使用相似的方式来实现。</p><h4 id="saga-定义" tabindex="-1">Saga 定义 <a class="header-anchor" href="#saga-定义" aria-label="Permalink to &quot;Saga 定义&quot;">​</a></h4><p>第三步是创建 Saga 定义，Eventuate Tram 提供了一种简单的 DSL 来描述 Saga 的定义。下面的代码中是创建行程的 CreateTripSaga 类。Saga 是所有 Saga 的接口，其中的方法 getSagaDefinition 用来返回表示 Saga 定义的 SagaDefinition 接口的对象。Saga 和 SagaDefinition 的类型参数 Data 表示该 Saga 所关联的上下文对象的类型。CreateTripSaga 类实现的是 SimpleSaga 接口，而 SimpleSaga 同时继承了 Saga 和 SimpleSagaDsl 接口。SimpleSagaDsl 接口提供了描述 Saga 定义的 DSL 支持，其中默认方法 step 返回一个构建 Saga 定义的 StepBuilder 对象。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@Component</span></span>
<span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSaga</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SimpleSaga</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CreateTripSagaState</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> final SagaDefinition</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">CreateTripSagaState</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">sagaDefinition</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSaga</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">TripServiceProxy</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">tripService</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">TripValidationServiceProxy</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">tripValidationService</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">PaymentServiceProxy</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">paymentService</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sagaDefinition </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withCompensation</span><span style="color:#E1E4E8;">(tripService.reject,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::createRejectTripCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">invokeParticipant</span><span style="color:#E1E4E8;">(tripValidationService.validateTrip,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::createValidateTripCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">invokeParticipant</span><span style="color:#E1E4E8;">(paymentService.createPayment,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::createPaymentCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">invokeParticipant</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::paymentRequired, paymentService.makePayment,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::makePaymentCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onReply</span><span style="color:#E1E4E8;">(PaymentFailedReply.class,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::handlePaymentFailedReply)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onReply</span><span style="color:#E1E4E8;">(Success.class, (state, success) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> state.</span><span style="color:#B392F0;">markAsPaid</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">invokeParticipant</span><span style="color:#E1E4E8;">(CreateTripSagaState::shouldConfirmTrip,</span></span>
<span class="line"><span style="color:#E1E4E8;">            tripService.confirm,</span></span>
<span class="line"><span style="color:#E1E4E8;">            CreateTripSagaState::createConfirmTripCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">step</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">invokeParticipant</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            ((Predicate</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">CreateTripSagaState</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">) CreateTripSagaState::shouldConfirmTrip)</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">negate</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">            tripService.reject, CreateTripSagaState::createRejectTripCommand)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> SagaDefinition</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">CreateTripSagaState</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSagaDefinition</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sagaDefinition;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@Component</span></span>
<span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSaga</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SimpleSaga</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CreateTripSagaState</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> final SagaDefinition</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">CreateTripSagaState</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">sagaDefinition</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSaga</span><span style="color:#24292E;">(</span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">TripServiceProxy</span><span style="color:#24292E;"> </span><span style="color:#E36209;">tripService</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">TripValidationServiceProxy</span><span style="color:#24292E;"> </span><span style="color:#E36209;">tripValidationService</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">final</span><span style="color:#24292E;"> </span><span style="color:#E36209;">PaymentServiceProxy</span><span style="color:#24292E;"> </span><span style="color:#E36209;">paymentService</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sagaDefinition </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withCompensation</span><span style="color:#24292E;">(tripService.reject,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::createRejectTripCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">invokeParticipant</span><span style="color:#24292E;">(tripValidationService.validateTrip,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::createValidateTripCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">invokeParticipant</span><span style="color:#24292E;">(paymentService.createPayment,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::createPaymentCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">invokeParticipant</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::paymentRequired, paymentService.makePayment,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::makePaymentCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onReply</span><span style="color:#24292E;">(PaymentFailedReply.class,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::handlePaymentFailedReply)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onReply</span><span style="color:#24292E;">(Success.class, (state, success) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> state.</span><span style="color:#6F42C1;">markAsPaid</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">invokeParticipant</span><span style="color:#24292E;">(CreateTripSagaState::shouldConfirmTrip,</span></span>
<span class="line"><span style="color:#24292E;">            tripService.confirm,</span></span>
<span class="line"><span style="color:#24292E;">            CreateTripSagaState::createConfirmTripCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">step</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">invokeParticipant</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            ((Predicate</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">CreateTripSagaState</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">) CreateTripSagaState::shouldConfirmTrip)</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">negate</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">            tripService.reject, CreateTripSagaState::createRejectTripCommand)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> SagaDefinition</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">CreateTripSagaState</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSagaDefinition</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sagaDefinition;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>StepBuilder 类中的方法用来描述 Saga 定义的每个步骤中可以执行的操作，如下表所示。</p>`,12),F=p(`<p>invokeParticipant 和 withCompensation 方法描述的操作以发送命令的形式来完成。在 Saga 定义中，只需要描述如何创建命令对象即可，命令以 CommandWithDestination 对象来表示。在 Saga 实例执行到对应的步骤时，框架会负责发送相应的命令。</p><p>创建命令对象的第一种方式是提供 Function&lt;Data, CommandWithDestination&gt; 类型的函数，函数的参数是 Saga 实例当前的上下文对象，返回值是 CommandWithDestination 对象。第二种方式是提供一个 CommandEndpoint 对象来描述发送命令的终端，以及 Function&lt;Data, C&gt; 类型的函数来创建命令对象。类型参数 C 是命令对象的类型。CommandEndpoint 中包含了命令发送的通道、命令类和可能的回应类。</p><p>在下面的代码中，validateTrip 是发送 ValidateTripCommand 命令的终端，通过 CommandEndpointBuilder 构建器来创建，其中的 withReply 方法声明了 ValidateTripCommand 命令的成功响应 Success 类和错误响应 InvalidTripReply 类。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Component</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripValidationServiceProxy</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CommandEndpoint&lt;</span><span style="color:#F97583;">ValidateTripCommand</span><span style="color:#E1E4E8;">&gt; validateTrip </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CommandEndpointBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">forCommand</span><span style="color:#E1E4E8;">(ValidateTripCommand.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">withChannel</span><span style="color:#E1E4E8;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">withReply</span><span style="color:#E1E4E8;">(Success.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">withReply</span><span style="color:#E1E4E8;">(InvalidTripReply.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Component</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripValidationServiceProxy</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CommandEndpoint&lt;</span><span style="color:#D73A49;">ValidateTripCommand</span><span style="color:#24292E;">&gt; validateTrip </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CommandEndpointBuilder</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">forCommand</span><span style="color:#24292E;">(ValidateTripCommand.class)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">withChannel</span><span style="color:#24292E;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">withReply</span><span style="color:#24292E;">(Success.class)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">withReply</span><span style="color:#24292E;">(InvalidTripReply.class)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们再回到 CreateTripSaga 类的定义，看一下 Saga 的定义是如何与业务流程关联起来的。第一个步骤对应的是创建初始的行程对象，行程对象与 Saga 实例同时创建，因此不需要发送额外的命令来创建。这个步骤的补偿操作是通过 TripServiceProxy 中的 reject 命令终端来发送 RejectTripCommand 命令，该命令的处理器负责把行程对象的状态改为已拒绝。</p><p>第二个步骤对应的操作是进行行程验证，通过 TripValidationServiceProxy 中的 validateTrip 命令终端来发送 ValidateTripCommand 命令。第三个步骤对应的是创建支付记录，通过 PaymentServiceProxy 中的 createPayment 命令终端来发送 CreatePaymentCommand 命令。</p><p>第四个步骤对应的是完成支付，不过这个步骤中的动作只有在满足一定的条件时才会被执行，对应的条件通过 invokeParticipant 方法的第一个 Predicate 类型的参数来表示。CreateTripSagaState 对象的 paymentRequired 方法用来判断行程是否需要提前支付，如果是的话，通过 PaymentServiceProxy 对象中的 makePayment 命令终端来发送 MakePaymentCommand 命令，该命令有成功和失败两种不同的回应。onReply 方法的作用是根据回应对象的类型来执行不同的操作。</p><p>最后两个步骤用来确定行程的状态，可以是已确认或已拒绝的状态，状态由 CreateTripSagaState 的 shouldConfirmTrip 方法来确定。第五个步骤的动作是通过 TripServiceProxy 中的 confirm 命令终端来发送 ConfirmTripCommand 命令。第六个步骤的动作则是发送 RejectTripCommand 命令。</p><h4 id="saga-实例的上下文对象" tabindex="-1">Saga 实例的上下文对象 <a class="header-anchor" href="#saga-实例的上下文对象" aria-label="Permalink to &quot;Saga 实例的上下文对象&quot;">​</a></h4><p>Saga 和 SagaDefinition 接口都有一个类型参数来表示上下文对象的类型。在 Saga 实例的生命周期中，上下文对象用来在不同的步骤之间进行数据传递，有些数据可能是 Saga 中的很多步骤所需要的。一个 Saga 中的某些步骤，可能需要使用之前步骤的命令的回应结果，这些数据的共享，都是通过上下文对象来完成的。在 Saga 实例创建的时候，会提供一个上下文对象作为初始状态。在 Saga 的步骤中，可以使用 invokeLocal 方法来修改这个对象的状态，也可以使用 invokeParticipant 方法返回的对象上的 onReply 方法来根据命令的回应修改这个对象。</p><p>下面代码中的 CreateTripSagaState 类是 CreateTripSaga 对应的上下文对象类。CreateTripSagaState 类中包含的一些属性作为状态值，一些方法用来创建不同的命令对象，以及一些改变状态值的方法。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSagaState</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">NonNull</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String tripId;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">NonNull</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TripDetails tripDetails;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">NonNull</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BigDecimal fare;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> paid;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> RejectTripCommand </span><span style="color:#B392F0;">createRejectTripCommand</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RejectTripCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> ValidateTripCommand </span><span style="color:#B392F0;">createValidateTripCommand</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValidateTripCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripDetails);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> ConfirmTripCommand </span><span style="color:#B392F0;">createConfirmTripCommand</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmTripCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> CreatePaymentCommand </span><span style="color:#B392F0;">createPaymentCommand</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreatePaymentCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripId, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.fare);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> MakePaymentCommand </span><span style="color:#B392F0;">makePaymentCommand</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MakePaymentCommand</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">paymentRequired</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.fare.</span><span style="color:#B392F0;">compareTo</span><span style="color:#E1E4E8;">(BigDecimal.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">markAsPaid</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setPaid</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handlePaymentFailedReply</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> PaymentFailedReply </span><span style="color:#FFAB70;">reply</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setPaid</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">shouldConfirmTrip</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">paymentRequired</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">paymentRequired</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isPaid</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSagaState</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">NonNull</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String tripId;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">NonNull</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TripDetails tripDetails;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">NonNull</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BigDecimal fare;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> paid;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> RejectTripCommand </span><span style="color:#6F42C1;">createRejectTripCommand</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RejectTripCommand</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripId);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> ValidateTripCommand </span><span style="color:#6F42C1;">createValidateTripCommand</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValidateTripCommand</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripDetails);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> ConfirmTripCommand </span><span style="color:#6F42C1;">createConfirmTripCommand</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmTripCommand</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripId);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> CreatePaymentCommand </span><span style="color:#6F42C1;">createPaymentCommand</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreatePaymentCommand</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripId, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.fare);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MakePaymentCommand </span><span style="color:#6F42C1;">makePaymentCommand</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MakePaymentCommand</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripId);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">paymentRequired</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.fare.</span><span style="color:#6F42C1;">compareTo</span><span style="color:#24292E;">(BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">markAsPaid</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setPaid</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handlePaymentFailedReply</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> PaymentFailedReply </span><span style="color:#E36209;">reply</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setPaid</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">shouldConfirmTrip</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">paymentRequired</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">paymentRequired</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isPaid</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="创建-saga-实例" tabindex="-1">创建 Saga 实例 <a class="header-anchor" href="#创建-saga-实例" aria-label="Permalink to &quot;创建 Saga 实例&quot;">​</a></h4><p>CreateTripSaga 用来管理创建行程的过程，因此该 Saga 的实例应该在创建行程对象的同时被创建。Saga 实例由 SagaInstanceFactory 对象的 create 方法来创建。create 方法的第一个参数是 Saga 对象，第二个参数是对应的上下文对象。</p><p>下面的代码展示了 TripService 的 createTrip 方法的实现。在创建 Trip 对象和发布相应的事件之后，首先创建一个 CreateTripSagaState 对象，再创建一个新的 CreateTripSaga 实例。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripRepository tripRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripFareService tripFareService;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripDomainEventPublisher eventPublisher;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  SagaInstanceFactory sagaInstanceFactory;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  CreateTripSaga createTripSaga;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> TripVO </span><span style="color:#B392F0;">createTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">passengerId</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> PositionVO </span><span style="color:#FFAB70;">startPos</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> PositionVO </span><span style="color:#FFAB70;">endPos</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> ResultWithDomainEvents&lt;</span><span style="color:#F97583;">Trip</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">TripDomainEvent</span><span style="color:#E1E4E8;">&gt; tripAndEvents </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Trip</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">createTrip</span><span style="color:#E1E4E8;">(passengerId, startPos, endPos);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BigDecimal fare </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripFareService.</span><span style="color:#B392F0;">calculate</span><span style="color:#E1E4E8;">(startPos, endPos);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Trip trip </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tripAndEvents.result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    trip.</span><span style="color:#B392F0;">setFare</span><span style="color:#E1E4E8;">(fare);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(trip);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.eventPublisher.</span><span style="color:#B392F0;">publish</span><span style="color:#E1E4E8;">(trip, tripAndEvents.events);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripDetails tripDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripDetails</span><span style="color:#E1E4E8;">(passengerId, startPos,</span></span>
<span class="line"><span style="color:#E1E4E8;">        endPos);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CreateTripSagaState data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSagaState</span><span style="color:#E1E4E8;">(trip.</span><span style="color:#B392F0;">getId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        tripDetails, fare);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sagaInstanceFactory.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.createTripSaga, data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> trip.</span><span style="color:#B392F0;">toTripVO</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripRepository tripRepository;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripFareService tripFareService;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripDomainEventPublisher eventPublisher;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  SagaInstanceFactory sagaInstanceFactory;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  CreateTripSaga createTripSaga;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> TripVO </span><span style="color:#6F42C1;">createTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">passengerId</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> PositionVO </span><span style="color:#E36209;">startPos</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> PositionVO </span><span style="color:#E36209;">endPos</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ResultWithDomainEvents&lt;</span><span style="color:#D73A49;">Trip</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">TripDomainEvent</span><span style="color:#24292E;">&gt; tripAndEvents </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Trip</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">createTrip</span><span style="color:#24292E;">(passengerId, startPos, endPos);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BigDecimal fare </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripFareService.</span><span style="color:#6F42C1;">calculate</span><span style="color:#24292E;">(startPos, endPos);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Trip trip </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tripAndEvents.result;</span></span>
<span class="line"><span style="color:#24292E;">    trip.</span><span style="color:#6F42C1;">setFare</span><span style="color:#24292E;">(fare);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(trip);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.eventPublisher.</span><span style="color:#6F42C1;">publish</span><span style="color:#24292E;">(trip, tripAndEvents.events);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripDetails tripDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripDetails</span><span style="color:#24292E;">(passengerId, startPos,</span></span>
<span class="line"><span style="color:#24292E;">        endPos);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CreateTripSagaState data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSagaState</span><span style="color:#24292E;">(trip.</span><span style="color:#6F42C1;">getId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        tripDetails, fare);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sagaInstanceFactory.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.createTripSaga, data);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> trip.</span><span style="color:#6F42C1;">toTripVO</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>当 Saga 实例创建之后，其中所包含的步骤会按照顺序来执行。</p><h4 id="saga-单元测试" tabindex="-1">Saga 单元测试 <a class="header-anchor" href="#saga-单元测试" aria-label="Permalink to &quot;Saga 单元测试&quot;">​</a></h4><p>Eventuate Tram 框架提供了对 Saga 的单元测试支持。下面代码给出了 CreateTripSaga 所对应的单元测试类。Saga 的单元测试以 BDD 的形式来描述。通过 expect 方法来声明每个步骤中所期望发送的命令，以及命令的回应消息。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">ExtendWith</span><span style="color:#E1E4E8;">(SpringExtension.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">ContextConfiguration</span><span style="color:#E1E4E8;">(classes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TestConfig.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#B392F0;">DisplayName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Trip saga&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSagaTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripServiceProxy </span><span style="color:#FFAB70;">tripService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TripValidationServiceProxy </span><span style="color:#FFAB70;">tripValidationService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  PaymentServiceProxy </span><span style="color:#FFAB70;">paymentService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Test</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">DisplayName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Create trip&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">shouldCreateTrip</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    final String tripId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">uuid</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    final TripDetails tripDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tripDetails0</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    final BigDecimal fare </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> BigDecimal.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">given</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">saga</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">makeCreateTripSaga</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSagaState</span><span style="color:#E1E4E8;">(tripId, tripDetails, fare))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">command</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ValidateTripCommand</span><span style="color:#E1E4E8;">(tripDetails))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">andGiven</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">successReply</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">command</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreatePaymentCommand</span><span style="color:#E1E4E8;">(tripId, fare))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(PaymentServiceChannels.payment).</span><span style="color:#B392F0;">andGiven</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">successReply</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">command</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConfirmTripCommand</span><span style="color:#E1E4E8;">(tripId))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(TripServiceChannels.trip);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> CreateTripSaga </span><span style="color:#B392F0;">makeCreateTripSaga</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateTripSaga</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripService, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripValidationService,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.paymentService);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TripDetails </span><span style="color:#B392F0;">tripDetails0</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripDetails</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">uuid</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PositionVO</span><span style="color:#E1E4E8;">(BigDecimal.</span><span style="color:#79B8FF;">ZERO</span><span style="color:#E1E4E8;">, BigDecimal.</span><span style="color:#79B8FF;">ZERO</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PositionVO</span><span style="color:#E1E4E8;">(BigDecimal.</span><span style="color:#79B8FF;">ZERO</span><span style="color:#E1E4E8;">, BigDecimal.</span><span style="color:#79B8FF;">ZERO</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">uuid</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UUID</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">randomUUID</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  @TestConfiguration</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#B392F0;">ComponentScan</span><span style="color:#E1E4E8;">(basePackageClasses </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TripServiceProxy.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">ExtendWith</span><span style="color:#24292E;">(SpringExtension.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">ContextConfiguration</span><span style="color:#24292E;">(classes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TestConfig.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#6F42C1;">DisplayName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Trip saga&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSagaTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripServiceProxy </span><span style="color:#E36209;">tripService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TripValidationServiceProxy </span><span style="color:#E36209;">tripValidationService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  PaymentServiceProxy </span><span style="color:#E36209;">paymentService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  @Test</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">DisplayName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Create trip&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">shouldCreateTrip</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    final String tripId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">uuid</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    final TripDetails tripDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tripDetails0</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    final BigDecimal fare </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BigDecimal.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">given</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">saga</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">makeCreateTripSaga</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSagaState</span><span style="color:#24292E;">(tripId, tripDetails, fare))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">command</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ValidateTripCommand</span><span style="color:#24292E;">(tripDetails))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(TripValidationServiceChannels.tripValidation)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">andGiven</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">successReply</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">command</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreatePaymentCommand</span><span style="color:#24292E;">(tripId, fare))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(PaymentServiceChannels.payment).</span><span style="color:#6F42C1;">andGiven</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">successReply</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">command</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConfirmTripCommand</span><span style="color:#24292E;">(tripId))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(TripServiceChannels.trip);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> CreateTripSaga </span><span style="color:#6F42C1;">makeCreateTripSaga</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateTripSaga</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripService, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripValidationService,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.paymentService);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TripDetails </span><span style="color:#6F42C1;">tripDetails0</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripDetails</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">uuid</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PositionVO</span><span style="color:#24292E;">(BigDecimal.</span><span style="color:#005CC5;">ZERO</span><span style="color:#24292E;">, BigDecimal.</span><span style="color:#005CC5;">ZERO</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PositionVO</span><span style="color:#24292E;">(BigDecimal.</span><span style="color:#005CC5;">ZERO</span><span style="color:#24292E;">, BigDecimal.</span><span style="color:#005CC5;">ZERO</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">uuid</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UUID</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">randomUUID</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  @TestConfiguration</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#6F42C1;">ComponentScan</span><span style="color:#24292E;">(basePackageClasses </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TripServiceProxy.class)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="编排型-saga" tabindex="-1">编排型 Saga <a class="header-anchor" href="#编排型-saga" aria-label="Permalink to &quot;编排型 Saga&quot;">​</a></h3><p>编排型 Saga 没有单独的 Saga 实体来管理业务事务的流程，而是通过不同参与者之间的事件传递来完成。每个参与者只需要添加相应事件的处理器，通过本地事务来完成操作即可。处理的结果以新的事件方式进行发布，从而触发其他参与者的处理逻辑，推动业务事务的进展。</p><p>从实现的角度来说，编排型 Saga 只需要利用 Eventuate Tram 框架中提供的事务性消息即可，并不需要额外的支持。业务事务的流程，只存在于事件的发布和处理之中。以取消行程的业务事务为例，行程的取消涉及乘客和司机两个参与者，乘客和司机都可以发起取消行程的请求。如果另外一方同意，那么行程被取消，同时发送 TripCancelledEvent 事件；如果另外一方不同意，那么行程的取消则需要进行调解，在更新行程状态之后，发送 TripCancellationResolutionRequiredEvent 事件。在行程取消之后，行程派发服务可能需要取消正在进行的行程派发动作。如果取消行程还需要有后续的其他动作，只需要添加新的 TripCancelledEvent 事件的处理器即可。</p><p>编排型 Saga 的好处在于<strong>简单</strong>，并不需要附加的 Saga 实体，另外参与者之间是松散耦合的。编排型 Saga 的缺点在于业务事务的逻辑散落在不同的参与者中，不容易理解整个业务的流程，另外参与者可能会由于事件的发布和处理而产生循环依赖关系。由于这样的缺点，编排型 Saga 一般只用来实现非常简单的业务事务，更多的时候，使用编制型 Saga 是更好的选择。</p><h3 id="saga-的隔离性问题" tabindex="-1">Saga 的隔离性问题 <a class="header-anchor" href="#saga-的隔离性问题" aria-label="Permalink to &quot;Saga 的隔离性问题&quot;">​</a></h3><p>Saga 由一系列本地事务组成，并通过<strong>补偿操作</strong>来处理失败。从数据库事务的 ACID 特性来说，Saga 只具有 ACD 特性，缺少了隔离性，隔离性保证了多个事务并发执行的结果，与这些事务顺序执行时的结果保持一致。每个事务都相当于在各自隔离的空间中运行，互相并不影响。Saga 并不具备隔离性，这是因为组成 Saga 的本地事务是各自独立提交的。当一个 Saga 实例的某个步骤完成之后，该步骤对应的本地事务就会被提交，该事务对数据库的改动对其他本地事务是可见的。一个正在运行 Saga 实例中的某个步骤在对数据库进行操作时，可以读取到另外一个 Saga 实例产生的部分结果，也可以覆写掉另外一个 Saga 实例已经写入的结果。这可能会造成数据异常。</p><p>以创建和取消行程这两个 Saga 为例，当创建行程的 Saga 实例执行到支付这一步骤时，乘客发出了取消行程的请求，取消行程的 Saga 把行程设置为已取消的状态。在这之后，创建行程的 Saga 实例继续执行，最后把行程又重新设置为已确认状态。这就造成了乘客已经取消的行程，仍然被确认和派发。</p><p>解决 Saga 隔离性问题的一个常见方案是在应用层次添加锁，可以把领域对象的状态作为锁。在上面的例子中，在创建支付这一步骤完成之后，可以把行程对象的状态设置为等待支付。取消行程的 Saga 首先检查行程的状态，如果发现行程处于等待支付的状态，它可以直接出错，或是等待创建行程的 Saga 实例完成之后，再进行取消的动作。</p><p>另外一种解决方案是从数据库中重新读取领域对象。在上面的例子中，创建行程的 Saga 在确认行程之前，重新读取行程对象，如果发现行程对象的状态变为已取消，则直接出错，将导致 Saga 实例自动执行相应的补偿操作。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>本课时详细介绍了如何使用 Eventuate Tram 框架来实现编制型和编排型 Saga，尤其是编制型 Saga 的使用。示例应用使用编制型 Saga 来实现创建行程这一业务事务。同时，还介绍了 Saga 的隔离性问题及解决办法。通过本课时的学习，你应该掌握如何在实际的开发中使用 Eventuate Tram 框架来创建 Saga，以满足业务事务的需求。</p>`,31);function d(C,m,g,S,u,T){const s=o("Image");return e(),t("div",null,[E,a(s,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/13/00/CgqCHl7OSFqARzPPAAC45ZQTzF4617.png"}),n(),y,a(s,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/13/00/CgqCHl7OSHKAT3JYAAEPGTDnuyw247.png"}),n(),i,a(s,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/13/00/CgqCHl7OSGmAY_GCAAG83v8YNKo399.png"}),n(),F])}const v=l(c,[["render",d]]);export{h as __pageData,v as default};
