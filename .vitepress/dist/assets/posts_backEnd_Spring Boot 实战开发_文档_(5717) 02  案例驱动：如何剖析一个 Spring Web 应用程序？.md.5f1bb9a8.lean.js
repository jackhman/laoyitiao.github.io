import{_ as l,j as e,o as t,g as r,k as p,h as n,s,Q as o}from"./chunks/framework.a0d18f64.js";const J=JSON.parse('{"title":"02案例驱动：如何剖析一个SpringWeb应用程序？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5717) 02  案例驱动：如何剖析一个 Spring Web 应用程序？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5717) 02  案例驱动：如何剖析一个 Spring Web 应用程序？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/Spring Boot 实战开发_文档/(5717) 02  案例驱动：如何剖析一个 Spring Web 应用程序？.md"},i=s("h1",{id:"_02案例驱动-如何剖析一个springweb应用程序",tabindex:"-1"},[n("02案例驱动：如何剖析一个SpringWeb应用程序？ "),s("a",{class:"header-anchor",href:"#_02案例驱动-如何剖析一个springweb应用程序","aria-label":'Permalink to "02案例驱动：如何剖析一个SpringWeb应用程序？"'},"​")],-1),E=s("p",null,"在 01 讲中，我们提到 Spring 家族具备很多款开源框架，开发人员可以基于这些开发框架实现各种 Spring 应用程序。在 02 讲中，我们无意对所有这些 Spring 应用程序的类型和开发方式过多展开，而是主要集中在基于 Spring Boot 开发面向 Web 场景的服务，这也是互联网应用程序最常见的表现形式。在介绍基于 Spring Boot 的开发模式之前，让我们先将它与传统的 Spring MVC 进行简单对比。",-1),g=s("h3",{id:"spring-mvc-vs-spring-boot",tabindex:"-1"},[n("Spring MVC VS Spring Boot "),s("a",{class:"header-anchor",href:"#spring-mvc-vs-spring-boot","aria-label":'Permalink to "Spring MVC VS Spring Boot"'},"​")],-1),y=s("p",null,"在典型的 Web 应用程序中，前后端通常采用基于 HTTP 协议完成请求和响应，开发过程中需要完成 URL 地址的映射、HTTP 请求的构建、数据的序列化和反序列化以及实现各个服务自身内部的业务逻辑，如下图所示：",-1),d=s("p",null,"HTTP 请求响应过程",-1),u=s("p",null,"我们先来看基于 Spring MVC 完成上述开发流程所需要的开发步骤，如下图所示：",-1),S=s("p",null,"基于 Spring MVC 的 Web 应用程序开发流程",-1),_=s("p",null,"上图中包括使用 web.xml 定义 Spring 的 DispatcherServlet、完成启动 Spring MVC 的配置文件、编写响应 HTTP 请求的 Controller 以及将服务部署到 Tomcat Web 服务器等步骤。事实上，基于传统的 Spring MVC 框架开发 Web 应用逐渐暴露出一些问题，比较典型的就是配置工作过于复杂和繁重，以及缺少必要的应用程序管理和监控机制。",-1),h=s("p",null,"如果想优化这一套开发过程，有几个点值得我们去挖掘，比方说减少不必要的配置工作、启动依赖项的自动管理、简化部署并提供应用监控等。而这些优化点恰巧推动了以 Spring Boot 为代表的新一代开发框架的诞生，基于 Spring Boot 的开发流程见下图：",-1),b=s("p",null,"基于 Spring Boot 的 Web 应用程序开发流程",-1),m=s("p",null,"从上图中可以看到，它与基于 Spring MVC 的开发流程在配置信息的管理、服务部署和监控等方面有明显不同。作为 Spring 家族新的一员，Spring Boot 提供了令人兴奋的特性，这些特性的核心价值在于确保了开发过程的简单性，具体体现在编码、配置、部署、监控等多个方面。",-1),A=s("p",null,"首先，Spring Boot 使编码更简单。我们只需要在 Maven 中添加一项依赖并实现一个方法就可以提供微服务架构中所推崇的 RESTful 风格接口。",-1),C=s("p",null,"其次，Spring Boot 使配置更简单。它把 Spring 中基于 XML 的功能配置方式转换为 Java Config，同时提供了 .yml 文件来优化原有基于 .properties 和 .xml 文件的配置方案，.yml 文件对配置信息的组织更为直观方便，语义也更为强大。同时，基于 Spring Boot 的自动配置特性，对常见的各种工具和框架均提供了默认的 starter 组件来简化配置。",-1),B=s("p",null,"最后，在部署方案上，Spring Boot 也创造了一键启动的新模式。Spring Boot 部署包结构参考下图：",-1),v=s("p",null,"Spring Boot部署包结构",-1),F=s("p",null,"从图中我们可以看到，相较于传统模式下的 war 包，Spring Boot 部署包既包含了业务代码和各种第三方类库，同时也内嵌了 HTTP 容器。这种包结构支持 java --jar application.jar 方式的一键启动，不需要部署独立的应用服务器，通过默认内嵌 Tomcat 就可以运行整个应用程序。",-1),k=s("p",null,'最后，基于 Spring Boot 新提供的 Actuator 组件，开发和运维人员可以通过 RESTful 接口获取应用程序的当前运行时状态并对这些状态背后的度量指标进行监控和报警。例如可以通过"/env/{name}"端点获取系统环境变量、通过"/mapping"端点获取所有 RESTful 服务、通过"/dump"端点获取线程工作状态以及通过"/metrics/{name}"端点获取 JVM 性能指标等。',-1),q=s("h3",{id:"剖析一个-spring-web-应用程序",tabindex:"-1"},[n("剖析一个 Spring Web 应用程序 "),s("a",{class:"header-anchor",href:"#剖析一个-spring-web-应用程序","aria-label":'Permalink to "剖析一个 Spring Web 应用程序"'},"​")],-1),f=s("p",null,"针对一个基于 Spring Boot 开发的 Web 应用程序，其代码组织方式需要遵循一定的项目结构。在 02 讲中，如果不做特殊说明，我们都将使用 Maven 来管理项目工程中的结构和包依赖。一个典型的 Web 应用程序的项目结构如下图所示：",-1),D=o("",7),w=o("",22),T=o("",11),M=s("p",null,[n("]("),s("a",{href:"https://shenceyun.lagou.com/t/Mka",target:"_blank",rel:"noreferrer"},"https://shenceyun.lagou.com/t/Mka"),n(")")],-1),W=s("p",null,[s("strong",null,"《Java 工程师高薪训练营》")],-1),I=s("p",null,[n("实战训练+面试模拟+大厂内推，想要提升技术能力，进大厂拿高薪，"),s("a",{href:"https://shenceyun.lagou.com/t/Mka",target:"_blank",rel:"noreferrer"},"点击链接，提升自己"),n("！")],-1);function P(V,x,R,H,j,N){const a=e("Image");return t(),r("div",null,[i,E,g,y,p(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/70/96/CgqCHl-7WIiAQimVAABHwO_CPqU821.png"}),n(),d,u,p(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/70/96/CgqCHl-7WI2AaDcrAABBSHVyAdE329.png"}),n(),S,_,h,p(a,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/70/8A/Ciqc1F-7WJeAHD-nAABRAXax5k4419.png"}),n(),b,m,A,C,B,p(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/70/8A/Ciqc1F-7WKCALlK_AAAvL2X5nlU081.png"}),n(),v,F,k,q,f,p(a,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/70/96/CgqCHl-7WKuAE6hIAABP4_ORBpU588.png"}),n(),D,p(a,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/70/8A/Ciqc1F-7WLOAHBZ_AABP1erBa_k988.png"}),n(),w,p(a,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/70/96/CgqCHl-7WMKAR1x_AACL4oIyVgU534.png"}),n(),T,p(a,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/6D/3E/CgqCHl-s60-AC0B_AAhXSgFweBY762.png"}),n(),M,W,I])}const U=l(c,[["render",P]]);export{J as __pageData,U as default};
