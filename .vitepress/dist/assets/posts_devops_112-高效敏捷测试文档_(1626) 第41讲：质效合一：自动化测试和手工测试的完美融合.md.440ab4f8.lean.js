import{_ as s,j as r,o as _,g as n,k as e,Q as o,s as t,h as p}from"./chunks/framework.e0c66c3f.js";const b=JSON.parse('{"title":"一个案例 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/112-高效敏捷测试文档/(1626) 第41讲：质效合一：自动化测试和手工测试的完美融合.md","filePath":"posts/devops/112-高效敏捷测试文档/(1626) 第41讲：质效合一：自动化测试和手工测试的完美融合.md","lastUpdated":1696338709000}'),l={name:"posts/devops/112-高效敏捷测试文档/(1626) 第41讲：质效合一：自动化测试和手工测试的完美融合.md"},i=o("",12),c=t("p",null,"探索式测试不用写测试用例，节省下来的时间可以用来开发自动化测试脚本，但并非针对本次迭代的新功能，否则你就会遇到和案例里面那个团队同样的问题。测试人员应该开发上一个迭代已实现功能的自动化测试脚本。因为这时候，上一次迭代的功能特性已相对稳定，自动化脚本开发和调试都没什么障碍，效率也相对较高。新开发的测试脚本添加到自动化回归测试集，尽量保证回归测试可以全部自动化。",-1),d=t("p",null,[p("这就是我建议的自动化测试和手工测试有机结合的策略："),t("strong",null,"新功能采用探索式测试，回归测试尽量全部自动化，针对上一次迭代实现的功能进行脚本开发"),p("，如图 2 所示。")],-1),h=o("",31);function g(A,u,I,m,T,q){const a=r("Image");return _(),n("div",null,[i,e(a,{alt:"11.png",src:"https://s0.lgstatic.com/i/image/M00/12/20/Ciqc1F7M_uyAER77AADq_M3KV8M952.png"}),c,d,e(a,{alt:"22.png",src:"https://s0.lgstatic.com/i/image/M00/12/2B/CgqCHl7M_viAN1aSAAKfLbVJ1tc171.png"}),h])}const C=s(l,[["render",g]]);export{b as __pageData,C as default};
