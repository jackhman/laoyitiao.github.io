import{_ as l,j as p,o,h as e,k as t,f as n,s,Q as c}from"./chunks/framework.d3daa342.js";const v=JSON.parse('{"title":"34备忘录模式：如何在聊天会话中记录历史消息？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6899) 34  备忘录模式：如何在聊天会话中记录历史消息？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6899) 34  备忘录模式：如何在聊天会话中记录历史消息？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/趣学设计模式_文档/(6899) 34  备忘录模式：如何在聊天会话中记录历史消息？.md"},E=s("h1",{id:"_34备忘录模式-如何在聊天会话中记录历史消息",tabindex:"-1"},[n("34备忘录模式：如何在聊天会话中记录历史消息？ "),s("a",{class:"header-anchor",href:"#_34备忘录模式-如何在聊天会话中记录历史消息","aria-label":'Permalink to "34备忘录模式：如何在聊天会话中记录历史消息？"'},"​")],-1),y=s("p",null,"相较于其他的设计模式，备忘录模式不算太常用，但好在这个模式理解、掌握起来并不难，代码实现也比较简单，应用场景就更是比较明确和有限，一般应用于编辑器或会话上下文中防丢失、撤销、恢复等场景中。所以，相较前面的课程来说，今天的内容学起来会比较轻松些。",-1),i=s("p",null,"话不多说，让我们开始今天的学习吧。",-1),F=s("h3",{id:"模式原理分析",tabindex:"-1"},[n("模式原理分析 "),s("a",{class:"header-anchor",href:"#模式原理分析","aria-label":'Permalink to "模式原理分析"'},"​")],-1),g=s("p",null,"备忘录模式的原始定义是：捕获并外部化对象的内部状态，以便以后可以恢复，所有这些都不会违反封装。",-1),u=s("p",null,"这个定义是非常简单的，我们可以直接来看看备忘录模式对应的 UML 图：",-1),d=c("",39);function C(A,B,D,m,h,b){const a=p("Image");return o(),e("div",null,[E,y,i,F,g,u,t(a,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M01/4C/04/Cgp9HWDntbSAGwveAAJjXG5FbVg523.png"}),n(),d])}const S=l(r,[["render",C]]);export{v as __pageData,S as default};
