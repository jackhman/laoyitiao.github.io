import{_ as a,j as s,o,g as e,k as l,h as i,Q as _,s as p}from"./chunks/framework.4e7d56ce.js";const L=JSON.parse('{"title":"03增删查：掌握数据处理的基本操作,以不变应万变","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/重学数据结构与算法_文档/(3341) 03  增删查：掌握数据处理的基本操作,以不变应万变.md","filePath":"posts/backEnd/重学数据结构与算法_文档/(3341) 03  增删查：掌握数据处理的基本操作,以不变应万变.md","lastUpdated":1696417798000}'),n={name:"posts/backEnd/重学数据结构与算法_文档/(3341) 03  增删查：掌握数据处理的基本操作,以不变应万变.md"},r=_("",9),c=_("",24),g=p("p",null,"例 3，我们再来看第三个例子，关于数值条件的查找。",-1),d=p("p",null,"我们要查找出，数据结构中数值等于 5 的元素是否存在。这次的查找，无论是数组还是链表都束手无策了。唯一的方法，也只有按照顺序一个接一个地去判断元素数值是否满足等于 5 的条件。很显然，这样的查找方法时间复杂度是 O(n)。那么有没有时间复杂度更低的方式呢？答案当然是：有。",-1),h=_("",6),u=p("p",null,"如果是在数据结构中间的某个位置新增数据，则会对插入元素的位置之后的元素产生影响，导致数据的位置依次加 1 。例如，对于某个长度为 4 的数组，在第二个元素之后插入一个元素。则修改后的数组中，原来的第一、第二个元素的位置不发生变化，第三个元素是新插入的元素，第四、第五个元素则是原来的第三、第四个元素。",-1),m=_("",7),f=p("h3",{id:"总结",tabindex:"-1"},[i("总结 "),p("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),A=p("p",null,"好的，这节课的内容就到这里了。这一节的内容在很多数据结构的课程中都是没有的，这是因为大部分课程设计时，都普遍默认你已经掌握了这些知识。但是，这些知识恰恰又是你学习数据结构的根基。只有在充分了解问题、明确数据操作的方法之后，才能设计出更加高效的数据结构类型。",-1),T=p("p",null,"经过我们的分析，数据处理的基本操作只有 3 个，分别是增、删、查。其中，增和删又可以细分为在数据结构中间的增和删，以及在数据结构最后的增和删。区别就在于原数据的位置是否发生改变。查找又可以细分为按照位置条件的查找和按照数据数值特征的查找。几乎所有的数据处理，都是这些基本操作的组合和叠加。",-1),P=p("h3",{id:"练习题",tabindex:"-1"},[i("练习题 "),p("a",{class:"header-anchor",href:"#练习题","aria-label":'Permalink to "练习题"'},"​")],-1),q=p("p",null,"下面我们给出一道练习题。对于一个包含 5 个元素的数组，如果要把这个数组元素的顺序翻转过来。你可以试着分析该过程需要对数据进行哪些操作？",-1),C=p("p",null,"在实际的工作中，如果你不知道该用什么数据结构的时候，就一定要回归问题本源。从数据需要被处理的动作出发。只有明确了会有什么动作，才能找到最合适的解决方法。如果你在拆解数据处理的操作过程中遇到什么问题或者关于拆解有新的想法，欢迎在留言区和我分享。",-1);function O(b,k,S,x,V,I){const t=s("Image");return o(),e("div",null,[r,l(t,{alt:"4SfjILfGIwwUQxq2.gif",src:"https://s0.lgstatic.com/i/image/M00/11/0D/Ciqc1F7LgHGAWFU1AFRNn2DsECQ738.gif"}),i(),c,l(t,{alt:"1.gif",src:"https://s0.lgstatic.com/i/image/M00/11/1A/CgqCHl7LgWmAGPLPAAuRsXjiFwo828.gif"}),i(),g,d,l(t,{alt:"2.gif",src:"https://s0.lgstatic.com/i/image/M00/11/1A/CgqCHl7LgYaAR4ePAA0VgmU62hc753.gif"}),i(),h,l(t,{alt:"3.gif",src:"https://s0.lgstatic.com/i/image/M00/11/0F/Ciqc1F7LgZmAd__TABaiFDWAj4Q302.gif"}),i(),u,l(t,{alt:"4.gif",src:"https://s0.lgstatic.com/i/image/M00/11/0F/Ciqc1F7Lga6ALkKoAB9PicwXoPY849.gif"}),i(),m,l(t,{alt:"5.gif",src:"https://s0.lgstatic.com/i/image/M00/11/1B/CgqCHl7LgdiALYfBAEvqDR0lHjM759.gif"}),i(),f,A,T,P,q,C])}const N=a(n,[["render",O]]);export{L as __pageData,N as default};
