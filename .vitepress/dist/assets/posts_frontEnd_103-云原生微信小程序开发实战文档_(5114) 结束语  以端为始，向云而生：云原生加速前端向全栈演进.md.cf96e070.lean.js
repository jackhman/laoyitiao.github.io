import{_ as r,j as p,o as n,g as _,k as a,h as t,Q as s,s as e}from"./chunks/framework.cfb14fe0.js";const T=JSON.parse('{"title":"结束语以端为始，向云而生：云原生加速前端向全栈演进","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/103-云原生微信小程序开发实战文档/(5114) 结束语  以端为始，向云而生：云原生加速前端向全栈演进.md","filePath":"posts/frontEnd/103-云原生微信小程序开发实战文档/(5114) 结束语  以端为始，向云而生：云原生加速前端向全栈演进.md","lastUpdated":1696682708000}'),l={name:"posts/frontEnd/103-云原生微信小程序开发实战文档/(5114) 结束语  以端为始，向云而生：云原生加速前端向全栈演进.md"},i=s("",12),c=s("",23),d=e("p",null,"一体化服务架构",-1),h=e("p",null,"BFF架构",-1),u=e("p",null,"其中，BFF 主要承担了后端接口聚合功能，以及一部分平台差异化的业务逻辑，而与平台无关的核心业务逻辑由后端的微服务承载。这种架构模式的优势在于实现了差异化逻辑的松耦合，进而令前后端的迭代和维护更高效和安全。",-1),g=e("p",null,"目前业内对 BFF 普遍实践模式是将 BFF 分发到负责各平台技术开发的团队，比如 App 团队负责 Mobile BFF、前端团队负责 PC web 和 H5 BFF ......那么对于前端工程师来说，这种模式是否意味着前端兼顾 BFF层？理想的场景是这样的，但现实工作中并非如此。",-1),m=e("p",null,[t("因为 BFF 本质上仍然是服务端，对于前端开发而言，Node.js 虽然解决编程语言的问题，但是编程语言只是服务端编程最表面也是最容易突破的一层。除了编程语言之外，一名合格的服务端开发者还需要具备一些服务端独有的领域知识以及服务治理、数据管理等，"),e("strong",null,"这些才是真正阻碍前端成为全栈的关键因素，而这些问题便是云开发主要解决的问题。")],-1),q=s("",6);function A(b,f,F,S,j,N){const o=p("Image");return n(),_("div",null,[i,a(o,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/8C/83/CgqCHl_tmYiAcFQwAAXyCRy9pWQ481.png"}),t(),c,a(o,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/8C/78/Ciqc1F_tmaSASbLmAAiXQHWSx3E211.png"}),t(),d,a(o,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image2/M01/04/5B/CgpVE1_tmamAP6zCAAs9ZZofLFo788.png"}),t(),h,u,g,m,a(o,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image2/M01/04/59/Cip5yF_tmbWAfq7OAAf1Xmie3GI381.png"}),t(),q])}const I=r(l,[["render",A]]);export{T as __pageData,I as default};
