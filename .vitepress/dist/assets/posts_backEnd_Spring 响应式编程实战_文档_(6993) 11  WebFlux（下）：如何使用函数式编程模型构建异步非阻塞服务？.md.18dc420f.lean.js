import{_ as p,j as l,o,g as e,k as t,h as n,s,Q as r}from"./chunks/framework.4e7d56ce.js";const m=JSON.parse('{"title":"11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md","filePath":"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/Spring 响应式编程实战_文档/(6993) 11  WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？.md"},E=s("h1",{id:"_11webflux-下-如何使用函数式编程模型构建异步非阻塞服务",tabindex:"-1"},[n("11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？ "),s("a",{class:"header-anchor",href:"#_11webflux-下-如何使用函数式编程模型构建异步非阻塞服务","aria-label":'Permalink to "11WebFlux（下）：如何使用函数式编程模型构建异步非阻塞服务？"'},"​")],-1),y=s("p",null,"上一讲，我们引入了 Spring 框架中专门用于构建响应式 Web 服务的 WebFlux 框架，同时我也给出了两种创建 RESTful 风格 HTTP 端点实现方法中的一种，即注解编程模型。今天，我将介绍另一种实现方法------如何使用函数式编程模型创建响应式 RESTful 服务，这种编程模型与传统的基于 Spring MVC 构建 RESTful 服务的方法有较大差别。",-1),i=s("h3",{id:"webflux-函数式编程模型",tabindex:"-1"},[n("WebFlux 函数式编程模型 "),s("a",{class:"header-anchor",href:"#webflux-函数式编程模型","aria-label":'Permalink to "WebFlux 函数式编程模型"'},"​")],-1),u=s("p",null,"在引入函数式编程模型之前，让我先带你回顾一下 Spring WebFlux 的系统架构图，如下所示。",-1),d=r("",62);function F(g,v,h,b,C,A){const a=l("Image");return o(),e("div",null,[E,y,i,u,t(a,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M01/32/E0/Cgp9HWBuf--Aek0BAAT9zBvy7qI451.png"}),n(),d])}const B=p(c,[["render",F]]);export{m as __pageData,B as default};
