import{_ as p,j as e,o,g as t,k as a,s,h as r,Q as l}from"./chunks/framework.e0c66c3f.js";const _=JSON.parse('{"title":"Page 和 Sort 参数原理 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Data JPA 原理与实战_文档/(4716) 16  如何自定义 HandlerMethodArgumentReolver？.md","filePath":"posts/backEnd/Spring Data JPA 原理与实战_文档/(4716) 16  如何自定义 HandlerMethodArgumentReolver？.md","lastUpdated":1696338709000}'),c={name:"posts/backEnd/Spring Data JPA 原理与实战_文档/(4716) 16  如何自定义 HandlerMethodArgumentReolver？.md"},E=s("p",null,"上一讲我们介绍了 SpringDataWebConfiguration 类的用法，那么这次我们来看一下这个类是如何被加载的，PageableHandlerMethodArgumentResolver 和 SortHandlerMethodArgumentResolver 又是如何生效的，以及如何定义自己的 HandlerMethodArgumentResolvers 类，还有没有其他 Web 场景需要我们自定义呢？",-1),y=s("p",null,"关于上述几个类，你要先在心里有点印象，我们接下来一个一个详细讲解。",-1),i=s("h3",{id:"page-和-sort-参数原理",tabindex:"-1"},[r("Page 和 Sort 参数原理 "),s("a",{class:"header-anchor",href:"#page-和-sort-参数原理","aria-label":'Permalink to "Page 和 Sort 参数原理"'},"​")],-1),d=s("p",null,"想要知道分页和排序参数的加载原理，我们可以通过源码发现是 @EnableSpringDataWebSupport 将这个类加载进去的，其关键代码如下图所示：",-1),u=s("p",null,"其中，@EnableSpringDataWebSupport 注解是上一讲讲解的核心，即 Spring Data JPA 对 Web 支持需要开启的入口，由于我们使用的是 Spring Boot，所以 @EnableSpringDataWebSupport 不需要我们手动去指定。",-1),g=s("p",null,"这是由于 Spring Boot 有自动加载的机制，我们会发现 org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration 类里面引用了 @EnableSpringDataWebSupport 的注解，所以也不需要我们手动去引用了。这里面的关键代码如下图所示：",-1),A=s("p",null,"而 Spring Boot 的自动加载的核心文件就是 spring.factories 文件，那么我们打开 spring-boot-autoconfigure-2.3.3.jar 包，看一下 spring.factories 文件内容，可以找到 SpringDataWebAutoConfiguration 这个配置类，如下：",-1),F=s("p",null,"所以可以得出结论：只要是 Spring Boot 项目，我们什么都不需要做，它就会天然地让 Spring Data JPA 支持 Web 相关的操作。",-1),h=s("p",null,"而 PageableHandlerMethodArgumentResolver 和 SortHandlerMethodArgumentResolver 两个类是通过 SpringDataWebConfiguration 加载进去的，所以我们基本可以知道 Spring Data JPA 的 Page 和 Sort 参数是因为 SpringDataWebConfiguration 里面 @Bean 的注入才生效的。",-1),v=l("",7),m=l("",5),D=l("",9),R=l("",37),b=l("",27);function C(M,q,P,f,H,B){const n=e("Image");return o(),t("div",null,[E,y,i,d,a(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/67/F1/CgqCHl-ifKuAZqvLAAGaihgL6z0625.png"}),u,g,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/67/E5/Ciqc1F-ifLGAXeScAACYeXQaXt0313.png"}),A,a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/67/F1/CgqCHl-ifLiATqQNAADQjUYmp3o182.png"}),F,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/67/F1/CgqCHl-ifL2AJfQTAAA5uE86eqs914.png"}),h,a(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/67/E6/Ciqc1F-ifMKAEkZ7AAD0bB-3aYU721.png"}),v,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/67/F1/CgqCHl-ifNKAUr5ZAAKB24GVNXo607.png"}),m,a(n,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/67/E6/Ciqc1F-ifNqALsgiAAPVRBCs4Q4327.png"}),D,a(n,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/67/F1/CgqCHl-ifQaAX5YQAAN2flcVp0c284.png"}),R,a(n,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/67/E6/Ciqc1F-ifTSAY0xeAAIfdBh0SkQ798.png"}),b])}const I=p(c,[["render",C]]);export{_ as __pageData,I as default};
