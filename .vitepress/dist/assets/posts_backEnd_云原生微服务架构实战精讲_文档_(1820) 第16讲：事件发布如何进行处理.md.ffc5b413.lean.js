import{_ as o,j as e,o as t,g as r,k as n,h as a,Q as p,s as l}from"./chunks/framework.4e7d56ce.js";const b=JSON.parse('{"title":"第16讲：事件发布如何进行处理","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1820) 第16讲：事件发布如何进行处理.md"},E=p("",15),y=p("",9),i=p("",5),d=p("",12),u=l("p",null,"CommandProducer 接口的实现在发送命令时，也创建出了对应的 Message 对象，只不过消息的头中包含的内容不同。消息的目的地是发送命令时指定的通道。",-1),F=l("p",null,"处理命令的工作由 CommandDispatcher 类来完成。CommandDispatcher 类使用 MessageConsumer 接口来接收消息，同时使用 MessageProducer 接口来发送命令的回应消息。对命令的处理逻辑由 CommandHandlers 类来声明，CommandHandlers 对象包含一个 CommandHandler 对象的列表。CommandHandler 类的构造器参数如下表所示。",-1),m=p("",18);function C(g,h,v,D,A,T){const s=e("Image");return t(),r("div",null,[E,n(s,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D6CAO4KzAABli67iqXE659.png"}),a(),y,n(s,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/CgqCHl61D6qAcPRVAABn48Vm_Jg675.png"}),a(),i,n(s,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D7OAWnOpAABXlUMXYqQ008.png"}),a(),d,n(s,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D7-AL0sGAAByUNtml8M088.png"}),a(),u,F,n(s,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image/M00/05/10/Ciqc1F61D8aAfwZnAABq7-bDGO0896.png"}),a(),m])}const B=o(c,[["render",C]]);export{b as __pageData,B as default};
