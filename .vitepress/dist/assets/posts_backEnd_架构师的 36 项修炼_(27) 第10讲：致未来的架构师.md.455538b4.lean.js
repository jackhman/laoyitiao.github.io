import{_ as l,j as s,o as n,h as r,k as o,f as e,s as a,Q as i}from"./chunks/framework.d3daa342.js";const G=JSON.parse('{"title":"第10讲：致未来的架构师","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/架构师的 36 项修炼/(27) 第10讲：致未来的架构师.md","filePath":"posts/backEnd/架构师的 36 项修炼/(27) 第10讲：致未来的架构师.md","lastUpdated":1696682708000}'),h={name:"posts/backEnd/架构师的 36 项修炼/(27) 第10讲：致未来的架构师.md"},_=a("h1",{id:"第10讲-致未来的架构师",tabindex:"-1"},[e("第10讲：致未来的架构师 "),a("a",{class:"header-anchor",href:"#第10讲-致未来的架构师","aria-label":'Permalink to "第10讲：致未来的架构师"'},"​")],-1),c=a("p",null,"本课时将分享技术之外的话题：如何从普通程序员成长为技术专家？",-1),d=a("h1",{id:"技术人的进阶路径",tabindex:"-1"},[e("技术人的进阶路径 "),a("a",{class:"header-anchor",href:"#技术人的进阶路径","aria-label":'Permalink to "技术人的进阶路径"'},"​")],-1),p=a("p",null,"普通程序员与顶尖技术专家之间有多大差距？他们的进阶路径是怎样的？",-1),u=a("p",null,"跟大多数领域一样，计算机技术人才构成也是金字塔型。一般说来，这样的金字塔结构是按照二八定律划分的。如下图，我按照二八定律将技术人金字塔分为八层，从 0 级到 7 级。",-1),b=i("",19),m=a("p",null,"如上图所示，对于 0 级技术人而言，比较现实的途径依然是不断精进、逐级提升。如果你现在只是团队里面的一个普通开发者，尽量去学些新技术、实践新技术，试着解决团队里的技术难题、做一些架构设计，使自己成为 1 级技术人，成为团队里面的技术骨干或者架构师。",-1),f=a("p",null,"成为团队的技术骨干后，进一步地，在跨团队合作过程中，对其他技术团队进行技术指导，帮助他们解决难题，争取成为有公司影响力的人。在你获得了足够的技术经验和技术实力的基础之上，通过公开演讲、出版图书、撰写博客等方式去打造自己的个人品牌，获得全国影响力。在这个过程中也可以参与或者主导一些开源技术产品的实现，争取成为关键开创者，甚至成为领域开创者。",-1),A=a("h1",{id:"如何逐步成为技术专家",tabindex:"-1"},[e("如何逐步成为技术专家 "),a("a",{class:"header-anchor",href:"#如何逐步成为技术专家","aria-label":'Permalink to "如何逐步成为技术专家"'},"​")],-1),g=a("p",null,"那么如何才能一级一级地提升自己，成为具有更高影响力的专家呢？这里总结了几点，如下图所示，以供参考。",-1),q=i("",12),k=a("p",null,"事实上正是通过这本书，我打开了专业软件编程的大门，它使我意识到专业的东西一定是反常识的，这恐怕是这本书给我最大的收获。看了这本书以后，当我本能地想用习惯的方法进行编程的时候，我总是问自己，有没有更好的、更高效的编程方法。这本书让我知道，在堆砌代码实现功能之外，还有这样一些优美的、精致的技巧可以使用。它让我理解到了编程这门技术的专业性所在，让我感受到技术的高度，不再坐井观天。",-1),P=a("h2",{id:"《设计模式》",tabindex:"-1"},[e("《设计模式》 "),a("a",{class:"header-anchor",href:"#《设计模式》","aria-label":'Permalink to "《设计模式》"'},"​")],-1),x=a("p",null,"另外一本书是《设计模式》，如下图。这本书也比较知名，我也在很早的时候就看了这本书。但是读这本书的时候，我其实并没有太多的感觉，真正让我理解它是在后面的漫长的工作中。当我在阅读别人的代码，包括一些开源代码和优秀的代码示例的时候，我从别人的代码里看到了这些设计模式，看到这样一些精致的编程解决方法，回过头来再想，原来设计模式是这样一些可以让问题变得更加优美的、精致的、灵活的解决方法，然后从头再学习这些设计模式。",-1),B=a("p",null,"之后，我在工作中才开始尝试使用各种各样的设计模式，让自己的代码也变得更加灵活和可复用。这个过程大概持续了好几年的时间，这几年的时间里，我反复地阅读了几本关于设计模式的书，从多个方面去了解设计模式究竟是如何解决技术问题的。可以这么说，如果你不懂设计模式，你就不懂面向对象编程，你就没有真正掌握那些面向对象编程的强大技术。所以掌握面向对象编程一定要学习设计模式。",-1),T=a("h2",{id:"《敏捷软件开发-原则模式与实践》",tabindex:"-1"},[e("《敏捷软件开发------原则模式与实践》 "),a("a",{class:"header-anchor",href:"#《敏捷软件开发-原则模式与实践》","aria-label":'Permalink to "《敏捷软件开发------原则模式与实践》"'},"​")],-1),C=a("p",null,"还有一本给我震撼的书是 Bob 大叔的这本《敏捷软件开发------原则模式与实践》，如下图所示。这本书里面提出了一个重要的软件设计思想方法， 就是在软件开发过程中，需求一定是会变更的。软件设计的重要的使命就是去面对需求变更，去解决需求变更的问题，也就是所谓的敏捷开发。",-1),v=a("br",null,null,-1),E=a("p",null,"但是敏捷开发最重要的并不是什么软件开发方法、软件开发过程管理，而是软件设计本身。你设计出来的软件，必须真正是灵活、敏捷、易于维护、易于扩展、易于变更的，只有这样你才算做到了敏捷软件开发。",-1),S=a("p",null,"那么如何做到让自己开发的软件灵活、易维护、易变更、易扩展？Bob 大叔在这本书里面给了几组软件开发的设计原则、设计模式与最佳实践。包括了很多人都很熟悉的：开闭原则、依赖倒转原则、里氏替换原则、接口隔离原则、单一职责原则。",-1),V=a("p",null,"在这本书里面 Bob 大叔说，优秀的工程师不应该害怕需求变更，而是应该欢迎需求变更。因为所谓的优秀的软件就是面向需求组变更设计的，只有当需求变更发生的时候，自己的设计才能够体现出价值来。而好的程序和差的程序员之间的差别并不在于开发的功能是否完备，而是在于开发出来的软件是否更易于维护和扩展。",-1),M=a("h2",{id:"《企业应用架构模式》",tabindex:"-1"},[e("《企业应用架构模式》 "),a("a",{class:"header-anchor",href:"#《企业应用架构模式》","aria-label":'Permalink to "《企业应用架构模式》"'},"​")],-1),N=a("p",null,"如下图所示，《企业应用架构模式》也是一本关于模式的书，作者是大名鼎鼎的马丁·弗洛（Martin Fowler）。",-1),U=a("br",null,null,-1),I=a("p",null,"我以前也曾经很好奇这些做架构设计的，开发出来灵活可复用的框架的人，他们是如何工作的？他们为什么能够开发出来这样有技术难度的产品来。马丁·弗洛在这本书里面对各种各样的企业应用架构模式进行了总结，看了这本书，你会发现各种各样的框架、工具、架构方法，其实都是有模式可循的，也就是有套路可循的。",-1),D=a("p",null,'所谓的"模式"就是指可重复使用的解决方案。人们在实践中发现很多软件开发的需求问题，要面对的架构问题都是相似的，它的解决方法也是相似的，把这些相似的解决方法总结出来，就构成了架构模式。马丁·弗洛在这本书里面对企业应用架构的各种模式都进行了总结。基本上通过这本书，你对于企业应用开发过程中的各种问题，和相对的解决方案，以及方案的各种优缺点，都会有一个完整的了解和认知。',-1),J=a("p",null,"更重要的是，你一旦洞悉了这模式背后的规律，你也就对自己的工作，对其他人的工作有了一个更高层次的认知和感悟。你不会再纠结于眼前的这些方法问题，你会超越这些方法和问题，去更高一层看待它们，看它们是否有某种重复性，是否可以进行提炼？这样思考以后，随着工作经验的积累，你就会形成自己的一套架构模式、设计模式，从而真正进入了高手和专家之路。",-1),w=a("h2",{id:"《卓有成效的管理者》",tabindex:"-1"},[e("《卓有成效的管理者》 "),a("a",{class:"header-anchor",href:"#《卓有成效的管理者》","aria-label":'Permalink to "《卓有成效的管理者》"'},"​")],-1),R=a("p",null,"最后再推荐一本关于管理的书。关于软件开发管理也有很多书，但是管理这件事情其实是有通用性的。软件开发过程中的管理并不特别，这本彼得·德鲁克（Peter F. Drucker）的《卓有成效的管理者》，如下图，讲述了对于知识性、技术性的组织和团队管理中的一些特点和技巧。彼得·德鲁克被认为是管理学大师中的大师，影响了非常多的人，而且彼得·德鲁克并不教条地去讲述那些管理方法和技巧，他认为最好的管理方法、管理技巧其实在小说里，而不是管理学的课本里，管理最重要的就是要洞悉人性，了解人的所求所想，进而利用人的本性，将人有效地组织起来，进行管理。",-1),j=i("",9);function z(O,F,$,H,L,Q){const t=s("Image");return n(),r("div",null,[_,c,d,p,u,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/2B/CgoB5l2-U8qABw53AADfMNkTB88914.png"}),e(),b,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/4B/CgotOV2-U8qABGWwAADu716xF6k769.png"}),e(),m,f,A,g,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/2B/CgoB5l2-U8qAXiKfAABjkzC8Z0E337.png"}),e(),q,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/4B/CgotOV2-U8qAZ6uCAAMEAN6Qznw688.png"}),e(),k,P,x,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/2B/CgoB5l2-U8uAALRmAAKzpkSACoI534.png"}),e(),B,T,C,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/4B/CgotOV2-U8uAEbR5AANYR9BMEzw854.png"}),e(),v,E,S,V,M,N,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/2B/CgoB5l2-U8uAHUcwAANbzooUmqA805.png"}),e(),U,I,D,J,w,R,o(t,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/A3/4B/CgotOV2-U8yAHG9CAAFfce3XQZ0765.png"}),e(),j])}const K=l(h,[["render",z]]);export{G as __pageData,K as default};
