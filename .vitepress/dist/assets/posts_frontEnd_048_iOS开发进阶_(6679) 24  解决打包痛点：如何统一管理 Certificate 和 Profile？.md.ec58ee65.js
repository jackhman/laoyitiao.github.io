import{_ as l,j as e,o as t,g as c,k as a,Q as o,s,h as p}from"./chunks/framework.4e7d56ce.js";const H=JSON.parse('{"title":"什么是证书和 Provisioning Profile ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/048_iOS开发进阶/(6679) 24  解决打包痛点：如何统一管理 Certificate 和 Profile？.md","filePath":"posts/frontEnd/048_iOS开发进阶/(6679) 24  解决打包痛点：如何统一管理 Certificate 和 Profile？.md","lastUpdated":1696417798000}'),r={name:"posts/frontEnd/048_iOS开发进阶/(6679) 24  解决打包痛点：如何统一管理 Certificate 和 Profile？.md"},i=o('<p>一个优秀的 iOS 开发者所需要做的工作不仅仅是编写代码那么简单，还要管理证书（Certificates）和 Provisioning Profile、打包和签名 App、上架与分发等。你如果做过这些操作的话应该知道，单纯通过手工的方式来完成，每个步骤都需要花费大量的时间，而且十分容易出错。</p><p>那有没有什么办法能帮我们节省这些手工操作的时间呢？答案当然是肯定的。我们可以<strong>通过 fastlane 来自动化这些操作</strong>，所以，在这一讲中我们就来介绍下如何通过 fastlane 来统一管理证书和 Provisioning Profiles。</p><h3 id="什么是证书和-provisioning-profile" tabindex="-1">什么是证书和 Provisioning Profile <a class="header-anchor" href="#什么是证书和-provisioning-profile" aria-label="Permalink to &quot;什么是证书和 Provisioning Profile&quot;">​</a></h3><p>刚接触 iOS 的开发者可能都会有一个疑惑：为什么在 iOS 开发过程中需要管理私钥、证书、Provisioning Profile 以及设备列表等信息呢？</p><p>这是因为<strong>苹果要给 App 的终端用户提供安全和稳定的体验</strong>。而要达到这一效果，苹果就得要求所有开发者在用户安装之前必须为 App 进行打包和签名。有了这些签名，苹果就知道这些 App 到底是谁开发的，签名以后 App 是否被修改过。</p><p>这里的打包和签名操作就涉及私钥、证书和 Provisioning Profile 等组件，我们可以结合下面这张图看看这些组件之间的关系：</p>',6),E=o('<p>那这些组件到底都有什么作用呢？下面我们来分别说明下。</p><ul><li><p><strong>苹果证书机构</strong>。世界上有好多证书机构（CA），但当我们通过 App Store Connect 发布 App 的时候，苹果公司只认它自己的证书机构。因为苹果证书机构归苹果公司所有，所以苹果公司对安装到设备上的所有 iOS App 都有最终的控制权。</p></li><li><p><strong>私钥</strong>。这是生成签名证书所需的私钥文件，通常是一个后缀名为 .p12 的文件。私钥是证明我们身份的唯一信息源，假如丢失了这个私钥，那其他人就能伪装成我们了，非常不安全。当我们手工生成证书时，会通过 Keychain Access 程序生成一个后缀为 .certSigningRequest 的 Certificate Signing Request 文件和私钥文件，然后把 .certSigningRequest 文件上传到苹果开发者网站，苹果公司就可以通过这个请求，并使用苹果证书机构来为我们发行一个证书。</p></li><li><p><strong>签名证书</strong>。签名证书是由苹果证书机构通过提供的 .certSigningRequest 文件所签发的，因此苹果公司知道这个证书的所有人。苹果公司会把这个证书作为签名主体。签名证书通常是一个后缀名为 .cer 的文件，该 .cer 文件包含了开发者 ID、团队 ID 和公钥信息。</p></li><li><p><strong>发布渠道</strong>。我们可以把 App 通过不同渠道发布出去，目前支持的渠道有 Development、Ad Hoc、Enterprise 和 App Store。当我们在 Xcode 上把 App 部署到设备进行 Debug 时，一般会使用 Development 渠道。当我们把 App 分发给内部测试用户时，可以使用 Ad Hoc 渠道。如果开发企业内的 App，可以使用 Enterprise 渠道来发布。而对于要上传到 App Store 的 App，就必须使用 App Store 渠道了。</p></li><li><p><strong>App ID</strong>。每个 App 都有唯一的 ID。根据不同的用途，我们为 Moments App 建立了三个 App ID，分别用于开发与调试、内部测试和上架 App Store。</p></li><li><p><strong>设备列表</strong>。当我们通过 Ad Hoc 渠道来发布 App 时，要把需要安装 App 的设备添加到设备列表中，只有在设备列表中的设备才能安装 Ad Hoc 渠道的 App。</p></li><li><p><strong>Provisioning Profile</strong>。有了证书以后，我们可以为不同的 App ID 以及不同的发布渠道来生成不同的 Provisioning profile，通常是一个后缀名为 .mobileprovision 或 .provisionprofile 的文件。该文件包含 App ID 所指向的 Entitlements 信息，以及发布渠道、团队 ID 和设备列表信息。我们通常为不同用途的 App 生成不同的 Provisioning Profile，例如我们为 Moments App 的 App Store 版本生成一个 Provisioning Profile，然后再为 Moments App 的 Internal 版本生成另外一个 Provisioning Profile。</p></li></ul><h3 id="搭建管理证书和-provisioning-profile-的环境" tabindex="-1">搭建管理证书和 Provisioning Profile 的环境 <a class="header-anchor" href="#搭建管理证书和-provisioning-profile-的环境" aria-label="Permalink to &quot;搭建管理证书和 Provisioning Profile 的环境&quot;">​</a></h3><p>假如你手工生成过私钥、证书和 Provisioning Profile 文件，并在苹果开发者网站上进行过上传、下载和安装的话，就知道这些操作过程有多麻烦。</p><ul><li><p>有些团队会为每个成员生成多个不同的证书来进行签名，这将导致大量证书和 Provisioning Profile 文件的出现，十分难管理。</p></li><li><p>证书都是有期限的，每次延展期限都需要手工更新所有的 Provisioning Profiles。</p></li><li><p>当添加新增设备时，也需要更新 Ad Hoc 的 Provisioning Profiles。</p></li><li><p>当搭建 CI 的时候，又需要花大量时间来下载、安装私钥、证书和 Provisioning Profiles 文件。</p></li></ul><p>那有没有什么办法来简化证书和 Provisioning Profiles 的管理工作呢？幸运的是<strong>fastlane 为我们提供了一个名叫 match 的 Action 来为整个团队统一管理并共享所有证书和 Provisioning Profile</strong>。</p><p>下面我们就来看一下如何使用 fastlane 的 match Action 搭建所需的环境吧。</p><h4 id="建-github-私有-repo" tabindex="-1">建 GitHub 私有 Repo <a class="header-anchor" href="#建-github-私有-repo" aria-label="Permalink to &quot;建 GitHub 私有 Repo&quot;">​</a></h4><p>为了把证书共享给整个团队使用，fastlane match 需要把私钥和证书保存在云端的存储服务上。目前支持的云存储服务有亚马逊的 S3、谷歌云和微软的 Azure 等。但<strong>我推荐使用 GitHub 私有 Repo 来存储私钥和证书，因为 GitHub 私有 Repo 是免费的，而且有详细的修改历史</strong>。Moments App 的证书就保存在 GitHub 的私有 Repo 里面，下面我们讲一下如何搭建 GitHub 私有 Repo。</p><p>我们可以点击 GitHub 网站右上角的加号（+）按钮，然后选择 New repository 菜单来新建私有 Repo。因为该 Repo 用于签名，所以我会以&quot;&lt;项目名称&gt;-codesign&quot;的方式来命名，例如叫 moments-codesign。具体页面情况如下图所示：</p>',10),y=s("p",null,[p("这里需要注意："),s("strong",null,"我们必须把 Repo 设置为 Private，因为该 Repo 保存了私钥等关键信息"),p("，一旦设置为 Public 的话，所有人都可以访问它了。")],-1),d=s("h4",{id:"生成-github-access-token",tabindex:"-1"},[p("生成 GitHub Access Token "),s("a",{class:"header-anchor",href:"#生成-github-access-token","aria-label":'Permalink to "生成 GitHub Access Token"'},"​")],-1),_=s("p",null,[s("strong",null,"那怎样才能让整个团队都能访问这个私有 Repo 呢？答案是使用 GitHub Access Token。")],-1),u=s("p",null,"我推荐的做法是为每一个 App 新建一个 GitHub 账户，例如新建一个叫作 momentsci 的账户，然后把该账户添加到私有 Repo 的贡献者列表里面。如下图所示：",-1),g=s("p",null,"这样子，momentsci 用户就能访问和更新该私有 Repo 了。",-1),F=s("p",null,'下一步是为 momentsci 用户生成 GitHub Access Token。当我们通过 momentsci 登录到 GitHub 以后，点击 Settings -> Developer settings -> Personal access tokens 来打开来配置页面，接着再点击 Generate new token 按钮，在 Note 输入框填写 Token 的用途，比如写上"用于 Moments App 的 CI"，然后在 Select scopes 选上 repo，如下图所示：',-1),C=s("p",null,"因为我们选择了 Full controll of private repositories（能完全控制所有私有 Repo），所以使用该 Token 的应用程序（例如 fastlane）就有权限访问 momentsci 用户所能访问的所有 Repo，并且能 push commit 到这些 Repo 去。当我们点击 Generate token 按钮以后就生成一个如下图所示的 Token：",-1),h=o('<p>这里需要注意，我们<strong>一定要好好保存这个 Token</strong>，因为一旦关闭该页面以后就无法再从 GitHub 上找到该 Token 了。为了使得团队所有人都可以使用到这个 Token，我推荐把它存放在团队密码共享服务里面，目前比较流行的密码共享服务有 LastPass、OnePassword 等。</p><p>有了这个 Token 以后，我们还需要生成一个 BASE64 字符串提供给 fastlane 使用，命令如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> echo </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">n your_github_username</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">your_personal_access_token </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> base64</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> echo </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">n your_github_username</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">your_personal_access_token </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> base64</span></span></code></pre></div><p>不过需要把 your_github_username 替换为 GitHub 用户名，例如 momentsci 用户，然后把 your_personal_access_token 替换成刚才所生成的 Token。</p><p>接着就可以在 Shell 里把 BASE64 赋值给环境变量<code>MATCH_GIT_BASIC_AUTHORIZATION</code>，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> export MATCH_GIT_BASIC_AUTHORIZATION</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">YOUR BASE64 KEY</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> export MATCH_GIT_BASIC_AUTHORIZATION</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">YOUR BASE64 KEY</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>为了提高安全性，我们还可以配置环境变量<code>MATCH_PASSWORD</code>来加密私钥、证书和 Provisioning Profile 文件。但是需要注意：<strong>一定要记住这个密码，因为使用这些文件的机器都需要使用到该密码</strong>。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> export MATCH_PASSWORD</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">YOUR MATCH PASSWORD</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> export MATCH_PASSWORD</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">YOUR MATCH PASSWORD</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h4 id="生成-app-store-connect-api-key" tabindex="-1">生成 App Store Connect API Key <a class="header-anchor" href="#生成-app-store-connect-api-key" aria-label="Permalink to &quot;生成 App Store Connect API Key&quot;">​</a></h4><p>因为生成证书和 Provisioning Profile 的过程需要与苹果开发者网站进行交互，所以 fastlane 也需要具备访问苹果开发者网站的权限。</p><p>目前 fastlane 提供了几种办法来访问苹果开发者网站，例如，输入登录所需的用户名和密码等。但<strong>我推荐使用 App Store Connect API Key 的方式</strong>，因为 API Key 既能有效控制访问权限，也可以随时让该 Key 失效。</p><p>我们可以在 App Store Connect 网站上生成该 Key，在网站上选择 Users and Access -&gt; Keys -&gt; App Store Connect API，然后点击加号（+）来生成 Key，会弹出下面的输入框：</p>',12),A=o(`<p>Key 的名称可以填写其用途，例如使用到 CI 上我们就填 &quot;Moments CI&quot;，然后在 Access 里选择 App Manager。需要注意：<strong>必须选择 App Manager 以上的权限</strong>，因为使用 App Manager 以下的权限，fastlane 在执行过程中会出错。这是 fastlane 的一个已知的问题，假如以后解决了该问题，我们就可以选择 Developer 权限，原则上是该 Key 的 Access 权限越低就越安全。</p><p>当 Key 生成完毕后，我们需要把它保存起来，并在 Shell 里把该 Key 赋值给环境变量<code>APP_STORE_CONNECT_API_CONTENT</code>，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> export APP_STORE_CONNECT_API_CONTENT</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">App Store Connect API</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> export APP_STORE_CONNECT_API_CONTENT</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">App Store Connect API</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>到这里，管理证书和 Provisioning Profile 的环境就配置完了。配置的步骤虽然有点多，但是<strong>每个项目只需配置一次就好了，其他项目成员无须重复配置</strong>。为了进一步简化环境变量的赋值操作，我推荐在项目根目录下建立一个名叫 local.keys 的文件，然后把所有环境变量都放在该文件里面，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">APP_STORE_CONNECT_API_CONTENT</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">App Store Connect API </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> an App Manager</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">GITHUB_API_TOKEN</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">GitHub API token </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> accessing the </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> repo </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> certificates and provisioning profiles</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">MATCH_PASSWORD</span><span style="color:#F97583;">=&lt;</span><span style="color:#E1E4E8;">Password </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> certificates </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> App signing on GitHub </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> repo</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">APP_STORE_CONNECT_API_CONTENT</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">App Store Connect API </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> an App Manager</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">GITHUB_API_TOKEN</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">GitHub API token </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> accessing the </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> repo </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> certificates and provisioning profiles</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">MATCH_PASSWORD</span><span style="color:#D73A49;">=&lt;</span><span style="color:#24292E;">Password </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> certificates </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> App signing on GitHub </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> repo</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>接着在根目录执行以下的命令：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> source .</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">scripts</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">export_env.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> source .</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">scripts</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">export_env.sh</span></span></code></pre></div><p>这样就能把所有环境变量一次性导入当前的 Shell 里面，不过注意，这里需要使用<code>source</code>命令，否则环境变量只会导出到子 Shell 里面。</p><p>这里还需要提醒一下，因为我们不应该把机密信息上传到 Git 服务器上，所以该 local.keys 文件需要配置到 .gitignore 文件里面。</p><h3 id="使用-fastlane-管理证书和-provisioning-profile" tabindex="-1">使用 fastlane 管理证书和 Provisioning Profile <a class="header-anchor" href="#使用-fastlane-管理证书和-provisioning-profile" aria-label="Permalink to &quot;使用 fastlane 管理证书和 Provisioning Profile&quot;">​</a></h3><p>有了上述的环境搭建与配置，我们就可以使用 fastlane 来统一管理证书和 Provisioning Profile 了。</p><h4 id="生成证书和-provisioning-profile" tabindex="-1">生成证书和 Provisioning Profile <a class="header-anchor" href="#生成证书和-provisioning-profile" aria-label="Permalink to &quot;生成证书和 Provisioning Profile&quot;">​</a></h4><p>第一步是生成证书和 Provisioning Profile，每个项目也只需执行一次这样的操作。</p><p>为了简化，我把生成证书和 Profile 的操作都封装在<code>create_new_profiles</code>Lane 里面，只需要执行<code>bundle exec fastlane create_new_profiles</code>命令即可，该 Lane 的具体代码如下：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">desc </span><span style="color:#9ECBFF;">&quot;Create all new provisioning profiles managed by fastlane match&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">lane </span><span style="color:#79B8FF;">:create_new_profiles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">  api_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> get_app_store_connect_api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  keychain_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;TemporaryKeychain&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  keychain_password </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;TemporaryKeychainPassword&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  create_keychain(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">default_keychain:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">timeout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3600</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">unlock:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">  match(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;adhoc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">storage_mode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;git&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">git_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">app_identifier:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">api_key:</span><span style="color:#E1E4E8;"> api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">  match(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;appstore&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">storage_mode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;git&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">git_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">app_identifier:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.ibanimatable.moments&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">api_key:</span><span style="color:#E1E4E8;"> api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">desc </span><span style="color:#032F62;">&quot;Create all new provisioning profiles managed by fastlane match&quot;</span></span>
<span class="line"><span style="color:#24292E;">lane </span><span style="color:#005CC5;">:create_new_profiles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">  api_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> get_app_store_connect_api_key</span></span>
<span class="line"><span style="color:#24292E;">  keychain_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TemporaryKeychain&quot;</span></span>
<span class="line"><span style="color:#24292E;">  keychain_password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TemporaryKeychainPassword&quot;</span></span>
<span class="line"><span style="color:#24292E;">  create_keychain(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">default_keychain:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">timeout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3600</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">unlock:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  match(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;adhoc&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">storage_mode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;git&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">git_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">app_identifier:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">api_key:</span><span style="color:#24292E;"> api_key</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  match(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;appstore&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">storage_mode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;git&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">git_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">app_identifier:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.ibanimatable.moments&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">api_key:</span><span style="color:#24292E;"> api_key</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>该 Lane 主要由三部分组成。</p><p>第一部分是调用<code>create_keychain</code>Action 来生成 Keychain。因为 fastlane 所生成的私钥和证书都需要保存在 Keychain 里，所以我们要生成一个 Keychain 来保存它们。为了不影响默认的 Keychain，我们把<code>false</code>传递给<code>default_keychain</code>参数，表示生成的 Keychain 不是默认的 Keychain。</p><p>第二部分是通过指定 Ad Hoc 作为发布渠道来为 Internal App 生成证书和 Provisioning Profile，并把它们上传到 GitHub 私有 Repo，这样我们就能使用这个 Provisioning Profile 为 Internal App 进行签名和打包。</p><p>第三部分与第二部分非常类似，也是用于生成证书和 Provisioning Profile。不同的是它生成了发布渠道为 Appstore 类型的 Provisioning Profile，有了该 Provisioning Profile，我们就能为 AppStore 版本的 App 进行签名和打包。</p><p>你可能发现，我们调用了私有 Lane<code>get_app_store_connect_api_key</code>来获取<code>api_key</code>变量的值。该私有 Lane 的定义如下：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">desc </span><span style="color:#9ECBFF;">&#39;Get App Store Connect API key&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  private_lane </span><span style="color:#79B8FF;">:get_app_store_connect_api_key</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">    key_content </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ENV</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;APP_STORE_CONNECT_API_CONTENT&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    api_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> app_store_connect_api_key(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">key_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;D9B979RR69&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">issuer_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;69a6de7b-13fb-47e3-e053-5b8c7c11a4d1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">key_content:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;-----BEGIN EC PRIVATE KEY-----</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> key_content </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">-----END EC PRIVATE KEY-----&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">duration:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">in_house:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    api_key </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">desc </span><span style="color:#032F62;">&#39;Get App Store Connect API key&#39;</span></span>
<span class="line"><span style="color:#24292E;">  private_lane </span><span style="color:#005CC5;">:get_app_store_connect_api_key</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">    key_content </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ENV</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;APP_STORE_CONNECT_API_CONTENT&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    api_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> app_store_connect_api_key(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">key_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;D9B979RR69&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">issuer_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;69a6de7b-13fb-47e3-e053-5b8c7c11a4d1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">key_content:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;-----BEGIN EC PRIVATE KEY-----</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> key_content </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">-----END EC PRIVATE KEY-----&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">duration:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">in_house:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    api_key </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span></code></pre></div><p>该私有 Lane 从环境变量中读取了<code>APP_STORE_CONNECT_API_CONTENT</code>的值，然后通过调用<code>app_store_connect_api_key</code>Action 来获取临时的 App Store Connect API Key。其中，<code>key_id</code>和<code>issuer_id</code>的值都可以在 App Store Connect 的 Keys 配置页面上找到。</p><p>如果你没有为 GitHub 配置全局的用户名和邮箱，那么在执行<code>bundle exec fastlane create_new_profiles</code>命令时可能会出错。你可以通过下面的命令来解决这个问题，在命令执行完之后还可通过<code>git config --global --edit</code>命令把这些配置删掉。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> git config </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">global user.email </span><span style="color:#9ECBFF;">&quot;MomentsCI@lagou.com&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">$</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> git config </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">global user.name </span><span style="color:#9ECBFF;">&quot;Moments CI&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git config </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">global user.email </span><span style="color:#032F62;">&quot;MomentsCI@lagou.com&quot;</span></span>
<span class="line"><span style="color:#24292E;">$</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> git config </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">global user.name </span><span style="color:#032F62;">&quot;Moments CI&quot;</span></span></code></pre></div><p>当<code>create_new_profiles</code>命令成功执行以后，你可以在私有 Repo 上看到两个新的文件夹，如下图所示：</p>`,25),m=s("p",null,[p("其中，"),s("strong",null,"certs 文件夹用于保存私钥（.p12）和证书（.cer）文件，而 profiles 文件夹则用来保存 adhoc 和 appstore 两个 Provisioning Profile 文件"),p("。")],-1),f=s("p",null,"你也可以在苹果开发者网站查看新的证书文件：",-1),k=s("p",null,"同时还可以看到 Provisioning Profile 文件：",-1),P=s("p",null,"除此之外，你还可以在 Keychain App 里面找到新增的私钥和证书，如下图所示：",-1),q=o(`<h4 id="下载证书和-provisioning-profile" tabindex="-1">下载证书和 Provisioning Profile <a class="header-anchor" href="#下载证书和-provisioning-profile" aria-label="Permalink to &quot;下载证书和 Provisioning Profile&quot;">​</a></h4><p>一个项目只需要执行一次生成证书和 Provisioning Profile 的操作，其他团队成员可通过<code>bundle exec fastlane download_profiles</code>命令来下载证书和 Provisioning Profile。该 Lane 的代码如下：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">desc </span><span style="color:#9ECBFF;">&quot;Download certificates and profiles&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">lane </span><span style="color:#79B8FF;">:download_profiles</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">  keychain_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;TemporaryKeychain&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  keychain_password </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;TemporaryKeychainPassword&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  create_keychain(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">default_keychain:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">timeout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3600</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">unlock:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">  match(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;adhoc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">readonly:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">storage_mode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;git&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">git_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">app_identifier:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">  match(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;appstore&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">readonly:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_name:</span><span style="color:#E1E4E8;"> keychain_name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">keychain_password:</span><span style="color:#E1E4E8;"> keychain_password,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">storage_mode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;git&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">git_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">app_identifier:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.ibanimatable.moments&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">desc </span><span style="color:#032F62;">&quot;Download certificates and profiles&quot;</span></span>
<span class="line"><span style="color:#24292E;">lane </span><span style="color:#005CC5;">:download_profiles</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">  keychain_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TemporaryKeychain&quot;</span></span>
<span class="line"><span style="color:#24292E;">  keychain_password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;TemporaryKeychainPassword&quot;</span></span>
<span class="line"><span style="color:#24292E;">  create_keychain(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">default_keychain:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">timeout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3600</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">unlock:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  match(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;adhoc&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">readonly:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">storage_mode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;git&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">git_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">app_identifier:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  match(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;appstore&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">readonly:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_name:</span><span style="color:#24292E;"> keychain_name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">keychain_password:</span><span style="color:#24292E;"> keychain_password,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">storage_mode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;git&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">git_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">app_identifier:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.ibanimatable.moments&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>你会发现<code>download_profiles</code>和<code>create_new_profiles</code>两个 Lane 的实现非常类似，都是由三部分组成，包括生成 Keychain、下载 Internal App 的证书和 Provisioning Profile 以及 AppStore 版本 App 的证书和 Provisioning Profile。不同的地方是<code>download_profiles</code>Lane 不需要更新 App Store Connect，所以无须使用 App Store Connect 的 API Key；并且<code>download_profiles</code>Lane 也不需要更新私有 Repo 的内容，所以在调用<code>match</code>Action 时，我们会把<code>true</code>传递给<code>readonly</code>参数。</p><h4 id="新增设备" tabindex="-1">新增设备 <a class="header-anchor" href="#新增设备" aria-label="Permalink to &quot;新增设备&quot;">​</a></h4><p>当我们通过 Ad Hoc 的方式来分发 App 时，必须把需要安装 App 的设备 ID 都添加到设备列表里面，你可以在苹果开发者网站的&quot;Certificates, Identifiers &amp; Profiles&quot;的 Devices 下查看所有设备信息。如下图所示：</p>`,6),v=o(`<p>但是手工更新设备列表的操作比较麻烦，而且更新完以后还需要再更新 Provisioning Profile。幸运的是 fastlane 能帮我们自动化这些操作，我们把这些操作都封装在<code>add_device</code>Lane 里面，具体代码如下：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">desc </span><span style="color:#9ECBFF;">&quot;Add a new device to provisioning profile&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">lane </span><span style="color:#79B8FF;">:add_device</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">do</span><span style="color:#E1E4E8;"> |options|</span></span>
<span class="line"><span style="color:#E1E4E8;">  name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options[</span><span style="color:#79B8FF;">:name</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  udid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> options[</span><span style="color:#79B8FF;">:udid</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># Add to App Store Connect</span></span>
<span class="line"><span style="color:#E1E4E8;">  api_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> get_app_store_connect_api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  register_device(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">name:</span><span style="color:#E1E4E8;"> name,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">udid:</span><span style="color:#E1E4E8;"> udid,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">api_key:</span><span style="color:#E1E4E8;"> api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># Update the profiles to Git private repo</span></span>
<span class="line"><span style="color:#E1E4E8;">  match(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;adhoc&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">force:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">storage_mode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;git&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">git_url:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">app_identifier:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">team_id:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;6HLFCRTYQU&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">api_key:</span><span style="color:#E1E4E8;"> api_key</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">desc </span><span style="color:#032F62;">&quot;Add a new device to provisioning profile&quot;</span></span>
<span class="line"><span style="color:#24292E;">lane </span><span style="color:#005CC5;">:add_device</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">do</span><span style="color:#24292E;"> |options|</span></span>
<span class="line"><span style="color:#24292E;">  name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> options[</span><span style="color:#005CC5;">:name</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  udid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> options[</span><span style="color:#005CC5;">:udid</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># Add to App Store Connect</span></span>
<span class="line"><span style="color:#24292E;">  api_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> get_app_store_connect_api_key</span></span>
<span class="line"><span style="color:#24292E;">  register_device(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">name:</span><span style="color:#24292E;"> name,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">udid:</span><span style="color:#24292E;"> udid,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">api_key:</span><span style="color:#24292E;"> api_key</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># Update the profiles to Git private repo</span></span>
<span class="line"><span style="color:#24292E;">  match(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;adhoc&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">force:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">storage_mode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;git&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">git_url:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://github.com/JakeLin/moments-codesign&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">app_identifier:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.ibanimatable.moments.internal&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">team_id:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;6HLFCRTYQU&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">api_key:</span><span style="color:#24292E;"> api_key</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>首先调用<code>register_device</code>Action 把设备更新到苹果开发者网站上的设备列表里面，然后把<code>true</code>传递给<code>force</code>参数来调用<code>match</code>Action，这个操作能强制更新 Ad Hoc 的 Provisioning Profile 并上传到私有 Repo 里。这样当其他机器在调用<code>download_profiles</code>命令的时候，就能获取最新的 Provisioning Profile 了。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>在这一讲中，我们讲述了如何使用 fastlane 的 match Action 来帮我们统一管理签名和打包所需的私钥、证书和 Provisioning Profile 文件。</p><p>在实际项目中，我们只需要<strong>一次性完成搭建的任务</strong> ，例如生成私钥 Repo、导出 Github Access Token 和 App Store Connect API Key，以及调用<code>create_new_profiles</code>来生成所需的证书和 Provisioning Profile。其他团队成员和 CI 服务器就可以通过调用<code>download_profiles</code>来下载证书。当需要为 Ad Hoc 发布渠道添加新设备时，只需要执行<code>add_device</code>即可。</p><p>有了<code>download_profiles</code>和<code>add_device</code>等命令，团队里任何人都可以轻松地下载打包和签名所需的私钥、证书和 Provisioning Profile 文件，无须手工使用 Keychain Access 程序来管理私钥，无须登录到苹果开发者网站下载和安装证书，无须到苹果开发者网站上手工添加设备，无须重新生成 Provisioning Profile 等。这样能减少大量无聊而且容易出错的手工操作工作，让我们把有效的时间都花在功能开发与迭代上。</p><p><strong>思考题</strong></p><blockquote><p>在 Moments App 中，我们为 Debug Target 使用了 Automatically manage signing 的方式来管理证书和 Provisioning Profile。这里请你思考一下，这样做有什么好处呢？</p></blockquote><p>可以把你的答案写到留言区哦。下一讲我将介绍如何使用自动化构建来解决大量重复性工作的问题。</p><p><strong>源码地址</strong></p><blockquote><p>Fastfile 文件地址：<a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/fastlane/Fastfile#L72-L207?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">https://github.com/lagoueduCol/iOS-linyongjian/blob/main/fastlane/Fastfile#L72-L207</a></p></blockquote>`,12);function b(B,T,D,S,I,R){const n=e("Image");return t(),c("div",null,[i,a(n,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image6/M00/3E/F6/Cgp9HWCbpROAFzsfAAbfDL-IX24841.png"}),E,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/3D/C3/CioPOWCWMc2ASbGgAAEeGAfOCoA064.png"}),y,d,_,u,a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/3D/C3/CioPOWCWMdSAYvK7AADj0dRNEHo360.png"}),g,F,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M00/3D/C3/CioPOWCWMdyAGRYeAAGmH0NcYDk620.png"}),C,a(n,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image6/M01/3E/F6/Cgp9HWCbpVKAIJRSAAQzSVGBgVk131.png"}),h,a(n,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image6/M01/3E/F7/Cgp9HWCbpZiAbIChAAC_Yq3o-fE466.png"}),A,a(n,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image6/M01/3E/F7/Cgp9HWCbpdWASXy9AAJKo3Mqtpg236.png"}),m,f,a(n,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image6/M01/3E/F7/Cgp9HWCbpfqAKc17AAFyb88k84o360.png"}),k,a(n,{alt:"图片10.png",src:"https://s0.lgstatic.com/i/image6/M00/3E/FF/CioPOWCbpheAOxNSAAFxbPkMv1o580.png"}),P,a(n,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image6/M00/3D/C3/CioPOWCWMyeAQN7wAAOKWo3am2o738.png"}),q,a(n,{alt:"图片11.png",src:"https://s0.lgstatic.com/i/image6/M00/3E/FF/CioPOWCbpj2AYt-xAAFbLA-2M_0002.png"}),v])}const O=l(r,[["render",b]]);export{H as __pageData,O as default};
