import{_ as a,j as l,o as p,g as o,k as e,h as t,Q as c,s}from"./chunks/framework.4e7d56ce.js";const v=JSON.parse('{"title":"19如何理解软件开发灵活性和高定制性？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/105-前端基础建设与架构文档/(5924) 19  如何理解软件开发灵活性和高定制性？.md","filePath":"posts/frontEnd/105-前端基础建设与架构文档/(5924) 19  如何理解软件开发灵活性和高定制性？.md","lastUpdated":1696682708000}'),r={name:"posts/frontEnd/105-前端基础建设与架构文档/(5924) 19  如何理解软件开发灵活性和高定制性？.md"},E=c("",87),y=s("p",null,'事实上，前端领域中的灵活性和高定制性编码方案和其他领域相关思想是完全一致的，设计模式和函数式具有"普世意义"，我们将会在下一讲中继续延伸这类话题。',-1),i=s("p",null,"这里我也给大家留一个思考题：你还用过哪些设计模式的使用场景呢？欢迎在留言区和我分享你的经历。下一讲，我们将深入对象和原型，理解 JavaScript 在这个方向上的能力。请注意，下一讲我们不再过多赘述基础，而是面向进阶，需要你具有一定的知识准备。我们下一讲再见。",-1);function u(F,d,g,h,C,A){const n=l("Image");return p(),o("div",null,[E,e(n,{alt:"前端基建 金句.png",src:"https://s0.lgstatic.com/i/image6/M00/04/4C/CioPOWAotoKAV0zTAAd4xm7pR44651.png"}),t(),y,i])}const f=a(r,[["render",u]]);export{v as __pageData,f as default};
