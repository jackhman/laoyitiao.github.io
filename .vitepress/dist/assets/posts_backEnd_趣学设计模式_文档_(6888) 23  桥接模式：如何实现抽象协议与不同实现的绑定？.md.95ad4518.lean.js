import{_ as o,j as e,o as t,g as c,k as a,h as s,Q as p,s as l}from"./chunks/framework.4e7d56ce.js";const C=JSON.parse('{"title":"23桥接模式：如何实现抽象协议与不同实现的绑定？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6888) 23  桥接模式：如何实现抽象协议与不同实现的绑定？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6888) 23  桥接模式：如何实现抽象协议与不同实现的绑定？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/趣学设计模式_文档/(6888) 23  桥接模式：如何实现抽象协议与不同实现的绑定？.md"},E=p("",8),y=p("",21),i=l("p",null,"在实现抽象行为时，我们可以使用上一讲介绍的适配器模式来扩展功能，也可以使用后面会学到的门面模式来扩展更多外部的服务功能。",-1),F=l("p",null,[s("总体来说，"),l("strong",null,"桥接模式的使用场景非常灵活，侧重于实体和行为的分离，然后再基于这两个维度进行独立的演化"),s("。")],-1),u=p("",18);function d(b,A,h,B,v,D){const n=e("Image");return t(),c("div",null,[E,a(n,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image6/M00/42/C5/CioPOWC1mZiAZVooAAEJbiv9h9Y497.png"}),s(),y,a(n,{alt:"image (10).png",src:"https://s0.lgstatic.com/i/image6/M01/42/BD/Cgp9HWC1maaANiHmAAFLmMCx4mE407.png"}),s(),i,F,a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/42/0E/CioPOWCvZCWAK6KBAAXrSHg7LDs282.png"}),s(),u])}const _=o(r,[["render",d]]);export{C as __pageData,_ as default};
