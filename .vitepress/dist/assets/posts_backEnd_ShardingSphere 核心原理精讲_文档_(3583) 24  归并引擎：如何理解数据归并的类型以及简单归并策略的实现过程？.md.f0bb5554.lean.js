import{_ as e,j as o,o as t,g as r,k as n,h as a,Q as l,s as p}from"./chunks/framework.cfb14fe0.js";const v=JSON.parse('{"title":"24归并引擎：如何理解数据归并的类型以及简单归并策略的实现过程？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3583) 24  归并引擎：如何理解数据归并的类型以及简单归并策略的实现过程？.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3583) 24  归并引擎：如何理解数据归并的类型以及简单归并策略的实现过程？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3583) 24  归并引擎：如何理解数据归并的类型以及简单归并策略的实现过程？.md"},E=l("",12),y=l("",5),i=l("",5),u=l("",30),d=p("p",null,"三张 health\\_task 表中的初始数据",-1),g=p("p",null,"上图中展示了 3 张表返回的数据结果集，每个数据结果集都已经根据 health_point 字段进行了排序，但是 3 个数据结果集之间是无序的。排序归并的做法就是将 3 个数据结果集的当前游标指向的数据值进行排序，并放入到一个排序好的队列中。",-1),F=p("p",null,"在上图中可以看到 health_task0 的第一个 health_point 最小，health_task1 的第一个 health_point 最大，health_task2 的第一个 health_point 次之，因此队列中应该按照 health_task1，health_task2 和 health_task0 的方式排序队列，效果如下：",-1),h=l("",20),C=p("p",null,"第一次 next 之后的优先级队列中的三张 health\\_task 表",-1),A=p("p",null,"之前队列中排名第二的 health_task2 的数据结果集则自动排在了队列首位。而在进行第二次 next 时，只需要将目前排列在队列首位的 health_task2 弹出队列，并且将其数据结果集游标指向的值返回。当然，对于 health_task2 而言，我们同样下移游标，并继续将它加入优先级队列中，以此类推。",-1),D=l("",9);function B(S,m,R,_,Q,x){const s=o("Image");return t(),r("div",null,[E,n(s,{alt:"Lark20200903-185718.png",src:"https://s0.lgstatic.com/i/image/M00/4A/3C/CgqCHl9QzC6AA5U7AABkojINfPw834.png"}),a(),y,n(s,{alt:"Lark20200903-185710.png",src:"https://s0.lgstatic.com/i/image/M00/4A/3C/CgqCHl9QzD6AG8aFAACQddjkR3E088.png"}),a(),i,n(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/4A/13/CgqCHl9Qli6AUetjAAAuTLxL5xw054.png"}),a(),u,n(s,{alt:"Lark20200903-190058.png",src:"https://s0.lgstatic.com/i/image/M00/4A/31/Ciqc1F9QzRSADVUyAABkYnJfMvs829.png"}),a(),d,g,F,n(s,{alt:"Lark20200903-185846.png",src:"https://s0.lgstatic.com/i/image/M00/4A/3C/CgqCHl9QzHiAf33WAABsaH9vLR0050.png"}),a(),h,n(s,{alt:"Lark20200903-185915.png",src:"https://s0.lgstatic.com/i/image/M00/4A/31/Ciqc1F9QzJaANhr0AABsaCCFqA0376.png"}),a(),C,A,n(s,{alt:"Lark20200903-185920.png",src:"https://s0.lgstatic.com/i/image/M00/4A/3C/CgqCHl9QzJ2AMQzxAABrQS5M0oA899.png"}),a(),D])}const f=e(c,[["render",B]]);export{v as __pageData,f as default};
