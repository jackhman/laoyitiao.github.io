import{_ as e,D as o,o as t,g as c,J as p,h as n,m as s,Q as l}from"./chunks/framework.f67d7268.js";const x=JSON.parse('{"title":"18不只HTTP，玩转WebService接口测试","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/114-测试开发入门与实战文档/(5193) 18  不只 HTTP，玩转 Web Service 接口测试.md","filePath":"posts/devops/114-测试开发入门与实战文档/(5193) 18  不只 HTTP，玩转 Web Service 接口测试.md","lastUpdated":1696682708000}'),r={name:"posts/devops/114-测试开发入门与实战文档/(5193) 18  不只 HTTP，玩转 Web Service 接口测试.md"},y=s("h1",{id:"_18不只http-玩转webservice接口测试",tabindex:"-1"},[n("18不只HTTP，玩转WebService接口测试 "),s("a",{class:"header-anchor",href:"#_18不只http-玩转webservice接口测试","aria-label":'Permalink to "18不只HTTP，玩转WebService接口测试"'},"​")],-1),E=s("p",null,"通过前面课时的讲解，我们已经对如何进行 UI 自动化和接口自动化测试有了相当深刻的理解。但是对于接口测试的分享，在前面课程的讲解中，我主要讲解了基于 HTTP 的 RESTFUL 的接口。",-1),i=s("p",null,"实际上，接口有很多形式，除了我们常见的 HTTP 形式的 RESTFUL 接口外，还有 Web Services 类型的接口，以及 RPC 接口。不同类型的接口测试方式各有不同。",-1),d=s("p",null,"今天我们就来看下，如何测试 Web Services 类型的接口，这节课的内容如下：",-1),_=l('<h3 id="什么是-web-services" tabindex="-1">什么是 Web Services？ <a class="header-anchor" href="#什么是-web-services" aria-label="Permalink to &quot;什么是 Web Services？&quot;">​</a></h3><p>Web Service 是一种跨编程语言和跨操作系统平台的远程调用技术。</p><p>通俗一点说，Web Service 就是一个应用程序，它<strong>通过向外界暴露一个能够通过 Web 进行调用的 API 来对外提供服务</strong>。WebService 可以跨编程语言和跨操作系统，即你的客户端程序和提供服务的服务端程序可以采用不同的编程语言，使用不同的操作系统。</p><p>举个例子来说，通过 WebServices，你运行在 windows 平台上的、以 C++ 编写的客户端程序就可以和运行在 Linux 平台上的，以 Java 编写的服务器程序进行通信。</p><h3 id="web-services-构成及调用原理" tabindex="-1">Web Services 构成及调用原理 <a class="header-anchor" href="#web-services-构成及调用原理" aria-label="Permalink to &quot;Web Services 构成及调用原理&quot;">​</a></h3><p>Web Service 平台的构成，依赖以下技术：</p><ul><li><p><strong>UDDI</strong>意为统一描述、发现和集成（Universal Description, Discovery, and Integration）,它是一种目录服务，通过它企业可注册并搜索 Web services，它是基于 XML 的跨平台描述规范。</p></li><li><p><strong>SOAP</strong>是一种简单的基于 XML 的协议，它使应用程序通过 HTTP 来交换信息。</p></li><li><p><strong>WSDL</strong>是基于 XML 的，用于描述 Web Services，以及如何访问 Web Services 的语言。</p></li></ul><p>Web service 的调用原理如下：</p>',8),F=l('<ul><li><p>Step 1. 客户端想调用一个服务，但是不知道去哪里调用，于是它向 UDDI 注册中心（UDDI Registry）询问；</p></li><li><p>Step 2. UDDI 注册中心，发现有个名字为 Web Service A 的服务器，可以提供客户端想要的服务；</p></li><li><p>Step 3. 客户端向 Web Service A 发送消息，询问应该如何调用它需要的服务；</p></li><li><p>Step 4. Web Service A 收到请求，发送给客户端一个 WSDL 文件。这里记录了 Web Service A 可以提供的各类方法接口；</p></li><li><p>Step 5. 客户端通过 WSDL 生成 SOAP 请求（将 Web Service 提供的 xml 格式的接口方法，采用 SOAP 协议封装成 HTTP 请求），发送给 Web Service A，调用它想要的服务；</p></li><li><p>Step 6. Web Service A 按照 SOAP 请求执行相应的服务，并将结果返回给客户端。</p></li></ul><h3 id="web-services-接口和-api-应用程序接口-的区别" tabindex="-1">Web Services 接口和 API（应用程序接口）的区别 <a class="header-anchor" href="#web-services-接口和-api-应用程序接口-的区别" aria-label="Permalink to &quot;Web Services 接口和 API（应用程序接口）的区别&quot;">​</a></h3><p>Web Services 接口和我们常用的 API（应用程序接口）有哪些区别呢？下面的表格展示了它们的区别：</p>',3),u=l(`<p>在我们的日常工作中，接口是以 Web Service、API，还是 RESTFUL API 形式提供给我们测试，常常取决于业务的实际情况。</p><h3 id="web-services-接口实战" tabindex="-1">Web Services 接口实战 <a class="header-anchor" href="#web-services-接口实战" aria-label="Permalink to &quot;Web Services 接口实战&quot;">​</a></h3><p>通过前面的讲解我们了解，WSDL 是 Web Services 生成给客户端调用的接口服务描述。通过 WSDL，客户端就可以构造正确的请求发送给服务端。</p><p>在实际工作中也是如此，对于 Web Services 形式的接口，开发提供的往往就是一个 WSDL 格式的链接。比如，下面的一个链接就是一个公用的 Web Servbice 服务接口：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># IP地址服务</span></span>
<span class="line"><span style="color:#E1E4E8;">http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># IP地址服务</span></span>
<span class="line"><span style="color:#24292E;">http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl</span></span></code></pre></div><h4 id="_1-suds-soap-客户端" tabindex="-1">1.suds - SOAP 客户端 <a class="header-anchor" href="#_1-suds-soap-客户端" aria-label="Permalink to &quot;1.suds - SOAP 客户端&quot;">​</a></h4><p>在 Python 中，客户端调用 Web Service 可以通过 suds 这个库来实现。suds Client 类提供了用于使用 Web Service 的统一 API 对象，这个对象包括以下两个命名空间。</p><ul><li><p>service：service 对象用来调用被消费的 web service 提供的方法。</p></li><li><p>factory：提供一个工厂（factory），可用于创建 WSDL 中定义的对象和类型的实例。</p></li></ul><p>下面来具体讲解下 suds 的使用。</p><ul><li><strong>suds 安装</strong></li></ul><p>在 Python 官方停止支持 Python 2.X 版本并全面转到 Python 3.X 后，suds 原始项目的开发已经停滞了，但这不意味着 suds 不再支持 Python 3.X。suds-community fork 了原本的 suds 库，并开发了能够支持 Python 3.X的 版本，其安装也比较简单：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pip install suds</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">community</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pip install suds</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">community</span></span></code></pre></div><ul><li><strong>简单使用</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> suds.client </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Client</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 初始化</span></span>
<span class="line"><span style="color:#E1E4E8;">    client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Client(url)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 打印出所有可用的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(client)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> suds.client </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Client</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 初始化</span></span>
<span class="line"><span style="color:#24292E;">    client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Client(url)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 打印出所有可用的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(client)</span></span></code></pre></div><p>直接运行上述代码，你会发现执行结果如下：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 运行结果片段</span></span>
<span class="line"><span style="color:#E1E4E8;">Suds ( https:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">fedorahosted.org</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">suds</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> )  version: </span><span style="color:#79B8FF;">0.8</span><span style="color:#E1E4E8;">.4</span></span>
<span class="line"><span style="color:#E1E4E8;">Service ( IpAddressSearchWebService ) tns</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;http://WebXml.com.cn/&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   Prefixes (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      ns0 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://WebXml.com.cn/&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   Ports (</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">      (IpAddressSearchWebServiceSoap)</span></span>
<span class="line"><span style="color:#E1E4E8;">         Methods (</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">            getCountryCityByIp(xs:string theIpAddress)</span></span>
<span class="line"><span style="color:#E1E4E8;">            getGeoIPContext()</span></span>
<span class="line"><span style="color:#E1E4E8;">            getVersionTime()</span></span>
<span class="line"><span style="color:#E1E4E8;">         Types (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">            ArrayOfString</span></span>
<span class="line"><span style="color:#E1E4E8;">      (IpAddressSearchWebServiceSoap12)</span></span>
<span class="line"><span style="color:#E1E4E8;">         Methods (</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">            getCountryCityByIp(xs:string theIpAddress)</span></span>
<span class="line"><span style="color:#E1E4E8;">            getGeoIPContext()</span></span>
<span class="line"><span style="color:#E1E4E8;">            getVersionTime()</span></span>
<span class="line"><span style="color:#E1E4E8;">         Types (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">            ArrayOfString</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 运行结果片段</span></span>
<span class="line"><span style="color:#24292E;">Suds ( https:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">fedorahosted.org</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">suds</span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> )  version: </span><span style="color:#005CC5;">0.8</span><span style="color:#24292E;">.4</span></span>
<span class="line"><span style="color:#24292E;">Service ( IpAddressSearchWebService ) tns</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;http://WebXml.com.cn/&quot;</span></span>
<span class="line"><span style="color:#24292E;">   Prefixes (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      ns0 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://WebXml.com.cn/&quot;</span></span>
<span class="line"><span style="color:#24292E;">   Ports (</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">      (IpAddressSearchWebServiceSoap)</span></span>
<span class="line"><span style="color:#24292E;">         Methods (</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            getCountryCityByIp(xs:string theIpAddress)</span></span>
<span class="line"><span style="color:#24292E;">            getGeoIPContext()</span></span>
<span class="line"><span style="color:#24292E;">            getVersionTime()</span></span>
<span class="line"><span style="color:#24292E;">         Types (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            ArrayOfString</span></span>
<span class="line"><span style="color:#24292E;">      (IpAddressSearchWebServiceSoap12)</span></span>
<span class="line"><span style="color:#24292E;">         Methods (</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            getCountryCityByIp(xs:string theIpAddress)</span></span>
<span class="line"><span style="color:#24292E;">            getGeoIPContext()</span></span>
<span class="line"><span style="color:#24292E;">            getVersionTime()</span></span>
<span class="line"><span style="color:#24292E;">         Types (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">            ArrayOfString</span></span></code></pre></div><p>在这段代码中，我打印出来了 IpAddressSearchWebService 支持的所有方法。你可以看到， 它有三个方法（Methods(3) 显示出这个 Web Service 所提供的方法及参数）。</p><ul><li><strong>实际案例</strong></li></ul><p>既然看出 IpAddressSearchWebService 这个 Web Service 支持 3 种方法，那么我们来应用下这些方法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> suds.client </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Client</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 初始化</span></span>
<span class="line"><span style="color:#E1E4E8;">    client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Client(url)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 打印出所有支持的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(client)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 调用支持的方法， 使用client.service</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(client.service.getVersionTime())</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(client.service.getCountryCityByIp(</span><span style="color:#9ECBFF;">&#39;192.168.0.1&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> suds.client </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Client</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 初始化</span></span>
<span class="line"><span style="color:#24292E;">    client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Client(url)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 打印出所有支持的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(client)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 调用支持的方法， 使用client.service</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(client.service.getVersionTime())</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(client.service.getCountryCityByIp(</span><span style="color:#032F62;">&#39;192.168.0.1&#39;</span><span style="color:#24292E;">))</span></span></code></pre></div><p>执行上述代码，你会发现有如下输出：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 输出结果片段</span></span>
<span class="line"><span style="color:#6A737D;">#此为getVersionTime这个方法的输出</span></span>
<span class="line"><span style="color:#E1E4E8;">IP地址数据库，及时更新</span></span>
<span class="line"><span style="color:#6A737D;"># 此为getCountryCityByIp方法的输出</span></span>
<span class="line"><span style="color:#E1E4E8;">(ArrayOfString){</span></span>
<span class="line"><span style="color:#E1E4E8;">   string[] = </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;192.168.0.1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;局域网 对方和您在同一内部网&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 输出结果片段</span></span>
<span class="line"><span style="color:#6A737D;">#此为getVersionTime这个方法的输出</span></span>
<span class="line"><span style="color:#24292E;">IP地址数据库，及时更新</span></span>
<span class="line"><span style="color:#6A737D;"># 此为getCountryCityByIp方法的输出</span></span>
<span class="line"><span style="color:#24292E;">(ArrayOfString){</span></span>
<span class="line"><span style="color:#24292E;">   string[] = </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;192.168.0.1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;局域网 对方和您在同一内部网&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre></div><p>注意，在代码里，我使用了 client.service 的方式，那是因为 service 对象用来调用被消费的 web service 提供的方法的。</p><p>在实际工作中，你遇见的 WSDL 接口将会比这个复杂得多。故正常情况下，我们会将 WSDL 的接口封装成类使用，然后针对每个类方法，编写相应的测试用例，如下所示：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pytest</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> suds.client </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">@pytest.mark.rmb</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebServices</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">WSDL_ADDRESS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Client(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">WSDL_ADDRESS</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_version_time</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service.service.getVersionTime()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_country_city_by_ip</span><span style="color:#E1E4E8;">(self, ip):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service.service.getCountryCityByIp(ip)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestWebServices</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_version_time</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">assert</span><span style="color:#E1E4E8;"> WebServices().get_version_time() </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;IP地址数据库，及时更新&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@pytest.mark.parametrize</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ip, expected&#39;</span><span style="color:#E1E4E8;">, [(</span><span style="color:#9ECBFF;">&#39;10.10.10.10&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;10.10.10.10&#39;</span><span style="color:#E1E4E8;">)])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_get_country_city_by_ip</span><span style="color:#E1E4E8;">(self, ip, expected):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">assert</span><span style="color:#E1E4E8;"> expected </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(WebServices().get_country_city_by_ip(ip))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    pytest.main([</span><span style="color:#9ECBFF;">&quot;-m&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;rmb&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-s&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-v&quot;</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pytest</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> suds.client </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Client</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">@pytest.mark.rmb</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebServices</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">WSDL_ADDRESS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Client(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">WSDL_ADDRESS</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_version_time</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service.service.getVersionTime()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_country_city_by_ip</span><span style="color:#24292E;">(self, ip):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service.service.getCountryCityByIp(ip)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestWebServices</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_version_time</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> WebServices().get_version_time() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;IP地址数据库，及时更新&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@pytest.mark.parametrize</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ip, expected&#39;</span><span style="color:#24292E;">, [(</span><span style="color:#032F62;">&#39;10.10.10.10&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;10.10.10.10&#39;</span><span style="color:#24292E;">)])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_get_country_city_by_ip</span><span style="color:#24292E;">(self, ip, expected):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> expected </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(WebServices().get_country_city_by_ip(ip))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    pytest.main([</span><span style="color:#032F62;">&quot;-m&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;rmb&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-s&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-v&quot;</span><span style="color:#24292E;">])</span></span></code></pre></div><h4 id="_2-zeep-soap-客户端" tabindex="-1">2.Zeep - SOAP 客户端 <a class="header-anchor" href="#_2-zeep-soap-客户端" aria-label="Permalink to &quot;2.Zeep - SOAP 客户端&quot;">​</a></h4><p>Zeep 是 Python 中的一个现代化的 SOAP 客户端。Zeep 通过检查 WSDL 文档并生成相应的代码，来使用 WSDL 文档中的服务和类型。这种方式为 SOAP 服务器提供了易于使用的编程接口。</p><p>下面来具体讲解下 Zeep 的使用：</p><ul><li><strong>Zeep 安装</strong></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pip install zeep</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pip install zeep</span></span></code></pre></div><ul><li><strong>Zeep 查询 WSDL 中可用的方法</strong></li></ul><p>相对于 suds 来说，想要查看一个 WSDL 描述中有哪些方法可用，Zeep 无须进行初始化动作。直接在命令行中输入如下命令即可：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">python </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">mzeep http:</span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">www.webxml.com.cn</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">WebServices</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">IpAddressSearchWebService.asmx</span><span style="color:#FDAEB7;font-style:italic;">?</span><span style="color:#E1E4E8;">wsdl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">python </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">mzeep http:</span><span style="color:#D73A49;">//</span><span style="color:#24292E;">www.webxml.com.cn</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">WebServices</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">IpAddressSearchWebService.asmx</span><span style="color:#B31D28;font-style:italic;">?</span><span style="color:#24292E;">wsdl</span></span></code></pre></div><p>执行后，会发现输出如下：</p>`,34),v=l(`<p>从结果中可以看出，IpAddressSearchWebService 提供了 3 个 method，分别是 getCountryCityByIp，getGeoIPContext 和 getVersionTime。</p><ul><li><strong>简单使用</strong></li></ul><p>在得出有哪些方法可用后，我们就可以像直接调用可用的方法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> zeep</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    wsdl </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> zeep.Client(</span><span style="color:#FFAB70;">wsdl</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">wsdl)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(client.service.getCountryCityByIp(</span><span style="color:#9ECBFF;">&#39;10.10.10.10&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> zeep</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    wsdl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#24292E;">    client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> zeep.Client(</span><span style="color:#E36209;">wsdl</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">wsdl)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(client.service.getCountryCityByIp(</span><span style="color:#032F62;">&#39;10.10.10.10&#39;</span><span style="color:#24292E;">))</span></span></code></pre></div><ul><li><strong>实际案例</strong></li></ul><p>现在我们把上面用 suds 实现的测试 IpAddressSearchWebService 的代码更改为使用 Zeep 测试：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pytest</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> zeep</span></span>
<span class="line"><span style="color:#B392F0;">@pytest.mark.rmb</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebServices</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">WSDL_ADDRESS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> zeep.Client(</span><span style="color:#FFAB70;">wsdl</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">WSDL_ADDRESS</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_version_time</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service.service.getVersionTime()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_country_city_by_ip</span><span style="color:#E1E4E8;">(self, ip):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.web_service.service.getCountryCityByIp(ip)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestWebServices</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_version_time</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">assert</span><span style="color:#E1E4E8;"> WebServices().get_version_time() </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;IP地址数据库，及时更新&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">@pytest.mark.parametrize</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ip, expected&#39;</span><span style="color:#E1E4E8;">, [(</span><span style="color:#9ECBFF;">&#39;10.10.10.10&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;10.10.10.10&#39;</span><span style="color:#E1E4E8;">)])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_get_country_city_by_ip</span><span style="color:#E1E4E8;">(self, ip, expected):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">assert</span><span style="color:#E1E4E8;"> expected </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(WebServices().get_country_city_by_ip(ip))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    pytest.main([</span><span style="color:#9ECBFF;">&quot;-m&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;rmb&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-s&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-v&quot;</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pytest</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> zeep</span></span>
<span class="line"><span style="color:#6F42C1;">@pytest.mark.rmb</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebServices</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">WSDL_ADDRESS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://www.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> zeep.Client(</span><span style="color:#E36209;">wsdl</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">WSDL_ADDRESS</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_version_time</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service.service.getVersionTime()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_country_city_by_ip</span><span style="color:#24292E;">(self, ip):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.web_service.service.getCountryCityByIp(ip)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestWebServices</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_version_time</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> WebServices().get_version_time() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;IP地址数据库，及时更新&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">@pytest.mark.parametrize</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ip, expected&#39;</span><span style="color:#24292E;">, [(</span><span style="color:#032F62;">&#39;10.10.10.10&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;10.10.10.10&#39;</span><span style="color:#24292E;">)])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_get_country_city_by_ip</span><span style="color:#24292E;">(self, ip, expected):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> expected </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(WebServices().get_country_city_by_ip(ip))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    pytest.main([</span><span style="color:#032F62;">&quot;-m&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;rmb&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-s&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-v&quot;</span><span style="color:#24292E;">])</span></span></code></pre></div><p>可以看到，使用 Zeep 来调用 Web Service 服务同样很简单。</p><h4 id="_3-zeep-和-suds-的比较" tabindex="-1">3.Zeep 和 suds 的比较 <a class="header-anchor" href="#_3-zeep-和-suds-的比较" aria-label="Permalink to &quot;3.Zeep 和 suds 的比较&quot;">​</a></h4><p>suds 是一个老牌的 SOAP 客户端，而 Zeep 是当前特别流行的一个 SOAP 客户端。那么我们应该如何选用呢？ 这里列出来几点两者的区别，供你参考：</p>`,10),b=s("p",null,"综上所述，Zeep 对最新版本的 Python 支持的更好，而且没有性能问题。如果你的项目是新设立的，在选用Web Service客户端时，不妨直接使用Zeep。",-1),h=s("h3",{id:"总结",tabindex:"-1"},[n("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),C=s("p",null,"本章节中我们重点介绍了 Web Service 及 Web Service 接口，尤其是以 WSDL 格式提供的接口应该如何测试。 并且介绍了两个测试Web Service的Python 库suds和Zeep， 以及在日常工作中，我们是如何使用suds或者Zeep来封装Web Services接口的。",-1),S=s("p",null,"因为很难找到免费、复杂的 Web Service 接口供调用并演示，故本节内容中，代码比较简单。在此布置一个课后作业给你：请你询问下自己公司的开发，请他提供给你一个基于你公司业务的 WSDL 接口，并且根据今天所讲的内容，采用 suds 或者 Zeep 库来执行 Web Service 接口测试，巩固所学。",-1),g=s("p",null,"好的，我是蔡超，我们下节课再见。",-1),m=s("p",null,"在我的公众号 iTesting 中，也有关于 Web Service 接口调用的实例，其中包括对 service 和 factory 的调用。你可以关注 iTesting 并回复 WebService 查看。",-1),A=s("hr",null,null,-1),D=s("p",null,[s("a",{href:"https://wj.qq.com/s2/7506053/9b01",target:"_blank",rel:"noreferrer"},"课程评价入口，挑选 5 名小伙伴赠送小礼品～")],-1);function W(f,w,B,q,I,P){const a=o("Image");return t(),c("div",null,[y,E,i,d,p(a,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image/M00/6A/99/Ciqc1F-pCv6AaQg5AAYAaUPRT5M790.png"}),n(),_,p(a,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/6A/A3/CgqCHl-pCsSAD1CUAAFHQFINvZY722.png"}),n(),F,p(a,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image/M00/6A/A4/CgqCHl-pCtaAIlaHAAGumDmnrfI772.png"}),n(),u,p(a,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/6A/6D/CgqCHl-o-M2AMf3RAAC1Nxb0gQc472.png"}),n(),v,p(a,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image/M00/6A/99/Ciqc1F-pCu2AbMxCAAF3kfMvMmE625.png"}),n(),b,h,C,S,g,m,A,D])}const k=e(r,[["render",W]]);export{x as __pageData,k as default};
