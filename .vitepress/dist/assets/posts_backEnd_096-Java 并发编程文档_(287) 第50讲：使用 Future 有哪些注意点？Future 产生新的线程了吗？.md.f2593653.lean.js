import{_ as l,j as p,o,g as e,k as a,Q as t,s,h as c}from"./chunks/framework.b3d8e22e.js";const w=JSON.parse('{"title":"Future 的注意点 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/096-Java 并发编程文档/(287) 第50讲：使用 Future 有哪些注意点？Future 产生新的线程了吗？.md","filePath":"posts/backEnd/096-Java 并发编程文档/(287) 第50讲：使用 Future 有哪些注意点？Future 产生新的线程了吗？.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/096-Java 并发编程文档/(287) 第50讲：使用 Future 有哪些注意点？Future 产生新的线程了吗？.md"},E=t("",12),y=s("p",null,"这里有一个问题，即第三个的任务量是比较小的，它可以很快返回结果，紧接着第四个任务也会返回结果。但是由于前两个任务速度很慢，所以我们在利用 get 方法执行时，会卡在第一个任务上。也就是说，虽然此时第三个和第四个任务很早就得到结果了，但我们在此时使用这种 for 循环的方式去获取结果，依然无法及时获取到第三个和第四个任务的结果。直到 5 秒后，第一个任务出结果了，我们才能获取到，紧接着也可以获取到第二个任务的结果，然后才轮到第三、第四个任务。",-1),i=s("p",null,"假设由于网络原因，第一个任务可能长达 1 分钟都没办法返回结果，那么这个时候，我们的主线程会一直卡着，影响了程序的运行效率。",-1),u=s("p",null,"此时我们就可以用 Future 的带超时参数的 get(long timeout, TimeUnit unit) 方法来解决这个问题。这个方法的作用是，如果在限定的时间内没能返回结果的话，那么便会抛出一个 TimeoutException 异常，随后就可以把这个异常捕获住，或者是再往上抛出去，这样就不会一直卡着了。",-1),F=s("p",null,[s("strong",null,"2. Future 的生命周期不能后退")],-1),d=s("p",null,'Future 的生命周期不能后退，一旦完成了任务，它就永久停在了"已完成"的状态，不能从头再来，也不能让一个已经完成计算的 Future 再次重新执行任务。',-1),_=s("p",null,"这一点和线程、线程池的状态是一样的，线程和线程池的状态也是不能后退的。关于线程的状态和流转路径，第 03 讲已经讲过了，如图所示。",-1),A=s("p",null,"这个图也是我们当时讲解所用的图，如果有些遗忘，可以回去复习一下当时的内容。这一讲，我推荐你采用看视频的方式，因为视频中会把各个路径都标明清楚，看起来会更加清晰。",-1),g=s("h3",{id:"future-产生新的线程了吗",tabindex:"-1"},[c("Future 产生新的线程了吗 "),s("a",{class:"header-anchor",href:"#future-产生新的线程了吗","aria-label":'Permalink to "Future 产生新的线程了吗"'},"​")],-1),D=s("p",null,"最后我们再来回答这个问题：Future 是否产生新的线程了？",-1),C=s("p",null,"有一种说法是，除了继承 Thread 类和实现 Runnable 接口之外，还有第三种产生新线程的方式，那就是采用 Callable 和 Future，这叫作有返回值的创建线程的方式。这种说法是不正确的。",-1),h=s("p",null,"其实 Callable 和 Future 本身并不能产生新的线程，它们需要借助其他的比如 Thread 类或者线程池才能执行任务。例如，在把 Callable 提交到线程池后，真正执行 Callable 的其实还是线程池中的线程，而线程池中的线程是由 ThreadFactory 产生的，这里产生的新线程与 Callable、Future 都没有关系，所以 Future 并没有产生新的线程。",-1),m=s("p",null,"以上就是本讲的内容了。首先介绍了 Future 的两个注意点：第一个，在 get 的时候应当使用超时限制；第二个，Future 生命周期不能后退；然后又讲解了 Callable 和 Future 实际上并不是新建线程的第三种方式。",-1);function b(B,v,f,S,k,T){const n=p("Image");return o(),e("div",null,[E,a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/6B/D6/CgpOIF5Y0OGAKVKjAACCEFYDuCw593.png"}),y,i,u,F,d,_,a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/6B/D6/CgpOIF5Y0PiAcNyAAADVM7mENKE892.png"}),A,g,D,C,h,m])}const q=l(r,[["render",b]]);export{w as __pageData,q as default};
