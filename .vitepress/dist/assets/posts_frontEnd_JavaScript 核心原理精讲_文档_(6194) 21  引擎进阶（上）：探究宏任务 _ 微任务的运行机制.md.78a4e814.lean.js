import{_ as p,j as o,o as e,g as t,k as n,Q as a,s as l}from"./chunks/framework.b3d8e22e.js";const v=JSON.parse('{"title":"代码执行顺序（一） ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md","filePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md","lastUpdated":1696417798000}'),c={name:"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md"},r=a("",13),E=a("",34),y=l("p",null,"另外，关于我在文中提到的 MutationObserver，你可以进行一些实践，更深入地了解它的底层逻辑，介于篇幅的问题，这部分知识点我就不过多介绍了。",-1),i=l("p",null,"好了，这一讲就先说到这里了。接下来我们就要进入 JS 引擎篇的最后一讲 Process.nextTick 的原理学习，从上面的表格中你可以看出 Process.nextTick 也是微任务中的一种，它又会带给我们哪些思考呢？下一讲我会为你揭晓。",-1);function F(u,d,g,h,_,C){const s=o("Image");return e(),t("div",null,[r,n(s,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/49/Cgp9HWBQhFyAf7TxAAK_oyhU5eM671.png"}),E,n(s,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/49/Cgp9HWBQhGiAIsk6AAE2uN-H8dg753.png"}),y,i])}const B=p(c,[["render",F]]);export{v as __pageData,B as default};
