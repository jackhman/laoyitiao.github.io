import{_ as p,D as t,o as e,g as r,J as o,h as n,m as s,Q as l}from"./chunks/framework.f67d7268.js";const R=JSON.parse('{"title":"05如何做到异构数据的同步一致性？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/23讲搞定后台架构实战_文档/(6130) 05  如何做到异构数据的同步一致性？.md","filePath":"posts/backEnd/23讲搞定后台架构实战_文档/(6130) 05  如何做到异构数据的同步一致性？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/23讲搞定后台架构实战_文档/(6130) 05  如何做到异构数据的同步一致性？.md"},i=s("h1",{id:"_05如何做到异构数据的同步一致性",tabindex:"-1"},[n("05如何做到异构数据的同步一致性？ "),s("a",{class:"header-anchor",href:"#_05如何做到异构数据的同步一致性","aria-label":'Permalink to "05如何做到异构数据的同步一致性？"'},"​")],-1),E=s("p",null,"在上一讲里，我介绍了基于 Binlog 完成数据同步的全量缓存的读服务架构方案，可以实现平均性能在一百毫秒以内的高可用方案。此方案不仅可以满足缓存同步的实时性要求，还能够降低同步的复杂度，以及解决分布式事务问题。",-1),y=s("p",null,"那是不是上述方案已经十分完善，可以直接进行落地复用了呢？其实还有很多重要的点待明确。在上一讲里，我只是介绍了 Binlog 可以实现最终一致性和低延迟，但是具体如何实现及相关细节、实现中有哪些坑需要规避及最佳实践等内容均没有介绍。在本讲里，我将带你把这些内容一一攻破。",-1),g=s("h3",{id:"基于-binlog-的全量缓存架构问题分析",tabindex:"-1"},[n("基于 Binlog 的全量缓存架构问题分析 "),s("a",{class:"header-anchor",href:"#基于-binlog-的全量缓存架构问题分析","aria-label":'Permalink to "基于 Binlog 的全量缓存架构问题分析"'},"​")],-1),d=s("p",null,"为了方便你理解，我首先展示一张基于 Binlog 的数据同步全景图，如下图 1 所示：",-1),u=s("p",null,[s("em",null,"注：本讲的后续内容将基于这张架构图来讨论存在的问题。")],-1),_=l("",33),h=l("",6),q=l("",11),F=l("",16),B=l("",7),m=s("p",null,"图6：数据对比架构图",-1),x=s("p",null,"数据对比以数据库中的数据为基准，定期轮询对比缓存和数据库的数据。如果发现不一致后，可以增加延迟重试，再次对比。如果多次对比不一致后，可以增加报警并保留当时的数据，之后以数据库中的数据为准刷新缓存。延迟重试是为了防止因同步的时差，出现短暂的数据不一致但最终数据一致的情况。其次，保留出错现场的数据是为了排查定位问题。",-1),C=s("h3",{id:"最后的兜底-直接写入",tabindex:"-1"},[n("最后的兜底，直接写入 "),s("a",{class:"header-anchor",href:"#最后的兜底-直接写入","aria-label":'Permalink to "最后的兜底，直接写入"'},"​")],-1),A=s("p",null,"虽然上述在提升同步吞吐量上做了非常多地设计，但不可否认延迟总是存在的，即使是纯数据库主从同步间也会因为网络抖动和写入量大的情况出现毫秒或者秒级延迟，本讲基于 Binlog 的改良方案自然不例外。",-1),b=s("p",null,"绝大部分的业务和场景，对于毫秒或秒级延迟无感知。但为了方案的完整性和极端场景的应对，可以在异步同步的基础上，增加主动同步。方案如下图 7 所示：",-1),f=l("",5);function S(D,Q,T,k,P,I){const a=t("Image");return e(),r("div",null,[i,E,y,g,d,u,o(a,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image2/M01/07/7D/CgpVE2AIRqKAa0hsAAISjLZClHg943.png"}),n(),_,o(a,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image2/M01/07/7B/Cip5yGAIRr6ANlrtAAGsD0_yKUw569.png"}),n(),h,o(a,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image2/M01/07/7C/Cip5yGAIRtGAXb02AAHQ5_FMiIo942.png"}),n(),q,o(a,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image2/M01/07/7E/CgpVE2AIRuaASrCBAAHgAzncPfQ754.png"}),n(),F,o(a,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image/M00/8F/8C/Ciqc1GAIR02AQO3_AAIC6gaQFug079.png"}),n(),B,o(a,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image/M00/8F/97/CgqCHmAIR16AOpFhAAEOzOt7RWg115.png"}),n(),m,x,C,A,b,o(a,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image/M00/8F/97/CgqCHmAIR3iAbdpgAADm1l3Hbxo433.png"}),n(),f])}const L=p(c,[["render",S]]);export{R as __pageData,L as default};
