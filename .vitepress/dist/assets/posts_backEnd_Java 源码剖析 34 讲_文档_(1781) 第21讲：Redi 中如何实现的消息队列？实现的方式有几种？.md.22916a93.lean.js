import{_ as p,j as o,o as e,g as t,k as a,s,h as c,Q as l}from"./chunks/framework.e0c66c3f.js";const j=JSON.parse('{"title":"典型回答 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Java 源码剖析 34 讲_文档/(1781) 第21讲：Redi 中如何实现的消息队列？实现的方式有几种？.md","filePath":"posts/backEnd/Java 源码剖析 34 讲_文档/(1781) 第21讲：Redi 中如何实现的消息队列？实现的方式有几种？.md","lastUpdated":1696338709000}'),r={name:"posts/backEnd/Java 源码剖析 34 讲_文档/(1781) 第21讲：Redi 中如何实现的消息队列？实现的方式有几种？.md"},E=s("p",null,"细心的你可能发现了，本系列课程中竟然出现了三个课时都是在说消息队列，第 10 课时讲了程序级别的消息队列以及延迟消息队列的实现，而第 15 课时讲了常见的消息队列中间件 RabbitMQ、Kafka 等，由此可见消息队列在整个 Java 技术体系中的重要程度。本课时我们将重点来看一下 Redis 是如何实现消息队列的。",-1),y=s("p",null,"我们本课时的面试题是，在 Redis 中实现消息队列的方式有几种？",-1),i=s("h3",{id:"典型回答",tabindex:"-1"},[c("典型回答 "),s("a",{class:"header-anchor",href:"#典型回答","aria-label":'Permalink to "典型回答"'},"​")],-1),F=s("p",null,"早在 Redis 2.0 版本之前使用 Redis 实现消息队列的方式有两种：",-1),u=s("ul",null,[s("li",null,"使用 List 类型实现"),s("li",null,"使用 ZSet 类型实现")],-1),d=s("p",null,"其中使用** List 类型实现的方式最为简单和直接**，它主要是通过 lpush、rpop 存入和读取实现消息队列的，如下图所示：",-1),A=s("p",null,"lpush 可以把最新的消息存储到消息队列（List 集合）的首部，而 rpop 可以读取消息队列的尾部，这样就实现了先进先出，如下图所示：",-1),D=l("",10),g=l("",7),C=l("",32);function m(q,B,h,_,v,S){const n=o("Image");return e(),t("div",null,[E,y,i,F,u,d,a(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/0E/10/CgqCHl7E8CiAPUYfAAA-J0r2Mgc997.png"}),A,a(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/0E/04/Ciqc1F7E8C6AJKWJAABCSLt5htE783.png"}),D,a(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/0E/10/CgqCHl7E8D2AUKjhAABVTe21uBg498.png"}),g,a(n,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/0E/10/CgqCHl7E8GGAbuSbAADG34Yr_oI363.png"}),C])}const M=p(r,[["render",m]]);export{j as __pageData,M as default};
