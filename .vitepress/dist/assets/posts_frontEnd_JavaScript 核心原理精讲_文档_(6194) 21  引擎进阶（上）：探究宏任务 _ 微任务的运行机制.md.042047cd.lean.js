import{_ as o,j as e,o as t,g as c,k as n,h as a,Q as l,s as p}from"./chunks/framework.a0d18f64.js";const B=JSON.parse('{"title":"21引擎进阶（上）：探究宏任务&微任务的运行机制","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md","filePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md","lastUpdated":1696682708000}'),r={name:"posts/frontEnd/JavaScript 核心原理精讲_文档/(6194) 21  引擎进阶（上）：探究宏任务 & 微任务的运行机制.md"},E=l("",14),y=l("",34),i=p("p",null,"另外，关于我在文中提到的 MutationObserver，你可以进行一些实践，更深入地了解它的底层逻辑，介于篇幅的问题，这部分知识点我就不过多介绍了。",-1),F=p("p",null,"好了，这一讲就先说到这里了。接下来我们就要进入 JS 引擎篇的最后一讲 Process.nextTick 的原理学习，从上面的表格中你可以看出 Process.nextTick 也是微任务中的一种，它又会带给我们哪些思考呢？下一讲我会为你揭晓。",-1);function u(d,h,g,_,m,C){const s=e("Image");return t(),c("div",null,[E,n(s,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/49/Cgp9HWBQhFyAf7TxAAK_oyhU5eM671.png"}),a(),y,n(s,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/49/Cgp9HWBQhGiAIsk6AAE2uN-H8dg753.png"}),a(),i,F])}const b=o(r,[["render",u]]);export{B as __pageData,b as default};
