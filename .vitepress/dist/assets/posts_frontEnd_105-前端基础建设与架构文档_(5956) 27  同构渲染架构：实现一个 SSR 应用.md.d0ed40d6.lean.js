import{_ as n,j as a,o as l,g as p,k as o,Q as e,s as t}from"./chunks/framework.e0c66c3f.js";const h=JSON.parse('{"title":"实现一个简易 SSR 应用 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/105-前端基础建设与架构文档/(5956) 27  同构渲染架构：实现一个 SSR 应用.md","filePath":"posts/frontEnd/105-前端基础建设与架构文档/(5956) 27  同构渲染架构：实现一个 SSR 应用.md","lastUpdated":1696338709000}'),c={name:"posts/frontEnd/105-前端基础建设与架构文档/(5956) 27  同构渲染架构：实现一个 SSR 应用.md"},r=e("",77),E=t("p",null,"同构应用其实远比理论复杂，绝对不是几个 APIs 和几台服务器就能完成的，希望大家多思考、多动手，一定会更有体会。下一讲，我们进入 CI/CD 流程，设计一个性能守卫系统，以此帮助你了解：Node.js 除了同构直出、数据聚合以外，还能做一些重要的，且有趣的服务。",-1);function y(i,d,F,u,g,D){const s=a("Image");return l(),p("div",null,[r,o(s,{alt:"同构渲染架构： 实现一个 SSR 应用.png",src:"https://s0.lgstatic.com/i/image6/M00/16/ED/CioPOWBHGf-ANBuWAAJkpsrE7fA808.png"}),E])}const m=n(c,[["render",y]]);export{h as __pageData,m as default};
