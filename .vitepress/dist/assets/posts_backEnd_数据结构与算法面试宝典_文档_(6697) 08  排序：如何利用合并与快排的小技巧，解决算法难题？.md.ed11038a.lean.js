import{_ as o,j as e,o as t,g as c,k as a,Q as p,s,h as l}from"./chunks/framework.b3d8e22e.js";const ms=JSON.parse('{"title":"合并排序 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/数据结构与算法面试宝典_文档/(6697) 08  排序：如何利用合并与快排的小技巧，解决算法难题？.md","filePath":"posts/backEnd/数据结构与算法面试宝典_文档/(6697) 08  排序：如何利用合并与快排的小技巧，解决算法难题？.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/数据结构与算法面试宝典_文档/(6697) 08  排序：如何利用合并与快排的小技巧，解决算法难题？.md"},E=p("",9),y=p("",5),i=s("p",null,"那么接下来我们就从这三方面入手。并且与二叉树的后序遍历的代码对照着一起看。",-1),A=s("p",null,[l("在正式开始讲题目之前，我们先学习一下"),s("strong",null,"开闭原则"),l("。实际上，绝大部分语言在设计的时候，都是按照这个原则。比如数组的第一个元素取下标 0，那么长度为 n 的数组，就需要用开闭原则区间 [0, n) 来表示。")],-1),g=s("p",null,"这样表示好处理，区间长度直接就是右边界减去左边界。比如 [0, 10) 的区间长度就是 10。但是如果使用双闭区间，比如 [0, 9]，那么求区间长度时，运行式为：9 - 0 + 1。还需要在减法的基础上加 1。",-1),F=s("h4",{id:"_1-划分",tabindex:"-1"},[l("1. 划分 "),s("a",{class:"header-anchor",href:"#_1-划分","aria-label":'Permalink to "1. 划分"'},"​")],-1),D=s("p",null,"首先我们看一下如何划分子数组。对于二叉树而言，子树的划分是天然的，已经在数据结构里面约定好了，比如 TreeNode.left、TreeNode.right。",-1),u=s("p",null,"但是对于数组而言，在切分的时候，如果想到达最优的效率，那么将数组切为平均的两半效率应该是最高的（可以联想到二叉平衡树的效率）。为了帮助你理解，我绘制了动图演示，如下所示：",-1),h=p("",21),d=p("",13),b=p("",23),C=s("p",null,[l("那么二个有序数组应该怎么办呢？不过现在非常确定的是，我们一定"),s("strong",null,"会扔掉 4 个数"),l("。那么接下来，你再思考一下在两个数组 A，B 中如何扔掉这 4 个数？")],-1),B=s("ul",null,[s("li",null,[s("strong",null,"第 1 步：要扔掉 4 个数，我们需要看一下两个数组前 2 个元素"),l("，如下图所示：")])],-1),m=s("p",null,"此时，我们当然不知道 K、L、V、W 这四个数之间的关系。假设 L >= W，就需要证明：当 L >= W 的时候，[V, W] 都不可能是第 5 小的数，可以扔掉。",-1),_=s("p",null,[s("strong",null,"解"),l(" ：利用"),s("strong",null,"反证法，假设 W 可以成为第 5 小的数"),l("。推导过程如下：")],-1),f=s("p",null,[l("同样的方法可以证明，V 也不可能成为第 5 小的数。所以如果当 "),s("strong",null,"L"),l(" >="),s("strong",null,"W"),l(" 的时候，可以把 [V, W] 扔掉，不影响去拿第 5 小的数。")],-1),k=s("ul",null,[s("li",null,[s("strong",null,"第 2 步：当我们扔掉 2 个数之后，两个有序数组已经变成如下图所示的样子"),l("：")])],-1),v=s("p",null,[l("由于我们的目标是扔掉 4 个数，扔掉 2 个数之后，"),s("strong",null,"还需要再扔 2 个数"),l("。此时我们只需要比较数组开头的一个元素 K, X 的大小，谁小就把谁扔掉。这里我们假设 K 比较小。")],-1),j=s("ul",null,[s("li",null,[s("strong",null,"第 3 步：此时还剩下 1 个数需要扔掉，那么只需要扔掉 M 和 X 中较小的就可以了"),l("。")])],-1),x=s("p",null,[l("【"),s("strong",null,"结论"),l("】当我们需要扔掉 k 个元素：")],-1),q=s("ul",null,[s("li",null,[s("p",null,"k 是偶数的时候，我们只需要比较 A[k/2-1] 和 B[k/2-1] 的大小，谁小就扔掉对应的 [0...k/2-1] 这一段；")]),s("li",null,[s("p",null,"k 是奇数的时候，我们只需要比较 A[k/2] 和 B[k/2] 的大小，谁小就扔掉对应的 [0...k/2] 这一段。")])],-1),T=s("p",null,"如前面所展示的推导过程，无论 k 是偶数还是奇数，这两种情况都可以用反证法来证明。这里我总结一下偶数的情况：",-1),S=p("",12),V=p("",6),P=p("",13),w=p("",7),N=s("p",null,"那么接下来我们就从上图中展示的三个方面入手，并且与二叉树的前序遍历的代码对照着一起看。",-1),H=s("h4",{id:"_1-划分-1",tabindex:"-1"},[l("1. 划分 "),s("a",{class:"header-anchor",href:"#_1-划分-1","aria-label":'Permalink to "1. 划分"'},"​")],-1),R=s("p",null,"首先我们看一下如何划分子数组。对于二叉树而言，子树的划分是天然的，已经在数据结构里面约定好了，比如 TreeNode.left、TreeNode.right。",-1),K=s("p",null,[l("但是对于数组而言，切分的时候，如果想到达最优的效率，那么将数组切为平均的两半效率应该是最高的（可以联想到二叉平衡树的效率）。"),s("strong",null,"但是快排不能保证选择一个数，就一定能将数组切分成为两半"),l("。")],-1),X=p("",23),Q=p("",6),G=s("p",null,"除了像插入排序一样一个一个地移动 1，还有没有更好的办法呢？",-1),I=s("p",null,"答案是，不需要一个一个移动！因为 [L, i) 区间里面全都是 1，只需要将 A[L] 与 A[i] 进行交换即可。",-1),O=s("p",null,"不过由于 A[L] 与 A[i] 交换完成之后，看起来像是一个新来的 0 插入到区间 [L, i) 的前面，[L, i) 区间整体向右平移了一样。所以需要执行 L++, i++。经此操作，变更后的区间仍然满足约束。",-1),W=s("ul",null,[s("li",null,"当 x = 1 的时候，就比较简单了。只需要为 1 的区间 [L, i) 向右扩展一下就可以了。")],-1),M=s("p",null,"由于像 [L, i) 尾部增加了一个元素一样，所以只需要执行 i++ 就可以。区间变更后，仍然满足约束。",-1),L=s("ul",null,[s("li",null,"当 x = 2 的时候。首先需要执行 swap(A[i], A[r])。")],-1),J=p("",9),U=p("",11),Y=s("p",null,"Case 1：只出现一次的数在左边，那么左区间的长度为奇数。",-1),z=s("p",null,"Case 2：只出现一次的数在中间，那么中间的数的长度为 1。直接返回 x。",-1),Z=p("",12),$=p("",10),ss=s("p",null,"因此，这道题，应该可以用堆来解决。你能想一想吗？",-1),ns=s("blockquote",null,[s("p",null,[l("代码："),s("a",{href:"https://github.com/lagoueduCol/Algorithm-Dryad/blob/main/07.Sort/786.%E7%AC%ACk%E4%B8%AA%E6%95%B0.heap.java?fileGuid=xxQTRXtVcqtHK6j8",target:"_blank",rel:"noreferrer"},"Java"),l("/"),s("a",{href:"https://github.com/lagoueduCol/Algorithm-Dryad/blob/main/07.Sort/786.%E7%AC%ACk%E4%B8%AA%E6%95%B0.heap.cpp?fileGuid=xxQTRXtVcqtHK6j8",target:"_blank",rel:"noreferrer"},"C++"),l("/"),s("a",{href:"https://github.com/lagoueduCol/Algorithm-Dryad/blob/main/07.Sort/786.%E7%AC%ACk%E4%B8%AA%E6%95%B0.heap.py?fileGuid=xxQTRXtVcqtHK6j8",target:"_blank",rel:"noreferrer"},"Python")])],-1),as=s("p",null,"我们再回顾一下前面的例 4 和例 5 两道题目。例 4 要求找出那个唯一的数。而例 5 中找到的第 k 小的数，也是唯一的。",-1),ls=s("p",null,[l('这里我们从题目的"'),s("strong",null,"唯一性"),l('"这个特点着手，可以发现：在例 4 中是需要判断这个唯一的数在哪个区间，那么就把其他的区间扔掉。如果能扔掉不要的区间，然后在余下的区间上递归，那我们就可以达到 O(N) 的时间复杂度了（和例 4 一样了）。')],-1),ps=s("p",null,"可是怎样才能判断第 k 小的数在哪个区间呢？三路切分完毕之后，应该有三个区间，下面我们基于这三个区间分别讨论。",-1),os=s("p",null,[s("strong",null,"注意"),l("：在写代码之前，我们还是要注意一下边界。由于题目中给定的 k 的值是从 1 开始。也就是当 k = 1 时，实际上对应的是最小的数，而我们数组的下标是从 0 开始的，先执行 k -- 可以让 k 从 0 开始。（后面的 k 都是从 0 开始了！）")],-1),es=s("p",null,"Case 1. 第 k 小的数在左区间，此时 k < lcnt，其中 lcnt 是左区间中数的个数。",-1),ts=s("p",null,"Case 2. 第 k 小的数在中间，此时 lcnt <= k < lcnt + mcnt。其中 mcnt 是中间区间的数的个数。",-1),cs=p("",8),rs=p("",8),Es=s("p",null,'在本讲，虽然只讲了两个排序，但经过不断地浇灌，我们的知识树从萌芽逐渐长成了一棵大树。前面我们也提到过，实际上，堆在上浮或者上沉的时候，操作会与"插入排序"非常类似。由于篇幅的限制，这里我们不再去详细地挖掘插入排序了。',-1),ys=s("p",null,'你可以自己思考和尝试，期待你还能发现更多排序的特点和巧妙用法，并且将它们总结下来，让你"大树"（思维导图）像花儿一样开得绚烂多姿。也欢迎你在评论区和我交流，期待看到大家的奇思妙想。',-1),is=s("h3",{id:"思考题",tabindex:"-1"},[l("思考题 "),s("a",{class:"header-anchor",href:"#思考题","aria-label":'Permalink to "思考题"'},"​")],-1),As=s("p",null,[l("我再给你留一道"),s("strong",null,"思考题"),l("：给定一个链表，请使用插入排序对这个链表排序吧。")],-1),gs=s("p",null,"你可以把答案写在评论区，我们一起讨论。接下来请和我一起踏上更加奇妙的算法与数据结构的旅程。让我们继续前进。下一讲将介绍 09 | 二分搜索：为什么说有序皆可用二分？记得按时来探险。",-1);function Fs(Ds,us,hs,ds,bs,Cs){const n=e("Image");return t(),c("div",null,[E,a(n,{alt:"1.gif",src:"https://s0.lgstatic.com/i/image6/M00/26/47/CioPOWBa1D-AO_IyABbezYcjvnc676.gif"}),y,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4A/Cgp9HWBa1EmAafFZAAEIbICXCH8196.png"}),i,A,g,F,D,u,a(n,{alt:"2.gif",src:"https://s0.lgstatic.com/i/image6/M00/26/47/CioPOWBa1F-AdVjkAAW3LaUuQBI088.gif"}),h,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M01/26/4A/Cgp9HWBa1IiAdYjFAAD5CqCiV9s051.png"}),d,a(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image6/M01/26/4A/Cgp9HWBa1KaAW4PrAACHWC33XvY027.png"}),b,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image6/M01/26/47/CioPOWBa1LSANaspAACnv4r9rY4076.png"}),C,a(n,{alt:"3.gif",src:"https://s0.lgstatic.com/i/image6/M00/26/47/CioPOWBa1VSAUvT8AAW3QKZNDKo893.gif"}),B,a(n,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image6/M01/26/47/CioPOWBa1MyAO-hIAAC5HXxgqTU581.png"}),m,_,a(n,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image6/M01/26/4C/Cgp9HWBa1dSAFbuyAADZMsuD8Ow586.png"}),f,k,a(n,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image6/M01/26/4C/Cgp9HWBa1fOAIoAkAACiXXbxAyQ531.png"}),v,j,a(n,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image6/M01/26/4C/Cgp9HWBa1fyARh_eAAChVnnqza8481.png"}),x,q,T,a(n,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image6/M00/26/49/CioPOWBa1gSARtRHAADy4Q6lRic201.png"}),S,a(n,{alt:"Drawing 12.png",src:"https://s0.lgstatic.com/i/image6/M00/26/49/CioPOWBa1hCAQFCXAACzeuL27BA859.png"}),V,a(n,{alt:"Drawing 13.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4D/Cgp9HWBa1hmARdhgAAE4KKhQNNk730.png"}),P,a(n,{alt:"4.gif",src:"https://s0.lgstatic.com/i/image6/M00/26/4D/Cgp9HWBa1j-ALNp1ABgNWSm15-g263.gif"}),w,a(n,{alt:"Drawing 15.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4A/CioPOWBa1k6ARbllAAEScdmg-qE957.png"}),N,H,R,K,a(n,{alt:"5.gif",src:"https://s0.lgstatic.com/i/image6/M01/26/4B/CioPOWBa1nyASnSGAAVDCbYUIkI338.gif"}),X,a(n,{alt:"Drawing 17.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4E/Cgp9HWBa1pKANA4tAACo1XkrwR8163.png"}),Q,a(n,{alt:"Drawing 18.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa1v-AAIJ0AAC982gygBM237.png"}),G,a(n,{alt:"Drawing 19.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4F/Cgp9HWBa1waAUggGAAC5a2hQFcY926.png"}),I,a(n,{alt:"Drawing 20.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4F/Cgp9HWBa1w6ACb84AAFajqHAao8089.png"}),O,W,a(n,{alt:"Drawing 21.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4F/Cgp9HWBa1xeAR5k5AAE7tiU3JNs442.png"}),M,L,a(n,{alt:"Drawing 22.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4F/Cgp9HWBa1yGAYzAPAAE2795PdwA120.png"}),J,a(n,{alt:"Drawing 23.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa1y6AKiDXAACdNXyT-iM446.png"}),U,a(n,{alt:"Drawing 24.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4F/Cgp9HWBa1z6AY5MBAADdMHlfEo0699.png"}),Y,a(n,{alt:"Drawing 25.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa10SAHug2AACvcZWpRb0183.png"}),z,a(n,{alt:"Drawing 26.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa10yAdrcgAADb9niMdDU093.png"}),Z,a(n,{alt:"Drawing 27.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa11mAYIeqAAEKqbsIKUc687.png"}),$,a(n,{alt:"Drawing 28.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa12aAJAvPAADQtdqxOSg472.png"}),ss,ns,as,a(n,{alt:"Drawing 29.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa126ABdszAADUJRcYiwA778.png"}),ls,ps,os,a(n,{alt:"Drawing 30.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa14-AfibNAACmG9lcp3w742.png"}),es,a(n,{alt:"Drawing 31.png",src:"https://s0.lgstatic.com/i/image6/M00/26/4C/CioPOWBa15aARbkjAACsa_IopOo721.png"}),ts,a(n,{alt:"Drawing 32.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa15uAKuRJAACsaFjbbdM444.png"}),cs,a(n,{alt:"Drawing 33.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa16SAXU4SAAEW-ldWtII513.png"}),rs,a(n,{alt:"Drawing 34.png",src:"https://s0.lgstatic.com/i/image6/M00/26/50/Cgp9HWBa166AD9hdAAKp0wZR38g493.png"}),Es,ys,is,As,gs])}const _s=o(r,[["render",Fs]]);export{ms as __pageData,_s as default};
