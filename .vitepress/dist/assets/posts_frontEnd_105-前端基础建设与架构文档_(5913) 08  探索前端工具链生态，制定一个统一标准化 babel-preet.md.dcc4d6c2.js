import{_ as l,j as p,o,g as e,k as n,Q as a}from"./chunks/framework.4e7d56ce.js";const A=JSON.parse('{"title":"从一个公共库处理的问题，谈如何做好\\"扫雷人\\" ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/105-前端基础建设与架构文档/(5913) 08  探索前端工具链生态，制定一个统一标准化 babel-preet.md","filePath":"posts/frontEnd/105-前端基础建设与架构文档/(5913) 08  探索前端工具链生态，制定一个统一标准化 babel-preet.md","lastUpdated":1696417798000}'),c={name:"posts/frontEnd/105-前端基础建设与架构文档/(5913) 08  探索前端工具链生态，制定一个统一标准化 babel-preet.md"},t=a(`<p>前端生态有着与生俱来的混乱和与之抗衡的秩序，有着新生力量的崛起以及随之而来的规范约束。在这个背景下，正面来看，欣欣向荣的前端生态带来了广阔的发展前景，但也造成了一些困扰。比如，我们都经历过在前端基础设施建设中，被各种冗杂的配置项困扰，一不小心就是 Error，步履蹒跚。也许我们可以通过搜索引擎暂时解决问题，但是恍恍惚惚、难以洞悉问题本源。</p><p>另一方面，前端生态的重要一环是公共库。公共库的模块化规范、编译标准，甚至压缩方式都有讲究，同时公共库与使用它们的业务项目也要密切配合，这样才能打造一个顺滑的基建结果。请你仔细审视手上的项目，编译构建过程是否做到了最高效，产出代码是否达到了最高级别的安全保障，是否做到了性能体验的最佳实践？</p><p>这一讲，就让我们从公共库的角度出发，梳理当前前端生态，最终还原一个趋近完美的公共库设计标准。</p><h3 id="从一个公共库处理的问题-谈如何做好-扫雷人" tabindex="-1">从一个公共库处理的问题，谈如何做好&quot;扫雷人&quot; <a class="header-anchor" href="#从一个公共库处理的问题-谈如何做好-扫雷人" aria-label="Permalink to &quot;从一个公共库处理的问题，谈如何做好&quot;扫雷人&quot;&quot;">​</a></h3><p>这一部分，让我们以一篇网红文章&quot;<a href="https://juejin.im/post/6856815533749338125" target="_blank" rel="noreferrer">报告老板，我们的 H5 页面在 iOS 11 系统上白屏了！</a>&quot;开始，我先简单梳理和总结一下文章内容：</p><ul><li><p>笔者发现某些机型上出现页面白屏情况；</p></li><li><p>出现在报错页面上的信息非常明显，即当前浏览器不支持<code>...</code>扩展运算符；</p></li><li><p>出错的代码（使用了扩展运算符的代码）属于某个公共库代码，它没有使用 Babel 插件进行降级处理，因此线上源代码出现了<code>...</code>扩展运算符。</p></li></ul><p>现在问题找到了，或许直接将出现问题的公共库代码用 Babel 进行编译降级就可以了，但问题似乎还会更加复杂。在文中环境下，需要在<code>vue.config.js</code>中加入对问题公共库<code>module-name/library-name</code>的 Babel 编译流程：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">transpileDependencies</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;module-name/library-name&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 出现问题的那个库</span></span>
<span class="line"><span style="color:#E1E4E8;">],</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">transpileDependencies</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;module-name/library-name&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 出现问题的那个库</span></span>
<span class="line"><span style="color:#24292E;">],</span></span></code></pre></div><p>vue-cli 对<a href="https://cli.vuejs.org/zh/config/#transpiledependencies" target="_blank" rel="noreferrer">transpileDependencies</a> 也有如下说明：</p><blockquote><p>默认情况下 babel-loader 会忽略所有<code>node_modules</code>中的文件。如果你想要通过 Babel 显式转译一个依赖，可以在这个选项中列出来。</p></blockquote><p>按照上述操作，却得到了新的报错：<code>Uncaught TypeError: Cannot assign to read only property &#39;exports&#39; of object &#39;#&lt;Object&gt;&#39;</code>。究其原因，<code>module-name/library-name</code>这个库对外输出的是 CommonJS 类型源码，而项目基础设施中 babel-transform-runtime 在编译时增加的 helper 代码，使用的是 import 引入。<strong>最终编译结果出现了 ESM 包含 CommonJS 的情况，是不会被 Webpack 处理的</strong>。</p><p>出现问题的原因总结如下：</p><ul><li><p>plugin-transform-runtime 会根据 sourceType 选择注入 import 或者 require，sourceType 的默认值是 module，就会默认注入 import；</p></li><li><p>Webpack 不会处理包含 import/export 的文件中的 module.exports 导出，所以需要让 Babel 自动判断 sourceType，根据文件内是否存在 import/export 来决定注入什么样的代码。</p></li></ul><p>为了适配上述问题，Babel 设置了<code>sourceType</code>属性，<code>sourceType：unambiguous</code>表示 Babel 会根据文件上下文（比如是否含有 import/export）来决定是否按照 ESM 语法处理文件。</p><p>这时候就需要配置 Babel 内容了：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  sourceType</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;unambiguous&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#24292E;">  sourceType</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;unambiguous&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>但是这种做法在工程上并不推荐，上述更改方式对所有编译文件都生效，但也<strong>增加了编译成本</strong> （因为设置<code>sourceType：unambiguous</code>后，编译时需要做的事情更多），还有个<a href="https://babeljs.io/docs/en/options#sourcetype" target="_blank" rel="noreferrer">潜在问题</a>：</p><blockquote><p>Unambiguous can be quite useful in contexts where the type is unknown, but it can lead to false matches because it&#39;s perfectly valid to have a module file that does not use import/export statements.</p></blockquote><p>翻译过来，就是说并不是所有的 ESM 模块（这里指使用 ESNext 特性的文件）都含有 import/export，因此即便某个待编译文件属于 ESM 模块，也可能被 Babel 错误地判断为 CommonJS 模块而引发误判。</p><p>基于这一点，一个更合适的做法是：只对目标第三方库<code>&#39;module-name/library-name&#39;</code>使用<code>sourceType：unambiguous</code>，这时，Babel <a href="https://babeljs.io/docs/en/options#overrides" target="_blank" rel="noreferrer">overrides 属性</a>就派上用场了：</p><blockquote><p>Allows users to provide an array of options that will be merged into the current configuration one at a time. This feature is best used alongside the &quot;test&quot;/&quot;include&quot;/&quot;exclude&quot; options to provide conditions for which an override should apply.</p></blockquote><p>具体使用方式：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">	overrides</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">		{ include</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./node_modules/module-name/library-name/name.common.js&#39;</span><span style="color:#E1E4E8;">,  </span><span style="color:#6A737D;">// 使用的第三方库</span></span>
<span class="line"><span style="color:#E1E4E8;">		sourceType</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;unambiguous&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	], </span></span>
<span class="line"><span style="color:#E1E4E8;">	 ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#24292E;">	overrides</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">		{ include</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./node_modules/module-name/library-name/name.common.js&#39;</span><span style="color:#24292E;">,  </span><span style="color:#6A737D;">// 使用的第三方库</span></span>
<span class="line"><span style="color:#24292E;">		sourceType</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;unambiguous&#39;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	], </span></span>
<span class="line"><span style="color:#24292E;">	 ...  </span><span style="color:#6A737D;">// 省略的配置</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>至此，这个&quot;iOS 11 系统白屏&quot;问题就算告一段落了。我整理了解决路线，如下图所示：</p>`,24),r=a(`<p>我们回过头再来看这个问题，实际上<strong>业务方对线上测试回归不彻底</strong>是造成问题的直接原因，但问题其实出现在一个公共库上，因而前端生态的混乱和复杂也许是更本质的原因。这里涉及两方面问题：</p><ul><li><p>作为公共库，我应该如何构建编译代码，让业务方更有保障地使用？</p></li><li><p>作为使用者，我应该如何处理第三方公共库，是否还需要对其进行额外编译和处理？</p></li></ul><p>被动地发现问题、解决问题只会让我们被&quot;牵着鼻子走&quot;------这不是我们的目的。我们应该从更底层拆解问题，下面我们就来看看更底层的内容。</p><h3 id="应用项目构建和公共库构建的差异" tabindex="-1">应用项目构建和公共库构建的差异 <a class="header-anchor" href="#应用项目构建和公共库构建的差异" aria-label="Permalink to &quot;应用项目构建和公共库构建的差异&quot;">​</a></h3><p>首先我们要认清应用项目构建和公共库构建的差别。作为前端团队，我们构建了很多应用项目，对于一个应用项目来说，&quot;只要能在需要兼容的环境中跑起来&quot;就达到了基本目的。而对于一个公共库来说，我们的公共库可能被各种环境所引用或需要支持各种兼容需求，因此<strong>公共库就要兼顾性能和易用性，要注重质量和广泛度</strong>。由此看来，公共库理论上构建机制就更加复杂。</p><p>说到底，如果你能够设计好一个公共库，那么通常也能使用好一个公共库。因此，下面我们重点讨论如何设计并产出一个企业级公共库，以及如何在业务中更好地配合使用。</p><h3 id="制定一个企业级公共库的设计原则" tabindex="-1">制定一个企业级公共库的设计原则 <a class="header-anchor" href="#制定一个企业级公共库的设计原则" aria-label="Permalink to &quot;制定一个企业级公共库的设计原则&quot;">​</a></h3><p>这里说的企业级公共库主要是指在企业内复用的公共库，它可以被发布到 npm 上进行社区共享，也可以在企业内的私有 npm 中限定范围地共享。总之，企业级公共库是需要在业务中被使用的。我认为一个企业级公共库的设计原则应该包括以下几点。</p><ol><li><strong>对于开发者共创公共库，最大化确保开发体验</strong>：</li></ol><ul><li><p>最快地搭建调试和开发环境</p></li><li><p>安全地发版维护</p></li></ul><ol start="2"><li><strong>对于使用者，最大化确保使用体验</strong>：</li></ol><ul><li><p>公共库文档建设完善</p></li><li><p>公共库质量有保障</p></li><li><p>接入和使用负担最小</p></li></ul><p>基于上述原则，在团队里，设计一个公共库前，你需要考虑：</p><ul><li><p>自研公共库还是使用社区已有轮子；</p></li><li><p>公共库的运行环境是什么，这将决定公共库的编译构建目标；</p></li><li><p>公共库是偏向业务还是业务 free，这将决定公共库的职责和边界。</p></li></ul><p>上述内容并非纯理论原则，而是直接决定了公共库实现的技术选型。比如，为了实现更完善的文档建设，尤其是 UI 组件类文档，可以考虑部署静态组件展示站点，进行组件展示以及用法说明。更智能、工程化的内容，我们可以考虑使用类似 <a href="https://github.com/jsdoc/jsdoc" target="_blank" rel="noreferrer">JSDoc</a> 来实现 JavaScript API 文档生成，组件类公共库可以考虑 <a href="https://storybook.js.org/" target="_blank" rel="noreferrer">Storybook</a> 或者 <a href="http://styleguides.io/" target="_blank" rel="noreferrer">Styleguides</a> 作为标准接入方案。</p><p>再比如，我们的<strong>公共库适配环境</strong>是什么？一般来讲可能需要兼容：浏览器/Node.js/同构环境等。不同环境对应了不同的编译和打包标准，这就需要你进行思考：如果目标是浏览器环境，那么如何才能充分实现性能最优解？如帮助业务方实现 tree-shaking 等优化技术。</p><p>同时，为了减轻业务使用负担，作为企业级公共库，以及对应使用这些企业级公共库的应用项目，可以指定标准规范的 babel-preset，保证编译产出的统一。这样一来，业务项目（即使用公共库方）可以以统一的接入标准引入。</p><p>下面是我基于对目前前端生态的理解，草拟的一份 babel-preset（该 preset 设计方案具有时效性）。请继续阅读下文，我们来对 @lucas/babel-preset 一探究竟。</p><h3 id="制定一个统一标准化-babel-preset" tabindex="-1">制定一个统一标准化 babel-preset <a class="header-anchor" href="#制定一个统一标准化-babel-preset" aria-label="Permalink to &quot;制定一个统一标准化 babel-preset&quot;">​</a></h3><p>企业中，所有公共库或应用项目都使用一套 @lucas/babel-xxx-preset，按照 @lucas/babel-xxx-preset 的编译要求进行编译，这样业务使用时，接入标准统一。</p><p>原则上讲，这样的统一化能够有效避免本文开头的&quot;线上问题&quot;。同时这个 @lucas/babel-preset 应该能够适应各种项目需求，比如使用 TypeScript/Flow 等扩展语法的项目。</p><p>这里给出一份设计方案，供你参考和讨论。</p><ol><li><p>支持 NODE_ENV = &#39;development&#39; | &#39;production&#39; | &#39;test&#39; 三种环境，并有对应的优化。</p></li><li><p>配置插件默认不开启 Babel<code>loose: true</code>配置，让插件的行为尽可能地遵循规范，但对有较严重性能损耗或有兼容性问题的情况保留修改入口。</p></li><li><p>这份设计方案落地后产出，应该<strong>支持应用编译和公共库编译</strong>，即可以按照 @lucas/babel-preset/app，@lucas/babel-preset/dependencies 和 @lucas/babel-preset/library，@lucas/babel-preset/library/compact 进行区分使用（具体不同预设集合的角色，下面会详细展开）。</p></li></ol><p>@lucas/babel-preset/app，@lucas/babel-preset/dependencies 都可以作为编译应用项目的预设使用，但他们也有所差别，具体如下：</p><ul><li><p>@lucas/babel-preset/app 负责编译除<code>node_modules</code>外的业务代码；</p></li><li><p>@lucas/babel-preset/dependencies 编译<code>node_modules</code>第三方代码；</p></li><li><p>@lucas/babel-preset/library 和 @lucas/babel-preset/library/compact 作为编译公共库使用的预设，他们也有所差别，@lucas/babel-preset/library 按照当前 Node 环境编译输出代码，而 @lucas/babel-preset/library/compact 会编译降级为 ES5。</p></li></ul><ol start="4"><li><p>对于企业级公共库，建议使用标准 ES 特性发布；对 tree-shaking 有强烈需求的库，应同时发布 ES module 格式代码。</p></li><li><p>对于企业级公共库，发布的代码不包含 polyfills，由使用方统一处理。</p></li><li><p>对于应用编译，使用 @babel/preset-env 同时编译应用代码与第三方库代码。</p></li><li><p>对于应用编译，需要对<code>node_modules</code>进行编译，并且为<code>node_modules</code>配置<code>sourceType: &#39;unambiguous&#39;</code>，以确保第三方依赖包中的 CommonJS 模块能够被正确处理。</p></li><li><p>对于应用编译，启用 plugin-transform-runtime，避免同样的 helper 代码被重复注入多个文件，以缩减打包后文件的体积。同时自动注入 regenerator-runtime，避免污染全局变量。</p></li><li><p>注入绝对路径引用的 @babel/runtime 包中对应的 helper，以确保能够引用到正确版本的 @babel/runtime 包中的文件。</p></li></ol><p>此外，第三方库可能通过 dependencies 依赖自己的 @babel/runtime，而 @babel/runtime 不同版本之间不能确保兼容 (比如 6.x 和 7.x 之间)，这就需要确保我们为<code>node_modules</code>内代码经过 Babel 编译注入 runtime 时使用正确路径的 @babel/runtime 包。</p><p>基于以上设计，对于 CSR 应用的 Babel 编译流程，预计业务方使用预设为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// webpack.config.js</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;@lucas/babel-preset/app&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 相关 webpack 配置</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  module</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    rules</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        test</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\\.js$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        oneOf</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">node_modules</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;babel-loader&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              cacheDirectory</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;babel-loader&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              cacheDirectory</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              configFile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 使用我们的 preset</span></span>
<span class="line"><span style="color:#E1E4E8;">              presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;@lucas/babel-preset/dependencies&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">              compact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// webpack.config.js</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;@lucas/babel-preset/app&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 相关 webpack 配置</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  module</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    rules</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        test</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\\.js$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        oneOf</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">node_modules</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;babel-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              cacheDirectory</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;babel-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              cacheDirectory</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              configFile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 使用我们的 preset</span></span>
<span class="line"><span style="color:#24292E;">              presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;@lucas/babel-preset/dependencies&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">              compact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们可以看到，上述使用方式按照<code>node_modules</code>进行了区分，对于<code>node_modules</code>我们开启 cacheDirectory 缓存。对于应用，我们直接使用 babel-loader 进行编译，并使用<code>@lucas/babel-preset/dependencies</code>这个 Babel preset，其内容为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {declare} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/helper-plugin-utils&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> getAbsoluteRuntimePath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">dirname</span><span style="color:#E1E4E8;">(require.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/runtime/package.json&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ({</span></span>
<span class="line"><span style="color:#E1E4E8;">  targets,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ignoreBrowserslistConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  forceAllTransforms </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transformRuntime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  absoluteRuntime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  supportsDynamicImport </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">declare</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      api,</span></span>
<span class="line"><span style="color:#E1E4E8;">      {modules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;auto&#39;</span><span style="color:#E1E4E8;">, absoluteRuntimePath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getAbsoluteRuntimePath</span><span style="color:#E1E4E8;">()},</span></span>
<span class="line"><span style="color:#E1E4E8;">    ) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      api.</span><span style="color:#B392F0;">assertVersion</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 返回配置内容</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// https://github.com/webpack/webpack/issues/4039#issuecomment-419284940</span></span>
<span class="line"><span style="color:#E1E4E8;">        sourceType</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;unambiguous&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">babel</span><span style="color:#E1E4E8;">\\</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">runtime</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-env&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 统一 @babel/preset-env 配置</span></span>
<span class="line"><span style="color:#E1E4E8;">              useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              modules,</span></span>
<span class="line"><span style="color:#E1E4E8;">              targets,</span></span>
<span class="line"><span style="color:#E1E4E8;">              ignoreBrowserslistConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">              forceAllTransforms,</span></span>
<span class="line"><span style="color:#E1E4E8;">              exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;transform-typeof-symbol&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        plugins</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          transformRuntime </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">              absoluteRuntime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> absoluteRuntime </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> absoluteRuntimePath </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-syntax-dynamic-import&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">supportsDynamicImport </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">api.</span><span style="color:#B392F0;">caller</span><span style="color:#E1E4E8;">(caller </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> caller </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> caller.supportsDynamicImport) </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-proposal-object-rest-spread&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {loose</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        ].</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(Boolean),</span></span>
<span class="line"><span style="color:#E1E4E8;">        env</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          test</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-env&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  targets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {node</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;current&#39;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">                  ignoreBrowserslistConfig</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;transform-typeof-symbol&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            plugins</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  absoluteRuntime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> absoluteRuntimePath,</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {declare} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/helper-plugin-utils&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> getAbsoluteRuntimePath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">dirname</span><span style="color:#24292E;">(require.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/runtime/package.json&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ({</span></span>
<span class="line"><span style="color:#24292E;">  targets,</span></span>
<span class="line"><span style="color:#24292E;">  ignoreBrowserslistConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  forceAllTransforms </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  transformRuntime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  absoluteRuntime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  supportsDynamicImport </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">declare</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      api,</span></span>
<span class="line"><span style="color:#24292E;">      {modules </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">, absoluteRuntimePath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getAbsoluteRuntimePath</span><span style="color:#24292E;">()},</span></span>
<span class="line"><span style="color:#24292E;">    ) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      api.</span><span style="color:#6F42C1;">assertVersion</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 返回配置内容</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// https://github.com/webpack/webpack/issues/4039#issuecomment-419284940</span></span>
<span class="line"><span style="color:#24292E;">        sourceType</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;unambiguous&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">@</span><span style="color:#D73A49;">babel</span><span style="color:#24292E;">\\</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">runtime</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-env&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 统一 @babel/preset-env 配置</span></span>
<span class="line"><span style="color:#24292E;">              useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              modules,</span></span>
<span class="line"><span style="color:#24292E;">              targets,</span></span>
<span class="line"><span style="color:#24292E;">              ignoreBrowserslistConfig,</span></span>
<span class="line"><span style="color:#24292E;">              forceAllTransforms,</span></span>
<span class="line"><span style="color:#24292E;">              exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;transform-typeof-symbol&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">        plugins</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          transformRuntime </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">              absoluteRuntime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> absoluteRuntime </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> absoluteRuntimePath </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-syntax-dynamic-import&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">supportsDynamicImport </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">api.</span><span style="color:#6F42C1;">caller</span><span style="color:#24292E;">(caller </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> caller </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> caller.supportsDynamicImport) </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">          [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-object-rest-spread&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {loose</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">        ].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(Boolean),</span></span>
<span class="line"><span style="color:#24292E;">        env</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          test</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-env&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  targets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {node</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;current&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">                  ignoreBrowserslistConfig</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;transform-typeof-symbol&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">            plugins</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  absoluteRuntime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> absoluteRuntimePath,</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>基于以上设计，对于 SSR 应用的编译流程（需要编译适配 Node.js 环境）使用方法为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// webpack.config.js</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p<wbr>rocess.env.BUILD_TARGET </span><span style="color:#6A737D;">// &#39;web&#39; | &#39;node&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  target,</span></span>
<span class="line"><span style="color:#E1E4E8;">  module</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    rules</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        test</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">\\.js$</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        oneOf</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">node_modules</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;babel-loader&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              cacheDirectory</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [[</span><span style="color:#9ECBFF;">&#39;@lucas/babel-preset/app&#39;</span><span style="color:#E1E4E8;">, {target}]],</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;babel-loader&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              cacheDirectory</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              configFile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [[</span><span style="color:#9ECBFF;">&#39;@lucas/babel-preset/dependencies&#39;</span><span style="color:#E1E4E8;">, {target}]],</span></span>
<span class="line"><span style="color:#E1E4E8;">              compact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// webpack.config.js</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> target </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p<wbr>rocess.env.BUILD_TARGET </span><span style="color:#6A737D;">// &#39;web&#39; | &#39;node&#39;</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  target,</span></span>
<span class="line"><span style="color:#24292E;">  module</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    rules</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        test</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">\\.js$</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        oneOf</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">node_modules</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;babel-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              cacheDirectory</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [[</span><span style="color:#032F62;">&#39;@lucas/babel-preset/app&#39;</span><span style="color:#24292E;">, {target}]],</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;babel-loader&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              cacheDirectory</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              configFile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [[</span><span style="color:#032F62;">&#39;@lucas/babel-preset/dependencies&#39;</span><span style="color:#24292E;">, {target}]],</span></span>
<span class="line"><span style="color:#24292E;">              compact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们同样按照<code>node_modules</code>进行了区分，对于<code>node_modules</code>第三方依赖，使用<code>@lucas/babel-preset/dependencies</code>预设，同时传入<code>target</code>参数。对于非<code>node_modules</code>的业务代码，使用<code>@lucas/babel-preset/app</code>这个预设，同时设定相应环境 target，<code>@lucas/babel-preset/app</code>内容为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> {declare} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/helper-plugin-utils&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> getAbsoluteRuntimePath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> path.</span><span style="color:#B392F0;">dirname</span><span style="color:#E1E4E8;">(require.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/runtime/package.json&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ({</span></span>
<span class="line"><span style="color:#E1E4E8;">  targets,</span></span>
<span class="line"><span style="color:#E1E4E8;">  ignoreBrowserslistConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  forceAllTransforms </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transformRuntime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  absoluteRuntime </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  supportsDynamicImport </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">declare</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span></span>
<span class="line"><span style="color:#E1E4E8;">      api,</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        modules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;auto&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        absoluteRuntimePath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getAbsoluteRuntimePath</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        react </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        presetReactOptions </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {},</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    ) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      api.</span><span style="color:#B392F0;">assertVersion</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-env&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">              useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              modules,</span></span>
<span class="line"><span style="color:#E1E4E8;">              targets,</span></span>
<span class="line"><span style="color:#E1E4E8;">              ignoreBrowserslistConfig,</span></span>
<span class="line"><span style="color:#E1E4E8;">              forceAllTransforms,</span></span>
<span class="line"><span style="color:#E1E4E8;">              exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;transform-typeof-symbol&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          react </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-react&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, runtime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;automatic&#39;</span><span style="color:#E1E4E8;">, ...presetReactOptions},</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        ].</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(Boolean),</span></span>
<span class="line"><span style="color:#E1E4E8;">        plugins</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          transformRuntime </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {</span></span>
<span class="line"><span style="color:#E1E4E8;">              useESModules</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;auto&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">              absoluteRuntime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> absoluteRuntime </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> absoluteRuntimePath </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// https://github.com/facebook/create-react-app/issues/4263</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-proposal-class-properties&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {loose</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-syntax-dynamic-import&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">supportsDynamicImport </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">api.</span><span style="color:#B392F0;">caller</span><span style="color:#E1E4E8;">(caller </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> caller </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> caller.supportsDynamicImport) </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-proposal-object-rest-spread&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">            {loose</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">          ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-proposal-nullish-coalescing-operator&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-proposal-optional-chaining&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ].</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(Boolean),</span></span>
<span class="line"><span style="color:#E1E4E8;">        env</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          development</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              react </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-react&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  development</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  runtime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;automatic&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  ...presetReactOptions,</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            ].</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(Boolean),</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">          test</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-env&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  targets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {node</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;current&#39;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">                  ignoreBrowserslistConfig</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;transform-typeof-symbol&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">              react </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-react&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  development</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  runtime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;automatic&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  ...presetReactOptions,</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">            ].</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(Boolean),</span></span>
<span class="line"><span style="color:#E1E4E8;">            plugins</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              [</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">                {</span></span>
<span class="line"><span style="color:#E1E4E8;">                  useESModules</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;auto&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  absoluteRuntime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> absoluteRuntimePath,</span></span>
<span class="line"><span style="color:#E1E4E8;">                },</span></span>
<span class="line"><span style="color:#E1E4E8;">              ],</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> {declare} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/helper-plugin-utils&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> getAbsoluteRuntimePath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> path.</span><span style="color:#6F42C1;">dirname</span><span style="color:#24292E;">(require.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/runtime/package.json&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ({</span></span>
<span class="line"><span style="color:#24292E;">  targets,</span></span>
<span class="line"><span style="color:#24292E;">  ignoreBrowserslistConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  forceAllTransforms </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  transformRuntime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  absoluteRuntime </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  supportsDynamicImport </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">declare</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    (</span></span>
<span class="line"><span style="color:#24292E;">      api,</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        modules </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        absoluteRuntimePath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getAbsoluteRuntimePath</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        react </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        presetReactOptions </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {},</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      api.</span><span style="color:#6F42C1;">assertVersion</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-env&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">              useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              modules,</span></span>
<span class="line"><span style="color:#24292E;">              targets,</span></span>
<span class="line"><span style="color:#24292E;">              ignoreBrowserslistConfig,</span></span>
<span class="line"><span style="color:#24292E;">              forceAllTransforms,</span></span>
<span class="line"><span style="color:#24292E;">              exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;transform-typeof-symbol&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">          react </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-react&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, runtime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;automatic&#39;</span><span style="color:#24292E;">, ...presetReactOptions},</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">        ].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(Boolean),</span></span>
<span class="line"><span style="color:#24292E;">        plugins</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          transformRuntime </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {</span></span>
<span class="line"><span style="color:#24292E;">              useESModules</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              absoluteRuntime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> absoluteRuntime </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> absoluteRuntimePath </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// https://github.com/facebook/create-react-app/issues/4263</span></span>
<span class="line"><span style="color:#24292E;">          [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-class-properties&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {loose</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-syntax-dynamic-import&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">supportsDynamicImport </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">api.</span><span style="color:#6F42C1;">caller</span><span style="color:#24292E;">(caller </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> caller </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> caller.supportsDynamicImport) </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">          [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-object-rest-spread&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">            {loose</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">          ],</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-nullish-coalescing-operator&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-proposal-optional-chaining&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">        ].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(Boolean),</span></span>
<span class="line"><span style="color:#24292E;">        env</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          development</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              react </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-react&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  development</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  runtime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;automatic&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  ...presetReactOptions,</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">            ].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(Boolean),</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">          test</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-env&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  targets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {node</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;current&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">                  ignoreBrowserslistConfig</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;transform-typeof-symbol&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">              react </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-react&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  development</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  runtime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;automatic&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  ...presetReactOptions,</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">            ].</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(Boolean),</span></span>
<span class="line"><span style="color:#24292E;">            plugins</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              [</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/plugin-transform-runtime&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">                {</span></span>
<span class="line"><span style="color:#24292E;">                  useESModules</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  absoluteRuntime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> absoluteRuntimePath,</span></span>
<span class="line"><span style="color:#24292E;">                },</span></span>
<span class="line"><span style="color:#24292E;">              ],</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;babel-plugin-dynamic-import-node&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>而对于一个公共库，使用方式为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// babel.config.js</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  presets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;@lucas/babel-preset/library&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// babel.config.js</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  presets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;@lucas/babel-preset/library&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>对应<code>@lucas/babel-preset/library</code>内容为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> create </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../app/create&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  targets</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {node</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;current&#39;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">  ignoreBrowserslistConfig</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  supportsDynamicImport</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> create </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../app/create&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  targets</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {node</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;current&#39;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">  ignoreBrowserslistConfig</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  supportsDynamicImport</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>这里的预设会将公共库按照当前 Node.js 环境标准编译。如果需要将该公共库编译降级到 ES5，需要使用<code>@lucas/babel-preset/library/compact</code>内容为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> create </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../app/create&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">module.exports </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  ignoreBrowserslistConfig</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  supportsDynamicImport</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> create </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../app/create&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">module.exports </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  ignoreBrowserslistConfig</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  supportsDynamicImport</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>这里的<code>../app/create.js</code>即为上述<code>@lucas/babel-preset/app</code>内容。</p><p>我们通过图示来表述整体架构：</p>`,43),E=a(`<p>需要说明以下内容。</p><p><strong>1. @lucas/babel-preset/app：</strong></p><p>应用项目使用，编译项目代码。SSR 项目可以配置参数 target: &#39;web&#39; | &#39;node&#39;。<strong>默认支持 JSX 语法，并支持一些常用的语法提案</strong>(如 class properties)。</p><ul><li><p>web：开启全部 transforms</p></li><li><p>node：编译到 node: &#39;current&#39;</p></li></ul><p><strong>2. @lucas/babel-preset/dependencies</strong> ：应用项目使用，编译 node_modules。SSR 项目可以配置参数 target: &#39;web&#39; | &#39;node&#39;。<strong>只支持当前 ES 规范包含的语法，不包含 JSX 语法及提案中的语法支持</strong>。</p><ul><li><p>web：开启全部 transforms</p></li><li><p>node：编译到 node: &#39;current&#39;</p></li></ul><p><strong>3. @lucas/babel-preset/library：</strong> 公共库项目使用。用于 prepare 阶段的 Babel 编译。(如 ./src 通过 Babel 编译到 ./lib)。<strong>默认支持 JSX 语法，并支持一些常用的语法提案</strong>(如 class properties)。编译到 node: &#39;current&#39;。如果需要将 library 编译为 ES5，需要使用 @lucas/babel-preset/library/compat；library 打包编译为 UMD，使用 @lucas/babel-preset/app。</p><p>上述设计，我参考了<a href="https://github.com/facebook/create-react-app/blob/master/packages/babel-preset-react-app/create.js" target="_blank" rel="noreferrer">facebook/create-react-app</a>部分内容，建议你阅读源码，并结合注释理解其细节，比如<a href="https://github.com/facebook/create-react-app/blob/master/packages/babel-preset-react-app/create.js#L87" target="_blank" rel="noreferrer">对于 transform-typeof-symbol 的编译</a>：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(isEnvProduction </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> isEnvDevelopment) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 最新稳定的 ECMAScript 特性</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;@babel/preset-env&#39;</span><span style="color:#E1E4E8;">).default,</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      useBuiltIns</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      corejs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 排除 transform-typeof-symbol，这会让编译过慢</span></span>
<span class="line"><span style="color:#E1E4E8;">      exclude</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;transform-typeof-symbol&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(isEnvProduction </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> isEnvDevelopment) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 最新稳定的 ECMAScript 特性</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;@babel/preset-env&#39;</span><span style="color:#24292E;">).default,</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      useBuiltIns</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;entry&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      corejs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 排除 transform-typeof-symbol，这会让编译过慢</span></span>
<span class="line"><span style="color:#24292E;">      exclude</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;transform-typeof-symbol&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span></code></pre></div><p>在使用<code>@babel/preset-env</code>时，使用了<code>useBuiltIns: &#39;entry&#39;</code>设置 polyfills，同时将<code>@babel/plugin-transform-typeof-symbol</code>排除在外，这是因为<code>@babel/plugin-transform-typeof-symbol</code>会劫持 typeof 特性，使得代码运行时变慢。相关讨论可参见 <a href="https://github.com/facebook/create-react-app/pull/5278" target="_blank" rel="noreferrer">issue</a>。</p><p>最后，这里的预设规范并不代表完全的最佳实践，而是以 React 技术栈风格，统一一个企业级公共库和接入准则，Babel 编译预设可以按照实际项目和企业的需要进行设计，这里更多是一个启迪的作用。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>这一讲我们从一个&quot;线上问题&quot;出发，剖析了公共库和应用方的不同编译理念，并通过设计一个万能 Babel 预设，阐明了公共库的编译和应用的使用需要密切配合，才能在当前前端生态中保障一个更合理的基础建设根基。相关知识并未完结，我们将在下一讲中，从零打造一个公共库来实践说明相关理论。</p>`,13);function y(i,u,F,d,b,m){const s=p("Image");return o(),e("div",null,[t,n(s,{alt:"Lark20210105-174532.png",src:"https://s0.lgstatic.com/i/image2/M01/04/A5/CgpVE1_0NWKAaju0AAMFDVpRq7Y221.png"}),r,n(s,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/8C/C6/CgqCHl_0Bs2AS-oEABN0rwjVVsY144.png"}),E,n(s,{alt:"前端基建 金句.png",src:"https://s0.lgstatic.com/i/image2/M01/04/A4/Cip5yF_0OaOAPb48AAf5-twsvFI497.png"})])}const D=l(c,[["render",y]]);export{A as __pageData,D as default};
