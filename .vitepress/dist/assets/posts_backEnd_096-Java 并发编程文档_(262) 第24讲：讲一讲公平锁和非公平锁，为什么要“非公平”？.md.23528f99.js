import{_ as o,j as e,o as r,g as c,k as a,h as s,Q as l,s as p}from"./chunks/framework.4e7d56ce.js";const B=JSON.parse('{"title":"第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/096-Java 并发编程文档/(262) 第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？.md","filePath":"posts/backEnd/096-Java 并发编程文档/(262) 第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？.md","lastUpdated":1696682708000}'),t={name:"posts/backEnd/096-Java 并发编程文档/(262) 第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？.md"},E=l('<h1 id="第24讲-讲一讲公平锁和非公平锁-为什么要-非公平" tabindex="-1">第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？ <a class="header-anchor" href="#第24讲-讲一讲公平锁和非公平锁-为什么要-非公平" aria-label="Permalink to &quot;第24讲：讲一讲公平锁和非公平锁，为什么要“非公平”？&quot;">​</a></h1><p>本课时我们主要讲一讲公平锁和非公平锁，以及为什么要&quot;非公平&quot;？</p><h3 id="什么是公平和非公平" tabindex="-1">什么是公平和非公平 <a class="header-anchor" href="#什么是公平和非公平" aria-label="Permalink to &quot;什么是公平和非公平&quot;">​</a></h3><p>首先，我们来看下什么是公平锁和非公平锁，公平锁指的是按照线程请求的顺序，来分配锁；而非公平锁指的是不完全按照请求的顺序，在一定情况下，可以允许插队。但需要注意这里的非公平并不是指完全的随机，不是说线程可以任意插队，而是仅仅&quot;在合适的时机&quot;插队。</p><p>那么什么时候是合适的时机呢？假设当前线程在请求获取锁的时候，恰巧前一个持有锁的线程释放了这把锁，那么当前申请锁的线程就可以不顾已经等待的线程而选择立刻插队。但是如果当前线程请求的时候，前一个线程并没有在那一时刻释放锁，那么当前线程还是一样会进入等待队列。</p><p>为了能够更好的理解公平锁和非公平锁，我们举一个生活中的例子，假设我们还在学校读书，去食堂排队买饭，我排在队列的第二个，我前面还有一位同学，但此时我脑子里想的不是午饭，而是上午的一道数学题并陷入深思，所以当前面的同学打完饭之后轮到我时我走神了，并也没注意到现在轮到我了，此时前面的同学突然又回来插队，说&quot;不好意思，阿姨麻烦给我加个鸡腿&quot;，像这样的行为就可以类比我们的公平锁和非公平锁。</p><p>看到这里，你可能不解，为什么要设置非公平策略呢，而且非公平还是 ReentrantLock的默认策略，如果我们不加以设置的话默认就是非公平的，难道我的这些排队的时间都白白浪费了吗，为什么别人比我有优先权呢？毕竟公平是一种很好的行为，而非公平是一种不好的行为。</p><p>让我们考虑一种情况，假设线程 A 持有一把锁，线程 B 请求这把锁，由于线程 A 已经持有这把锁了，所以线程 B 会陷入等待，在等待的时候线程 B 会被挂起，也就是进入阻塞状态，那么当线程 A 释放锁的时候，本该轮到线程 B 苏醒获取锁，但如果此时突然有一个线程 C 插队请求这把锁，那么根据非公平的策略，会把这把锁给线程 C，这是因为唤醒线程 B 是需要很大开销的，很有可能在唤醒之前，线程 C 已经拿到了这把锁并且执行完任务释放了这把锁。相比于等待唤醒线程 B 的漫长过程，插队的行为会让线程 C 本身跳过陷入阻塞的过程，如果在锁代码中执行的内容不多的话，线程 C 就可以很快完成任务，并且在线程 B 被完全唤醒之前，就把这个锁交出去，这样是一个双赢的局面，对于线程 C 而言，不需要等待提高了它的效率，而对于线程 B 而言，它获得锁的时间并没有推迟，因为等它被唤醒的时候，线程 C 早就释放锁了，因为线程 C 的执行速度相比于线程 B 的唤醒速度，是很快的，所以 Java 设计者设计非公平锁，是为了提高整体的运行效率。</p><h3 id="公平的场景" tabindex="-1">公平的场景 <a class="header-anchor" href="#公平的场景" aria-label="Permalink to &quot;公平的场景&quot;">​</a></h3><p>下面我们用图示来说明公平和非公平的场景，先来看公平的情况。假设我们创建了一个公平锁，此时有 4 个线程按顺序来请求公平锁，线程 1 在拿到这把锁之后，线程 2、3、4 会在等待队列中开始等待，然后等线程 1 释放锁之后，线程 2、3、4 会依次去获取这把锁，线程 2 先获取到的原因是它等待的时间最长。</p>',10),y=p("h3",{id:"不公平的场景",tabindex:"-1"},[s("不公平的场景 "),p("a",{class:"header-anchor",href:"#不公平的场景","aria-label":'Permalink to "不公平的场景"'},"​")],-1),i=p("p",null,"下面我们再来看看非公平的情况，假设线程 1 在解锁的时候，突然有线程 5 尝试获取这把锁，那么根据我们的非公平策略，线程 5 是可以拿到这把锁的，尽管它没有进入等待队列，而且线程 2、3、4 等待的时间都比线程 5 要长，但是从整体效率考虑，这把锁此时还是会交给线程 5 持有。",-1),F=l(`<h3 id="代码案例-演示公平和非公平的效果" tabindex="-1">代码案例：演示公平和非公平的效果 <a class="header-anchor" href="#代码案例-演示公平和非公平的效果" aria-label="Permalink to &quot;代码案例：演示公平和非公平的效果&quot;">​</a></h3><p>下面我们来用代码演示看下公平和非公平的实际效果，代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 描述：演示公平锁，分别展示公平和不公平的情况，非公平锁会让现在持有锁的线程优先再次获取到锁。代码借鉴自Java并发编程实战手册2.7。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FairAndUnfair</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">[]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        PrintQueue printQueue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        Thread thread[] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Thread</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            thread[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Thread</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Job</span><span style="color:#E1E4E8;">(printQueue), </span><span style="color:#9ECBFF;">&quot;Thread &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> i);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            thread[i].</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                Thread.</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Job</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Runnable</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> PrintQueue printQueue;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Job</span><span style="color:#E1E4E8;">(PrintQueue </span><span style="color:#FFAB70;">printQueue</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.printQueue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> printQueue;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%s: Going to print a job</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        printQueue.</span><span style="color:#B392F0;">printJob</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Object</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%s: The document has been printed</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintQueue</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Lock queueLock </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReentrantLock</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printJob</span><span style="color:#E1E4E8;">(Object </span><span style="color:#FFAB70;">document</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        queueLock.</span><span style="color:#B392F0;">lock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Long duration </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">) (Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%s: PrintQueue: Printing a Job during %d seconds</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">(), (duration </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            Thread.</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(duration);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            queueLock.</span><span style="color:#B392F0;">unlock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        queueLock.</span><span style="color:#B392F0;">lock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Long duration </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">) (Math.</span><span style="color:#B392F0;">random</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            System.out.</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;%s: PrintQueue: Printing a Job during %d seconds</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">(), (duration </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            Thread.</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(duration);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            e.</span><span style="color:#B392F0;">printStackTrace</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            queueLock.</span><span style="color:#B392F0;">unlock</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 描述：演示公平锁，分别展示公平和不公平的情况，非公平锁会让现在持有锁的线程优先再次获取到锁。代码借鉴自Java并发编程实战手册2.7。</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FairAndUnfair</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">args</span><span style="color:#24292E;">[]) {</span></span>
<span class="line"><span style="color:#24292E;">        PrintQueue printQueue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        Thread thread[] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Thread</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            thread[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Thread</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Job</span><span style="color:#24292E;">(printQueue), </span><span style="color:#032F62;">&quot;Thread &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            thread[i].</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                Thread.</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Job</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Runnable</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> PrintQueue printQueue;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Job</span><span style="color:#24292E;">(PrintQueue </span><span style="color:#E36209;">printQueue</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.printQueue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> printQueue;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%s: Going to print a job</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        printQueue.</span><span style="color:#6F42C1;">printJob</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Object</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%s: The document has been printed</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintQueue</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Lock queueLock </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReentrantLock</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printJob</span><span style="color:#24292E;">(Object </span><span style="color:#E36209;">document</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        queueLock.</span><span style="color:#6F42C1;">lock</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            Long duration </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">long</span><span style="color:#24292E;">) (Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%s: PrintQueue: Printing a Job during %d seconds</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">(), (duration </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            Thread.</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(duration);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            queueLock.</span><span style="color:#6F42C1;">unlock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        queueLock.</span><span style="color:#6F42C1;">lock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            Long duration </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">long</span><span style="color:#24292E;">) (Math.</span><span style="color:#6F42C1;">random</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;%s: PrintQueue: Printing a Job during %d seconds</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">(), (duration </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            Thread.</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(duration);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            e.</span><span style="color:#6F42C1;">printStackTrace</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            queueLock.</span><span style="color:#6F42C1;">unlock</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>我们可以通过改变 new ReentrantLock(false) 中的参数来设置公平/非公平锁。以上代码在公平的情况下的输出：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span></code></pre></div><p>可以看出，线程直接获取锁的顺序是完全公平的，先到先得。</p><p>而以上代码在非公平的情况下的输出是这样的：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Going to print a job</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">6</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">7</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">8</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> PrintQueue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Printing a Job during </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> seconds</span></span>
<span class="line"><span style="color:#E1E4E8;">Thread </span><span style="color:#79B8FF;">9</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> The document has been printed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Going to print a job</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">5</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">6</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">7</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">8</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> PrintQueue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Printing a Job during </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> seconds</span></span>
<span class="line"><span style="color:#24292E;">Thread </span><span style="color:#005CC5;">9</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> The document has been printed</span></span></code></pre></div><p>可以看出，非公平情况下，存在抢锁&quot;插队&quot;的现象，比如Thread 0 在释放锁后又能优先获取到锁，虽然此时在等待队列中已经有 Thread 1 ~ Thread 9 在排队了。</p><h3 id="对比公平和非公平的优缺点" tabindex="-1">对比公平和非公平的优缺点 <a class="header-anchor" href="#对比公平和非公平的优缺点" aria-label="Permalink to &quot;对比公平和非公平的优缺点&quot;">​</a></h3><p>我们接下来对比公平和非公平的优缺点，如表格所示。</p>`,11),d=l(`<p>公平锁的优点在于各个线程公平平等，每个线程等待一段时间后，都有执行的机会，而它的缺点就在于整体执行速度更慢，吞吐量更小，相反非公平锁的优势就在于整体执行速度更快，吞吐量更大，但同时也可能产生线程饥饿问题，也就是说如果一直有线程插队，那么在等待队列中的线程可能长时间得不到运行。</p><h3 id="源码分析" tabindex="-1">源码分析 <a class="header-anchor" href="#源码分析" aria-label="Permalink to &quot;源码分析&quot;">​</a></h3><p>下面我们来分析公平和非公平锁的源码，具体看下它们是怎样实现的，可以看到在 ReentrantLock 类包含一个 Sync 类，这个类继承自AQS（AbstractQueuedSynchronizer），代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ReentrantLock</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Lock</span><span style="color:#E1E4E8;">, java.io.</span><span style="color:#B392F0;">Serializable</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> serialVersionUID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7373984872572414699L</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">/** Synchronizer providing all implementation mechanics */</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Sync sync;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ReentrantLock</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lock</span><span style="color:#24292E;">, java.io.</span><span style="color:#6F42C1;">Serializable</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> serialVersionUID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7373984872572414699L</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">/** Synchronizer providing all implementation mechanics */</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Sync sync;</span></span></code></pre></div><p>Sync 类的代码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">abstract</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Sync</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AbstractQueuedSynchronizer</span><span style="color:#E1E4E8;"> {...}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">abstract</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Sync</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractQueuedSynchronizer</span><span style="color:#24292E;"> {...}</span></span></code></pre></div><p>根据代码可知，Sync 有公平锁 FairSync 和非公平锁 NonfairSync两个子类：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NonfairSync</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Sync</span><span style="color:#E1E4E8;"> {...}</span></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FairSync</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Sync</span><span style="color:#E1E4E8;"> {...}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NonfairSync</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Sync</span><span style="color:#24292E;"> {...}</span></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FairSync</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Sync</span><span style="color:#24292E;"> {...}</span></span></code></pre></div><p>下面我们来看一下公平锁与非公平锁的加锁方法的源码。</p><p>公平锁的锁获取源码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tryAcquire</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> acquires) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Thread current </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getState</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">hasQueuedPredecessors</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//这里判断了 hasQueuedPredecessors()</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">compareAndSetState</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, acquires)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">setExclusiveOwnerThread</span><span style="color:#E1E4E8;">(current);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (current </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getExclusiveOwnerThread</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> nextc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> acquires;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (nextc </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Maximum lock count exceeded&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(nextc);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tryAcquire</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> acquires) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Thread current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getState</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">hasQueuedPredecessors</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//这里判断了 hasQueuedPredecessors()</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">compareAndSetState</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, acquires)) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">setExclusiveOwnerThread</span><span style="color:#24292E;">(current);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (current </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getExclusiveOwnerThread</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> nextc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> acquires;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (nextc </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Maximum lock count exceeded&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(nextc);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>非公平锁的锁获取源码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">nonfairTryAcquire</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> acquires) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Thread current </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Thread.</span><span style="color:#B392F0;">currentThread</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getState</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">compareAndSetState</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, acquires)) { </span><span style="color:#6A737D;">//这里没有判断      hasQueuedPredecessors()</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">setExclusiveOwnerThread</span><span style="color:#E1E4E8;">(current);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (current </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getExclusiveOwnerThread</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> nextc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> acquires;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (nextc </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// overflow</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Maximum lock count exceeded&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(nextc);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">nonfairTryAcquire</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> acquires) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Thread current </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Thread.</span><span style="color:#6F42C1;">currentThread</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getState</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">compareAndSetState</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, acquires)) { </span><span style="color:#6A737D;">//这里没有判断      hasQueuedPredecessors()</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">setExclusiveOwnerThread</span><span style="color:#24292E;">(current);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (current </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getExclusiveOwnerThread</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> nextc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> acquires;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (nextc </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// overflow</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Maximum lock count exceeded&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(nextc);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>通过对比，我们可以明显的看出公平锁与非公平锁的 lock() 方法唯一的区别就在于公平锁在获取锁时多了一个限制条件：hasQueuedPredecessors() 为 false，这个方法就是判断在等待队列中是否已经有线程在排队了。这也就是公平锁和非公平锁的核心区别，如果是公平锁，那么一旦已经有线程在排队了，当前线程就不再尝试获取锁；对于非公平锁而言，无论是否已经有线程在排队，都会尝试获取一下锁，获取不到的话，再去排队。</p><p>这里有一个特例需要我们注意，针对 tryLock() 方法，它不遵守设定的公平原则。</p><p>例如，当有线程执行 tryLock() 方法的时候，一旦有线程释放了锁，那么这个正在 tryLock 的线程就能获取到锁，即使设置的是公平锁模式，即使在它之前已经有其他正在等待队列中等待的线程，简单地说就是 tryLock 可以插队。</p><p>看它的源码就会发现：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tryLock</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sync.</span><span style="color:#B392F0;">nonfairTryAcquire</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tryLock</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sync.</span><span style="color:#6F42C1;">nonfairTryAcquire</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这里调用的就是 nonfairTryAcquire()，表明了是不公平的，和锁本身是否是公平锁无关。</p><p>综上所述，公平锁就是会按照多个线程申请锁的顺序来获取锁，从而实现公平的特性。非公平锁加锁时不考虑排队等待情况，直接尝试获取锁，所以存在后申请却先获得锁的情况，但由此也提高了整体的效率。</p>`,20);function u(h,C,g,A,T,D){const n=e("Image");return r(),c("div",null,[E,a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/5D/BF/CgpOIF4Jrv-AF9RXAABULbvqDXk649.png"}),s(),a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/5D/BF/CgpOIF4JrzyAcpwfAABJXkyqDT8424.png"}),s(),y,i,a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/5D/C0/CgpOIF4Jr5CAR4urAABkLD-41lc376.png"}),s(),F,a(n,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/5D/C8/CgpOIF4Jsh6AbVZ-AAB_Y_MH7f4077.png"}),s(),d])}const P=o(t,[["render",u]]);export{B as __pageData,P as default};
