import{_ as l,j as o,o as p,g as e,k as n,Q as s}from"./chunks/framework.e0c66c3f.js";const m=JSON.parse('{"title":"ansible-playbook 的使用 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/042_大数据运维实战/(3163) 第04讲：自动化运维工具 Anible 在部署大数据平台下的应用（下）.md","filePath":"posts/devops/042_大数据运维实战/(3163) 第04讲：自动化运维工具 Anible 在部署大数据平台下的应用（下）.md","lastUpdated":1696338709000}'),t={name:"posts/devops/042_大数据运维实战/(3163) 第04讲：自动化运维工具 Anible 在部署大数据平台下的应用（下）.md"},c=s(`<h3 id="ansible-playbook-的使用" tabindex="-1">ansible-playbook 的使用 <a class="header-anchor" href="#ansible-playbook-的使用" aria-label="Permalink to &quot;ansible-playbook 的使用&quot;">​</a></h3><h4 id="_1-playbook-简介与文件格式" tabindex="-1">1. playbook 简介与文件格式 <a class="header-anchor" href="#_1-playbook-简介与文件格式" aria-label="Permalink to &quot;1. playbook 简介与文件格式&quot;">​</a></h4><p>playbook 字面意思是剧本，现实中由演员按照剧本表演，在 Ansible 中，这次由计算机进行表演，由计算机安装、部署应用，提供对外服务，以及组织计算机处理各种各样的事情。</p><p>playbook 文件由 YMAL 语言编写。YMAL 格式类似于 JSON 的文件格式，便于理解、阅读和书写。首先学习了解一下 YMAL 的格式，对后面书写 playbook 很有帮助。以下是 playbook 常用的 YMAL 格式规则。</p><ul><li><p>文件的第一行应该以&quot;---&quot;（三个连字符）开始，表明 YMAL 文件的开始；</p></li><li><p>在同一行中，# 之后的内容表示注释，类似于 shell 、Python 和 Ruby；</p></li><li><p>YMAL 中的列表元素以&quot;-&quot;开头，然后紧跟着一个空格，后面为元素内容；</p></li><li><p>同一个列表中的元素应该保持相同的缩进，否则会被当作错误处理；</p></li><li><p>play 中的 hosts、variables、roles、tasks 等对象的表示方法都是键值中间以&quot;:&quot;分隔表示，&quot;:&quot;后面还要增加一个空格。</p></li></ul><p>首先看下面这个例子：</p><pre><code>- apple
- banana
- orange
</code></pre><p>等价于 JSON 的下面这个格式：</p><pre><code>[
 &quot;apple&quot;,
 &quot;banana&quot;,
 &quot;orange&quot;
]
</code></pre><p>playbook 文件是通过 ansible-playbook 命令进行解析的，该命令会根据自上而下的顺序依次执行 playbook 文件中的内容。</p><h4 id="_2-playbook-的组成" tabindex="-1">2. playbook 的组成 <a class="header-anchor" href="#_2-playbook-的组成" aria-label="Permalink to &quot;2. playbook 的组成&quot;">​</a></h4><p>playbook 是由一个或多个&quot;play&quot;组成的列表。play 的主要功能在于，将事先合并为一组的主机组合成事先通过 Ansible 定义好的角色。将多个 play 组织在一个 playbook 中就可以让它们联同起来，按事先编排好的机制完成一系列复杂的任务。</p><p>playbooks 主要有以下四部分构成，分别如下：</p><ul><li><p>Target 部分，定义将要执行 playbook 的远程主机组；</p></li><li><p>Variable 部分，定义 playbook 运行时需要使用的变量；</p></li><li><p>Task 部分，定义将要在远程主机上执行的任务列表；</p></li><li><p>Handler 部分，定义 task 执行完成以后需要调用的任务。</p></li></ul><p>下面介绍下构成 playbook 的四个组成部分。</p><p>（1）Hosts 和 Users</p><p>playbook 中的每一个 play 的目的都是为了让某个或某些远程主机以某个指定的用户身份执行任务。</p><p><strong>hosts</strong>：用于指定要执行任务的远程主机，每个 playbook 都必须指定 hosts，hosts 也可以使用通配符格式。主机或主机组在 inventory 清单（hosts 文件）中指定，可以使用系统默认的 /etc/ansible/hosts，也可以自己编辑，在运行的时候加上 -i 选项，可指定自定义主机清单的位置。</p><p><strong>remote_user</strong>：用于指定在远程主机上执行任务的用户，可以指定任意用户，也可以使用 sudo，但是用户必须要有执行相应任务的权限。</p><p>（2）任务列表</p><p>play 的主体部分是 task list，其中的各任务按次序逐个在 hosts 中指定所有远程主机上的执行，即在所有远程主机上完成第一个任务后再开始第二个。在运行自上而下某 playbook 时，如果中途发生错误，则所有已执行任务都将回滚，因此在更正 playbook 后需要重新执行一次。</p><p>task 的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行一个命令，哪怕执行一次或多次，其结果是一样的，这意味着 playbook 多次执行是安全的，因为其结果均一致。tasks 包含 name 和要执行的模块，name 是可选的，只是为了便于用户阅读，建议加上，模块是必需的，同时也要给予模块相应的参数。</p><p>定义 tasks 推荐使用 module: options 格式，例如：</p><pre><code>service: name=httpd state=running
</code></pre><p>（3）handlers</p><p>用于当关注的资源发生变化时采取一定的操作，handlers 和&quot;notify&quot;配合使用。&quot;notify&quot;这个动作可用于在每个 play 执行的最后被触发，这样可以避免当多次有改变发生时，每次都执行指定的操作，通过&quot;notify&quot;，仅在所有的变化发生完成后一次性地执行指定操作。</p><p>在 notify 中列出的操作称为 <strong>handler</strong>，也就是说 notify 用来调用 handler 中定义的操作。</p><p>注意：在 notify 中定义的内容一定要和 handlers 中定义的&quot;- name&quot;内容一样，这样才能达到触发的效果，否则会不生效。</p><p>（4）tags</p><p>用于让用户选择运行或略过 playbook 中的部分代码。Ansible 具有幂等性，因此会自动跳过没有变化的部分；但是当一个 playbook 任务比较多时，一个个的判断每个部分是否发生了变化，也需要很长时间。因此，如果确定某些部分没有发生变化，就可以通过 tags 跳过这些代码片断。</p><h4 id="_3-playbook-执行结果解析" tabindex="-1">3. playbook 执行结果解析 <a class="header-anchor" href="#_3-playbook-执行结果解析" aria-label="Permalink to &quot;3. playbook 执行结果解析&quot;">​</a></h4><p>使用 ansible-playbook 运行 playbook 文件，输出的内容为 JSON 格式，并且由不同颜色组成，便于识别。一般而言，输出内容中，每个颜色表示的含义如下：</p><ul><li><p>绿色代表执行成功，但系统保持原样；</p></li><li><p>黄色代表系统状态发生改变，也就是执行的操作生效；</p></li><li><p>红色代表执行失败，会显示错误信息。</p></li></ul><p>下面是一个简单的 playbook 文件：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> create user</span></span>
<span class="line"><span style="color:#E1E4E8;">  hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  gather_facts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  vars</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    user1</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> testuser</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> start createuser</span></span>
<span class="line"><span style="color:#E1E4E8;">     user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;{ {user1}}&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> create user</span></span>
<span class="line"><span style="color:#24292E;">  hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  gather_facts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  vars</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">    user1</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> testuser</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> start createuser</span></span>
<span class="line"><span style="color:#24292E;">     user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;{ {user1}}&quot;</span></span></code></pre></div><p>上面 playbook 实现的功能是新增一个用户，每个参数含义如下：</p><ul><li><p>name 参数对该 playbook 实现的功能做一个概述，后面执行过程中，会输出 name 的值；</p></li><li><p>hosts 参数指定了对哪些主机进行操作；</p></li><li><p>user 参数指定了使用什么用户登录到远程主机进行操作；</p></li><li><p>gather_facts 参数指定了在执行 task 任务前，是否先执行 setup 模块获取主机相关信息，此参数默认值为 true，表示开启，如果在 task 中使用 facts 信息时，就需要开启此功能；否则设置为 false，这样可以加快 playbook 的执行速度；</p></li><li><p>vars 参数指定了变量，这里指定一个 user1 变量，其值为 testuser，注意，变量值一定要用引号括起来；</p></li><li><p>tasks 指定了一个任务，其下面的 name 参数同样是对任务的描述，在执行过程中会打印出来，user 是一个模块，后面的 name 是 user 模块里的一个参数，而增加的用户名调用了上面 user1 变量的值。</p></li></ul><h4 id="_4-playbook-中-tasks-语法使用" tabindex="-1">4. playbook 中 tasks 语法使用 <a class="header-anchor" href="#_4-playbook-中-tasks-语法使用" aria-label="Permalink to &quot;4. playbook 中 tasks 语法使用&quot;">​</a></h4><p>在 playbook 中，task 部分是整个任务的核心，前面介绍的 ansible 常用模块，如 commands、shell、file、cron、user 等模块，在 playbook 中仍然可用，每个模块所使用的参数以及含义跟命令行模式下也完全一样，只不过写法不同而已。</p><p>下面通过几个例子来看看 playbook 中常见功能模块的写法。<br><strong>（1）playbook 示例</strong></p><p>下面是一个 playbook 示例，test.yml 文件内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hadoophosts</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> create hadoop user</span></span>
<span class="line"><span style="color:#E1E4E8;">     user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">hadoop state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">present</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> create hadoop directory and chmod</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">chown</span></span>
<span class="line"><span style="color:#E1E4E8;">     file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> path</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">opt</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hadoop state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">directory mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0755</span><span style="color:#E1E4E8;"> owner</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">hadoop group</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">hadoop</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> synchronize hadoop program</span></span>
<span class="line"><span style="color:#E1E4E8;">     synchronize</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">data</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hadoop</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">opt</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hadoop</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Setting environment variables</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> echo </span><span style="color:#9ECBFF;">&quot;export JAVA_HOME=/usr/jdk&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">profile</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hadoophosts</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> create hadoop user</span></span>
<span class="line"><span style="color:#24292E;">     user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">hadoop state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">present</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> create hadoop directory and chmod</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">chown</span></span>
<span class="line"><span style="color:#24292E;">     file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> path</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">opt</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hadoop state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">directory mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0755</span><span style="color:#24292E;"> owner</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">hadoop group</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">hadoop</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> synchronize hadoop program</span></span>
<span class="line"><span style="color:#24292E;">     synchronize</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">data</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hadoop</span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">opt</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hadoop</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Setting environment variables</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> echo </span><span style="color:#032F62;">&quot;export JAVA_HOME=/usr/jdk&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">profile</span></span></code></pre></div><p>在 playbook 文件中，使用了 user、file、synchronize 和 shell 模块，文件开始定义了一个主机组 hadoophosts，然后设置 root 用户在远程主机上执行操作；接着是 task 任务的开始，&quot;- name&quot;是描述性信息，用来标识任务执行内容和进度，第一个 task 用来创建一个 hadoop 用户，使用了 user 模块。</p><p>注意，上面的 user 表示 ansible 的 user 模块，而 user 后面的 name、state 是 user 模块的参数，这些参数的含义上面已经介绍过了。</p><p>下面还有 file、synchronize 及 shell 模块，它们的写法跟 user 模块类似，不再过多介绍。</p><p>从此文件可以看出，通过 playbook 模式编写的文件更加简洁、易懂，只要设置好了任务的运行策略、顺序，每次需要用到这个操作的话，直接执行就可以了。执行的方式如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@</span><span style="color:#F97583;">server239</span><span style="color:#E1E4E8;"> ansible]# ansible</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">playbook  test.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@</span><span style="color:#D73A49;">server239</span><span style="color:#24292E;"> ansible]# ansible</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">playbook  test.yml</span></span></code></pre></div><p>除了前面已经介绍过的 ansible 模块，还有一些模块在 playbook 中也经常用到，下面再介绍一些常用的 playbook 模块。<br><strong>（2）unarchive 模块</strong></p><p>该模块用来实现解压缩，也就是将压缩文件解压分发到远程不同节点上，只需记住如下几个参数即可：</p><ul><li><p>src，源文件路径，这个源文件在管理机上；</p></li><li><p>dest，指定远程主机的文件路径；</p></li><li><p>mode，设置远程主机上文件权限。</p></li></ul><p>看下面这个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  gather_facts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> unarchive spark files</span></span>
<span class="line"><span style="color:#E1E4E8;">     unarchive</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">src</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">spark.tar.gz dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">opt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  gather_facts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> unarchive spark files</span></span>
<span class="line"><span style="color:#24292E;">     unarchive</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">src</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">spark.tar.gz dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">opt</span></span></code></pre></div><p>这个操作是将管理机上的 /src/spark.tar.gz 文件传输到远程主机上后进行解压缩，并将解压缩后的文件放到远程主机的 /opt 目录下。注意，这个例子设置了 gather_facts 选项为 false，这是因为下面的 task 中，没有用到 facts 信息。<br><strong>（3）lineinfile、replace 模块</strong></p><p>在自动化运维中，对文件进行内容替换是一个非常常见的场景，比如修改、删除、添加操作系统的某些参数等。Ansible 中虽然提供了 shell 模块结合 sed 命令来达到替换的效果，但经常会遇到需要转义的问题，并且考虑到可读性和可维护性等多方面因素，使用 Ansible 自带的替换模块是一个不错的选择。Ansible 常用的替换模块为 replace 和 lineinfile。</p><p><strong>replace 模块</strong>可以根据指定的正则表达式替换远程主机下某个文件中的内容，常用的参数如下表所示：</p>`,55),r=s(`<p>看下面这个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> modify selinux</span></span>
<span class="line"><span style="color:#E1E4E8;">     replace</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> path</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">selinux</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">config regexp</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;enforcing&quot;</span><span style="color:#E1E4E8;"> replace</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">disabled backup</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">yes</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> modify selinux</span></span>
<span class="line"><span style="color:#24292E;">     replace</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> path</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">selinux</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">config regexp</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;enforcing&quot;</span><span style="color:#24292E;"> replace</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">disabled backup</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">yes</span></span></code></pre></div><p>这个操作是对远程主机上 /etc/selinux/config 文件中的 enforcing 字符串进行替换，替换为 disabled，替换前进行备份，其实就是关闭远程主机上 selinux 服务。</p><p>再介绍一下 <strong>lineinfile</strong>，此模块也可以实现 replace 的功能，但 lineinfile 功能更加强大，支持的参数也比较多，常用参数含义如下表所示：</p>`,4),y=s(`<p>下面来看一个基于 lineinfile 的 playbook 任务：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">profile insertafter</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;ulimit(.*)&#39;</span><span style="color:#E1E4E8;"> line</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;ulimit -c unlimited&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">profile line</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;export JAVA_HOME=/usr/jdk&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">selinux</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">config regexp</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;SELINUX=(.*)&#39;</span><span style="color:#E1E4E8;"> line</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;SELINUX=disabled&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">resolv.conf regexp</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;search(.*)&#39;</span><span style="color:#E1E4E8;"> state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">absent</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">profile insertafter</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;ulimit(.*)&#39;</span><span style="color:#24292E;"> line</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;ulimit -c unlimited&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">profile line</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;export JAVA_HOME=/usr/jdk&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">selinux</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">config regexp</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;SELINUX=(.*)&#39;</span><span style="color:#24292E;"> line</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;SELINUX=disabled&#39;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">resolv.conf regexp</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;search(.*)&#39;</span><span style="color:#24292E;"> state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">absent</span></span></code></pre></div><p>在 playbook 任务中，调用了四次 lineinfile 替换操作，第一次是在 /etc/profile 文件中找到以 ulimit 开头的行，并在后面添加一行内容&quot;ulimit -c unlimited&quot;；第二次是在 /etc/profile 文件的最后添加一个 JAVA_HOME 路径；第三次是修改 /etc/selinux/config 文件中以&quot;SELINUX=&quot;开头的行，将其替换为&quot;SELINUX=disabled&quot;，其实就是关闭 selinux；最后一个操作是在 /etc/resolv.conf 文件找查找以 search 开头的行，然后将其删除掉。<br><strong>（4）register、set_fact、debug 模块</strong></p><p>Ansible 中定义变量的方式有很多种，可以将模块的执行结果注册为变量，也可以在 roles 中的文件内定义变量，还可以使用内置变量等，而 register、set_fact 都可用来注册一个变量。</p><p>使用 register 选项，可以将当前 task 的输出结果赋值给一个变量，看下面这个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> ps command</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname</span></span>
<span class="line"><span style="color:#E1E4E8;">     register</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> host_result</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> debug</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> var</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">host_result</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> ps command</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname</span></span>
<span class="line"><span style="color:#24292E;">     register</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> host_result</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> debug</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> var</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">host_result</span></span></code></pre></div><p>此例子是将在远程主机上执行的 shell 命令&quot;hostname&quot;的输出结果赋值给变量 host_result，然后再将变量引用并使用 debug 模块输出，输出结果是 json 格式的。注意，此例子最后还使用了 debug 模块，此模块用于在调试中输出信息。</p><p>下面是 playbook 的 debug 输出结果：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">TASK</span><span style="color:#E1E4E8;"> [debug] </span><span style="color:#F97583;">**********************************************************</span></span>
<span class="line"><span style="color:#E1E4E8;">ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;host_result&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;changed&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;cmd&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hostname&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;delta&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0:00:00.007228&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;end&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;2020-04-01 04:42:34.254587&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;failed&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;rc&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;start&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;2020-04-01 04:42:34.247359&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;stderr&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;stderr_lines&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;stdout&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;server231.localdomain&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;stdout_lines&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">TASK</span><span style="color:#24292E;"> [debug] </span><span style="color:#D73A49;">**********************************************************</span></span>
<span class="line"><span style="color:#24292E;">ok</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;host_result&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;changed&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;cmd&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hostname&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;delta&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0:00:00.007228&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;end&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2020-04-01 04:42:34.254587&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;failed&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;rc&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;start&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2020-04-01 04:42:34.247359&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;stderr&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;stderr_lines&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;stdout&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;server231.localdomain&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;stdout_lines&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>可以看出，此输出是一段 json 格式的数据，最顶端的 key 为 host_result，大括号内还有多个二级 key，我们想要的结果是输出远程主机的主机名即可，不需要其他这些额外的二级 key 信息，如何实现这个需求呢？如果想要输出 json 数据的某二级 key 项，可以使用 &quot;key.dict&quot; 或 &quot;key[&#39;dict&#39;]&quot; 的方式引用即可。</p><p>从上面输出可以看到，我们需要的二级 key 是 stdout 项，所以要仅仅输出此项内容，可以将变量引用改为 host_result.stdout 即可，也就是将上面的 playbook 任务改成如下内容：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname command</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname</span></span>
<span class="line"><span style="color:#E1E4E8;">     register</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> host_result</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> debug</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> var</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">host_result.stdout</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> debug</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;msg=&quot;output: { {host_result.stdout}}&quot;&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname command</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname</span></span>
<span class="line"><span style="color:#24292E;">     register</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> host_result</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> debug</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> var</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">host_result.stdout</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> debug</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;msg=&quot;output: { {host_result.stdout}}&quot;&#39;</span></span></code></pre></div><p>在 playbook 中，又增加了一个 debug 参数，debug 模块常用的参数有两个，即 msg 和 var，它们都可以引用变量输出信息，但有一点小区别，msg 可以输出自定义信息，并且变量需要双大括号包含起来；而 var 参数只能输出变量，并且不需要双大括号。</p><p>修改后的 playbook 执行 debug 输出结果如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">TASK</span><span style="color:#E1E4E8;"> [debug] </span><span style="color:#F97583;">********************************************************</span></span>
<span class="line"><span style="color:#E1E4E8;">ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;host_result.stdout&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">TASK</span><span style="color:#E1E4E8;"> [debug] </span><span style="color:#F97583;">********************************************************</span></span>
<span class="line"><span style="color:#E1E4E8;">ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;output: server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">TASK</span><span style="color:#24292E;"> [debug] </span><span style="color:#D73A49;">********************************************************</span></span>
<span class="line"><span style="color:#24292E;">ok</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;host_result.stdout&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">TASK</span><span style="color:#24292E;"> [debug] </span><span style="color:#D73A49;">********************************************************</span></span>
<span class="line"><span style="color:#24292E;">ok</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;output: server231.localdomain&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>从输出可知，这个才是我们想要的结果。</p><p>set_fact 和 register 的功能很类似，它也可以将 task 输出赋值给变量。set_fact 更像 shell 中变量的赋值方式，可以将某个变量的值赋值给另一个变量，也可以将字符串赋值给变量。看下面这个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname command</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname</span></span>
<span class="line"><span style="color:#E1E4E8;">     register</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> host_result</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> set_fact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> var1</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;{ {host_result.stdout}}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> set_fact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> var2</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;This is a string&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> debug</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> msg</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;{ {var1}}  { {var2}}&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname command</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname</span></span>
<span class="line"><span style="color:#24292E;">     register</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> host_result</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> set_fact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> var1</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;{ {host_result.stdout}}&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> set_fact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> var2</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;This is a string&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> debug</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> msg</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;{ {var1}}  { {var2}}&quot;</span></span></code></pre></div><p>这个例子是将 hostname 的输出结果赋值给 host_result 变量，然后通过 set_fact 将 host_result 变量赋值给 var1 变量，接着又将一个字符串赋值给 var2 变量，最后，通过 debug 模块输出这些变量信息。注意这些模块的使用方式和书写格式。</p><p>这个 playbook 的输出结果为：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">TASK</span><span style="color:#E1E4E8;"> [debug] </span><span style="color:#F97583;">**********************************************************</span></span>
<span class="line"><span style="color:#E1E4E8;">ok</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;server231.localdomain  This is a string&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">TASK</span><span style="color:#24292E;"> [debug] </span><span style="color:#D73A49;">**********************************************************</span></span>
<span class="line"><span style="color:#24292E;">ok</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;server231.localdomain  This is a string&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>（5）delegate_to、connection 和 local_action 模块</strong></p><p>Ansible 默认只会对远程主机执行操作，但有时候如果需要在管理机本机上执行一些操作，该如何实现呢？其实现的方法有很多，可以通过 delegate_to（任务委派）来实现，也可通过 connection:local 方法，还可通过 local_action 关键字来实现。</p><p>下面来看一个例子，说明它们的用法。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  gather_facts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> connection</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> echo </span><span style="color:#9ECBFF;">&quot;connection . { {inventory_hostname}} $(hostname) .&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tmp</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local.log</span></span>
<span class="line"><span style="color:#E1E4E8;">     connection</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> local</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> delegate_to</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> echo </span><span style="color:#9ECBFF;">&quot;delegate_to . { {inventory_hostname}} $(hostname) .&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tmp</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local.log</span></span>
<span class="line"><span style="color:#E1E4E8;">     delegate_to</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> localhost</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> local_action</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell echo </span><span style="color:#9ECBFF;">&quot;local_action. { {inventory_hostname}} $(hostname)&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tmp</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  gather_facts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> connection</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> echo </span><span style="color:#032F62;">&quot;connection . { {inventory_hostname}} $(hostname) .&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tmp</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local.log</span></span>
<span class="line"><span style="color:#24292E;">     connection</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> local</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> delegate_to</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> echo </span><span style="color:#032F62;">&quot;delegate_to . { {inventory_hostname}} $(hostname) .&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tmp</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local.log</span></span>
<span class="line"><span style="color:#24292E;">     delegate_to</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> localhost</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> local_action</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell echo </span><span style="color:#032F62;">&quot;local_action. { {inventory_hostname}} $(hostname)&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tmp</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local.log</span></span></code></pre></div><p>这个例子依次使用了 connection、delegate_to 和 local_action 三种方式，还使用了一个变量 { {inventory_hostname}}，这是 Ansible 的一个内置变量，用来获取远程主机的主机名，说到主机名，其实用到了 facts 信息，所以，需要设置 gather_facts 选项为 true。另外，$(hostname) 是 shell 里面的变量，也是用来获取主机名，此例子实现的功能是将远程主机的主机名依次输出到管理机的 /tmp/local.log 文件中。</p><h3 id="大数据运维环境下-ansible-playbook-应用案例" tabindex="-1">大数据运维环境下 ansible-playbook 应用案例 <a class="header-anchor" href="#大数据运维环境下-ansible-playbook-应用案例" aria-label="Permalink to &quot;大数据运维环境下 ansible-playbook 应用案例&quot;">​</a></h3><h4 id="_1-批量更改主机名并生成本地解析" tabindex="-1">1. 批量更改主机名并生成本地解析 <a class="header-anchor" href="#_1-批量更改主机名并生成本地解析" aria-label="Permalink to &quot;1. 批量更改主机名并生成本地解析&quot;">​</a></h4><p>在大数据运维环境下，对主机名要求比较严格，所以对大数据节点的主机名要进行统一规划，然后集中设置。如果本地没有建立 DNS 解析服务器，还需要对每个节点添加本地解析，也就是将每个节点的 IP 和主机名的对应关系添加到 /etc/hosts 文件中。要解决这两个问题，只需要两个 playbook 脚本即可自动完成。</p><p>要批量更改每个节点的主机名，首先需要修改 ansible 中 /etc/ansible/hosts 文件内容，添加如下配置：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[hostall]</span></span>
<span class="line"><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">229</span><span style="color:#E1E4E8;">   hostname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">namenodemaster</span></span>
<span class="line"><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">230</span><span style="color:#E1E4E8;">   hostname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">slave001</span></span>
<span class="line"><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span><span style="color:#E1E4E8;">   hostname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">slave002</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[hostall]</span></span>
<span class="line"><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">229</span><span style="color:#24292E;">   hostname</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">namenodemaster</span></span>
<span class="line"><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">230</span><span style="color:#24292E;">   hostname</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">slave001</span></span>
<span class="line"><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span><span style="color:#24292E;">   hostname</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">slave002</span></span></code></pre></div><p>这里定义了一个名为 hostall 的主机组，组中有三台主机，每个主机 IP 后面跟了一个 hostname 变量，变量后面就是定义好的主机名，而这个变量可以在 playbook 脚本中直接引用。</p><p>接下来就可以编写 playbook 脚本了，内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostall</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> change name</span></span>
<span class="line"><span style="color:#E1E4E8;">      shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;echo { {hostname}} &gt; /etc/hostname&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname { {hostname}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostall</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> change name</span></span>
<span class="line"><span style="color:#24292E;">      shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;echo { {hostname}} &gt; /etc/hostname&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">      shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname { {hostname}}</span></span></code></pre></div><p>其中，变量 { {hostname}} 及值就是在 /etc/ansible/hosts 文件中定义的&quot;hostname=namenodemaster&quot;这部分内容。通过使用 shell 模块，实现将定义好的主机名添加到每个远程主机的 /etc/hostname 文件中（限于 RHEL/Centos7/8 系统），然后执行 hostname 命令使其生效。</p><p>每个主机名修改完毕后，还需要构建一个本地解析文件（IP 和主机名对应的文件），然后传到每个远程主机上，要实现这个功能，可以编写如下 playbook 脚本，内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostall</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  roles</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> roles</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> add localhost</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell echo </span><span style="color:#9ECBFF;">&quot;127.0.0.1   localhost&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> { {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">templates</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hosts.j2</span></span>
<span class="line"><span style="color:#E1E4E8;">     run_once</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> set_fact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> ipaddress</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {hostvars[inventory_hostname].ansible_default_ipv4.address}}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> set_fact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostname</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {hostvars[inventory_hostname].ansible_facts.hostname}}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> add host record</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell echo { {ipaddress}} { {hostname}} </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> { {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">templates</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hosts.j2</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> copy hosts.j2 to allhost</span></span>
<span class="line"><span style="color:#E1E4E8;">     template</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">templates</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hosts.j2 dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hosts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostall</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  roles</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> roles</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> add localhost</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell echo </span><span style="color:#032F62;">&quot;127.0.0.1   localhost&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> { {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">templates</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hosts.j2</span></span>
<span class="line"><span style="color:#24292E;">     run_once</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> set_fact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> ipaddress</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {hostvars[inventory_hostname].ansible_default_ipv4.address}}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> set_fact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostname</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {hostvars[inventory_hostname].ansible_facts.hostname}}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> add host record</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell echo { {ipaddress}} { {hostname}} </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> { {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">templates</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hosts.j2</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> copy hosts.j2 to allhost</span></span>
<span class="line"><span style="color:#24292E;">     template</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">templates</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hosts.j2 dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hosts</span></span></code></pre></div><p>在 playbook 中，使用了角色中的变量，所以要了解 ansible 的默认目录结构，如下图所示：</p>`,38),E=s(`<p>我们的程序安装在 /etc/ansible 命令下，在这个目录中有三个子目录，分别是 files、templates 和 roles。<strong>files 目录</strong> 主要存放一些要拷贝的远程主机的程序文件；<strong>templates 目录</strong>下存放了一些配置好的模板文件，该模板文件会统一拷贝到远程主机中；roles目录下创建了一个 main.yml 文件，用来定义角色变量，main.yml 中变量定义方式如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">server1_hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">229</span></span>
<span class="line"><span style="color:#E1E4E8;">server2_hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">230</span></span>
<span class="line"><span style="color:#E1E4E8;">server3_hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">231</span></span>
<span class="line"><span style="color:#E1E4E8;">AnsibleDir</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ansible</span></span>
<span class="line"><span style="color:#E1E4E8;">BigdataDir</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">opt</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bigdata</span></span>
<span class="line"><span style="color:#E1E4E8;">hadoopconfigfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">hadoop</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">server1_hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">229</span></span>
<span class="line"><span style="color:#24292E;">server2_hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">230</span></span>
<span class="line"><span style="color:#24292E;">server3_hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">231</span></span>
<span class="line"><span style="color:#24292E;">AnsibleDir</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ansible</span></span>
<span class="line"><span style="color:#24292E;">BigdataDir</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">opt</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bigdata</span></span>
<span class="line"><span style="color:#24292E;">hadoopconfigfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">hadoop</span></span></code></pre></div><p>其中，每行内容中冒号前面的是变量名，后面的是变量的值，定义变量后，就可以在playbook中进行引用了。</p><p>最后，再回到上面这个 playbook 文件中，由于要使用角色变量，所以引入了 roles 关键字。接下来，在 tasks 任务中，首先使用了 local_action 模块，在管理机上生成了一个模板文件 hosts.j2，注意这里面的变量 { {AnsibleDir}} 就是在 main.yml 中定义好的，run_once 表示本地 shell 仅仅执行一次；接着通过 set_fact 定义了两个变量 ipaddress 和 hostname，这两个变量都从 ansible 内置变量中获取具体的值，然后将获取到的 ipaddress 和 hostname 值写入管理机上的 hosts.j2 文件中；最后一个操作步骤是通过 template 模块，将 hosts.j2 模板文件拷贝到远程主机的 /etc/ 目录下并重命名为 hosts 文件。</p><p>将此脚本放到 /etc/ansible 目录下，并命名为 hosts.yml，然后执行如下命令：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@</span><span style="color:#F97583;">server239</span><span style="color:#E1E4E8;"> ansible]# ansible</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">playbook  hosts.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@</span><span style="color:#D73A49;">server239</span><span style="color:#24292E;"> ansible]# ansible</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">playbook  hosts.yml</span></span></code></pre></div><p>如果执行成功，会有绿色、浅黄色输出提示；如果执行失败，可以看红色输出内容，判断检查问题。</p><h4 id="_2-主机自动建立-ssh-信任" tabindex="-1">2. 主机自动建立 SSH 信任 <a class="header-anchor" href="#_2-主机自动建立-ssh-信任" aria-label="Permalink to &quot;2. 主机自动建立 SSH 信任&quot;">​</a></h4><p>大数据环境下，为了安装、配置和维护的方便，一般会设置管理机（安装 Ansible 的机器）和每个集群节点之间的无密码登录（单向信任），而无密码登录最简单的方式是通过设置 SSH 公私钥认证机制。</p><p>下面 playbook 脚本可以完成管理机到远程主机组 hostall 的无密码登录，脚本内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostall</span></span>
<span class="line"><span style="color:#E1E4E8;">  gather_facts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> no</span></span>
<span class="line"><span style="color:#E1E4E8;">  roles</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> roles</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> close ssh yes</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">no check</span></span>
<span class="line"><span style="color:#E1E4E8;">     lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> path</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ssh</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ssh_config regexp</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;(.*)StrictHostKeyChecking(.*)&#39;</span><span style="color:#E1E4E8;"> line</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;StrictHostKeyChecking no&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> delete </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh</span><span style="color:#F97583;">/</span></span>
<span class="line"><span style="color:#E1E4E8;">     file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> path</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">absent</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> create .ssh directory</span></span>
<span class="line"><span style="color:#E1E4E8;">     file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0600</span><span style="color:#E1E4E8;"> state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">directory</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> generating local </span><span style="color:#F97583;">public/private</span><span style="color:#E1E4E8;"> rsa key pair</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell ssh</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">keygen </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">t rsa </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">b </span><span style="color:#79B8FF;">2048</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">N </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">f </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">id_rsa</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> view id_rsa.pub</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell cat </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">id_rsa.pub</span></span>
<span class="line"><span style="color:#E1E4E8;">     register</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> sshinfo</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> set_fact</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> sshpub</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {sshinfo.stdout}}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> add sshkey</span></span>
<span class="line"><span style="color:#E1E4E8;">     local_action</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> shell echo { {sshpub}} </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> { {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">templates</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">authorized_keys.j2</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> copy authorized_keys.j2 to all hosts</span></span>
<span class="line"><span style="color:#E1E4E8;">     template</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">templates</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">authorized_keys.j2 dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">root</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">.ssh</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">authorized_keys mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0600</span></span>
<span class="line"><span style="color:#E1E4E8;">     tags</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> copy sshkey</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostall</span></span>
<span class="line"><span style="color:#24292E;">  gather_facts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> no</span></span>
<span class="line"><span style="color:#24292E;">  roles</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> roles</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> close ssh yes</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">no check</span></span>
<span class="line"><span style="color:#24292E;">     lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> path</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ssh</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ssh_config regexp</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;(.*)StrictHostKeyChecking(.*)&#39;</span><span style="color:#24292E;"> line</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;StrictHostKeyChecking no&quot;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> delete </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh</span><span style="color:#D73A49;">/</span></span>
<span class="line"><span style="color:#24292E;">     file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> path</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh</span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">absent</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> create .ssh directory</span></span>
<span class="line"><span style="color:#24292E;">     file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0600</span><span style="color:#24292E;"> state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">directory</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> generating local </span><span style="color:#D73A49;">public/private</span><span style="color:#24292E;"> rsa key pair</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell ssh</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">keygen </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">t rsa </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">b </span><span style="color:#005CC5;">2048</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">N </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">f </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">id_rsa</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> view id_rsa.pub</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell cat </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">id_rsa.pub</span></span>
<span class="line"><span style="color:#24292E;">     register</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> sshinfo</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> set_fact</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> sshpub</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {sshinfo.stdout}}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> add sshkey</span></span>
<span class="line"><span style="color:#24292E;">     local_action</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> shell echo { {sshpub}} </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> { {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">templates</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">authorized_keys.j2</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> copy authorized_keys.j2 to all hosts</span></span>
<span class="line"><span style="color:#24292E;">     template</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">templates</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">authorized_keys.j2 dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">root</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">.ssh</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">authorized_keys mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0600</span></span>
<span class="line"><span style="color:#24292E;">     tags</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> copy sshkey</span></span></code></pre></div><p>这个 playbook 稍微复杂一些，它仍然用到了角色变量，所以此脚本要放在 /etc/ansible 目录下，脚本一开始通过 lineinfile 模块对远程主机上的 sshd 配置文件 ssh_config 进行文件内容替换，这个替换是关闭 SSH 第一次登录时给出的&quot;yes/no&quot;提示。</p><p>接着在远程主机上删除 /root/.ssh 目录，并重新创建此目录，该操作的目的是确保远程主机 /root/.ssh 目录是干净的、权限正确。</p><p>然后通过 local_action 模块在管理机上生成一对公私钥，同时将生成的公钥文件内容作为变量 sshinfo 的值，并通过 set_fact 模块重新定义一个变量 sshpub，此变量引用 sshinfo 变量的 stdout 输出，也就是最终的公钥值，紧接着，将变量 sshpub 的内容写入管理机 authorized_keys.j2 模板文件中。</p><p>最后，使用 template 模块将 authorized_keys.j2 模板文件拷贝到每个远程主机的 /root/.ssh 目录下，并重命名为 authorized_keys，同时给文件授于属主读、写权限。</p><p>将此脚本放到 /etc/ansible 目录下，并命名为 ssh.yml，然后执行如下命令：</p><pre><code>[root@server239 ansible]# ansible-playbook  ssh.yml
</code></pre><h4 id="_3-自动化安装-jdk" tabindex="-1">3. 自动化安装 JDK <a class="header-anchor" href="#_3-自动化安装-jdk" aria-label="Permalink to &quot;3. 自动化安装 JDK&quot;">​</a></h4><p>自动化安装 JDK 是大数据运维中最常见的一个场景，一般下载二进制版本解压即可使用，所以安装 JDK 的过程是把下载好的 JDK 程序拷贝到远程主机的过程，安装完成后，还要添加 JAVA_HOME 到系统环境变量中，以让系统识别安装的 JDK。</p><p>下面的 playbook 文件是自动化安装 JDK 的整个过程，内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hosts</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> hostall</span></span>
<span class="line"><span style="color:#E1E4E8;">  remote_user</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> root</span></span>
<span class="line"><span style="color:#E1E4E8;">  roles</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> roles</span></span>
<span class="line"><span style="color:#E1E4E8;">  tasks</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> mkdir jdk directory</span></span>
<span class="line"><span style="color:#E1E4E8;">     file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> path</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {BigdataDir}} state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">directory mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0755</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> copy and unzip jdk</span></span>
<span class="line"><span style="color:#E1E4E8;">     unarchive</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> src</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {AnsibleDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">roles</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">files</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">jdk.tar.gz dest</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {BigdataDir}}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> set env</span></span>
<span class="line"><span style="color:#E1E4E8;">     lineinfile</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">profile line</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;{ {item.value}}&quot;</span><span style="color:#E1E4E8;"> state</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">present</span></span>
<span class="line"><span style="color:#E1E4E8;">     with_items</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> {value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;export JAVA_HOME={ {BigdataDir}}/jdk&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> {value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;export PATH=$JAVA_HOME/bin:$PATH&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> chmod bin</span></span>
<span class="line"><span style="color:#E1E4E8;">     file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> dest</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{ {BigdataDir}}</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">jdk</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bin mode</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0755</span><span style="color:#E1E4E8;"> recurse</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">yes</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> enforce env</span></span>
<span class="line"><span style="color:#E1E4E8;">     shell</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> source </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">etc</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">profile</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hosts</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> hostall</span></span>
<span class="line"><span style="color:#24292E;">  remote_user</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> root</span></span>
<span class="line"><span style="color:#24292E;">  roles</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> roles</span></span>
<span class="line"><span style="color:#24292E;">  tasks</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> mkdir jdk directory</span></span>
<span class="line"><span style="color:#24292E;">     file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> path</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {BigdataDir}} state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">directory mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0755</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> copy and unzip jdk</span></span>
<span class="line"><span style="color:#24292E;">     unarchive</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> src</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {AnsibleDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">roles</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">files</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">jdk.tar.gz dest</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {BigdataDir}}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> set env</span></span>
<span class="line"><span style="color:#24292E;">     lineinfile</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">profile line</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;{ {item.value}}&quot;</span><span style="color:#24292E;"> state</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">present</span></span>
<span class="line"><span style="color:#24292E;">     with_items</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> {value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;export JAVA_HOME={ {BigdataDir}}/jdk&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> {value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;export PATH=$JAVA_HOME/bin:$PATH&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> chmod bin</span></span>
<span class="line"><span style="color:#24292E;">     file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> dest</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {BigdataDir}}</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">jdk</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bin mode</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0755</span><span style="color:#24292E;"> recurse</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">yes</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> enforce env</span></span>
<span class="line"><span style="color:#24292E;">     shell</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> source </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">etc</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">profile</span></span></code></pre></div><p>此脚本中的 BigdataDir、AnsibleDir 都是角色变量，前面已经定义过具体的路径了，其中，jdk.tar.gz 位于管理机上，脚本最后通过 item.value 变量将 JDK 环境变量写入到了 /etc/profile 文件的最后，这个变量的定义和引用方式需要注意。</p><p>将此脚本放到 /etc/ansible 目录下，并命名为 jdk.yml，然后执行如下命令：</p><pre><code>[root@server239 ansible]# ansible-playbook  jdk.yml
</code></pre><p>脚本执行成功的话，那么JDK 和环境变量就都配置好了。</p>`,25);function i(F,d,h,u,A,D){const a=o("Image");return p(),e("div",null,[c,n(a,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/08/AC/Ciqc1F67WRuAEbqtAABetHg82Co773.png"}),r,n(a,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image/M00/08/AC/Ciqc1F67WSWAGVLaAACbWUUbNrg931.png"}),y,n(a,{alt:"image1.png",src:"https://s0.lgstatic.com/i/image/M00/01/FD/CgqCHl6v6MuAJ6B1AAB4Cvt_Ll4421.png"}),E])}const b=l(t,[["render",i]]);export{m as __pageData,b as default};
