import{_ as n,j as p,o as l,g as o,k as e,Q as s}from"./chunks/framework.b3d8e22e.js";const h=JSON.parse('{"title":"调度算法 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1823) 第19讲：如何实现行程派发与调度算法.md","filePath":"posts/backEnd/云原生微服务架构实战精讲_文档/(1823) 第19讲：如何实现行程派发与调度算法.md","lastUpdated":1696417798000}'),t={name:"posts/backEnd/云原生微服务架构实战精讲_文档/(1823) 第19讲：如何实现行程派发与调度算法.md"},c=s(`<p>第 18 课时介绍了司机模拟器如何发布位置更新事件，以及行程派发服务如何处理这些事件，并维护所有可用的司机信息，本课时紧接着第 18 课时的内容，主要介绍行程派发服务的实现。行程派发是示例应用的核心领域，因此需要进行重点介绍。本课时只对代码实现中的重要部分进行介绍，完整的实现请参考示例应用在 GitHub 上的源代码。</p><h4 id="调度算法" tabindex="-1">调度算法 <a class="header-anchor" href="#调度算法" aria-label="Permalink to &quot;调度算法&quot;">​</a></h4><p>当乘客发出创建行程的请求之后，该创建请求首先需要被验证，行程验证由专门的服务来完成。在第 21 课时介绍 Saga 模式的实现时，会具体介绍行程验证服务。当行程通过验证之后，行程会处于已确认状态，与此同时，行程派发服务会开始执行该行程的调度任务。</p><p>派发行程的操作由 DispatchService 类的 dispatchTrip 方法来完成。当行程派发服务接收到表示行程已经被确认的 TripConfirmedEvent 事件之后，dispatchTrip 方法就会被调用。下面的代码给出了 dispatchTrip 方法的实现，具体的派发过程分成下面 3 个步骤。</p><ol><li>以行程的起始位置为中心，找到所有处于可用状态的司机，这些是派发行程的候选。这一步调用 findAvailableDrivers 方法来完成，实际调用的是 DriverLocationService 类的 findAvailableDrivers 方法。在第 18 课时已经介绍了这个方法，它通过 Redis 来查找特定范围之内的可用的司机。</li><li>基于行程信息和可用司机的列表来创建表示行程派发的领域类 Dispatch 的对象，保存 Dispatch 对象并发布相关的事件，这是事务性消息模式的应用。</li><li>如果存在可用的司机，则调用 TripAcceptanceService 类的 startTripAcceptanceCheck 方法来检查是否有司机接受行程。</li></ol><p>由于第 1 个步骤已经在第 18 课时进行了介绍，下面会具体对第 2 个和第 3 个步骤进行介绍。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">dispatchTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tripId, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripDetails tripDetails) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Set&lt;</span><span style="color:#F97583;">AvailableDriver</span><span style="color:#E1E4E8;">&gt; availableDrivers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">findAvailableDrivers</span><span style="color:#E1E4E8;">(tripDetails);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">saveAndPublishEvents</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      Dispatch.</span><span style="color:#B392F0;">createDispatch</span><span style="color:#E1E4E8;">(tripId, tripDetails, availableDrivers));</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">availableDrivers.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripAcceptanceService.</span><span style="color:#B392F0;">startTripAcceptanceCheck</span><span style="color:#E1E4E8;">(tripId, tripDetails,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.acceptanceCheckInterval,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">selectTripAcceptance, </span><span style="color:#79B8FF;">this</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">notifyTripDispatchFailed);</span></span>
<span class="line"><span style="color:#E1E4E8;">    log.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Dispatch trip {} to drivers {}&quot;</span><span style="color:#E1E4E8;">, tripId, availableDrivers);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">dispatchTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tripId, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripDetails tripDetails) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Set&lt;</span><span style="color:#D73A49;">AvailableDriver</span><span style="color:#24292E;">&gt; availableDrivers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">findAvailableDrivers</span><span style="color:#24292E;">(tripDetails);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">saveAndPublishEvents</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      Dispatch.</span><span style="color:#6F42C1;">createDispatch</span><span style="color:#24292E;">(tripId, tripDetails, availableDrivers));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">availableDrivers.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripAcceptanceService.</span><span style="color:#6F42C1;">startTripAcceptanceCheck</span><span style="color:#24292E;">(tripId, tripDetails,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.acceptanceCheckInterval,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">selectTripAcceptance, </span><span style="color:#005CC5;">this</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">notifyTripDispatchFailed);</span></span>
<span class="line"><span style="color:#24292E;">    log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Dispatch trip {} to drivers {}&quot;</span><span style="color:#24292E;">, tripId, availableDrivers);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="行程派发领域对象" tabindex="-1">行程派发领域对象 <a class="header-anchor" href="#行程派发领域对象" aria-label="Permalink to &quot;行程派发领域对象&quot;">​</a></h4><p>每个行程的派发动作都有自己的生命周期，因此需要定义相关的实体类 Dispatch，并保存在数据库中。行程派发是所在聚合的根实体，每个行程被派发之后，查找到的可用司机会被邀请来接受行程。对行程的接受动作也是有生命周期的，同样以实体的形式来定义，即 TripAcceptance，属于聚合的一般实体。行程派发实体和行程接受实体存在一对多的关系。下图是这两个实体之间关系的 ER 图。</p>`,9),r=s(`<p>在创建行程派发对象时，需要提供的是行程信息和可用司机的列表。Dispatch 类的静态方法 createDispatch 用来创建 Dispatch 对象和需要发布的事件对象，如下面的代码所示。在创建出 Dispatch 对象之后，对于每一个表示可用的司机的 AvailableDriver 对象，创建出一个与之对应的 TripAcceptance 对象，用来追踪每个司机接受行程的状态。这些 TripAcceptance 对象与 Dispatch 对象关联起来。</p><p>对于发布的事件对象，如果可用司机的列表为空，则直接把 Dispatch 对象设置为失败状态，发布的事件为 TripDispatchFailedEvent 对象；否则，发布的事件为 TripDispatchedEvent 对象。Dispatch 对象和事件对象以 ResultWithDomainEvents 的形式返回。DispatchService 的 saveAndPublishEvents 方法用来保存 Dispatch 对象并发布事件。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> ResultWithDomainEvents</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Dispatch, DispatchDomainEvent</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createDispatch</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tripId,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripDetails tripDetails,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Set</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">AvailableDriver</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> drivers) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> PositionVO startPos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tripDetails.</span><span style="color:#B392F0;">getStartPos</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Dispatch dispatch </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Dispatch</span><span style="color:#E1E4E8;">(tripId, startPos.</span><span style="color:#B392F0;">getLng</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      startPos.</span><span style="color:#B392F0;">getLat</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">TripAcceptance</span><span style="color:#E1E4E8;">&gt; tripAcceptances </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> drivers.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(driver </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripAcceptance</span><span style="color:#E1E4E8;">(driver.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">          driver.</span><span style="color:#B392F0;">getPosLng</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">          driver.</span><span style="color:#B392F0;">getPosLat</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  dispatch.</span><span style="color:#B392F0;">setTripAcceptances</span><span style="color:#E1E4E8;">(tripAcceptances);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> DispatchDomainEvent event;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (drivers.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    dispatch.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(DispatchState.FAILED);</span></span>
<span class="line"><span style="color:#E1E4E8;">    dispatch.</span><span style="color:#B392F0;">setFailedReason</span><span style="color:#E1E4E8;">(TripDispatchFailedReason.NO_DRIVERS_AVAILABLE);</span></span>
<span class="line"><span style="color:#E1E4E8;">    event </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripDispatchFailedEvent</span><span style="color:#E1E4E8;">(tripId,</span></span>
<span class="line"><span style="color:#E1E4E8;">        TripDispatchFailedReason.NO_DRIVERS_AVAILABLE);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Set&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; driversId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> drivers.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(AvailableDriver</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getDriverId)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toSet</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    event </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripDispatchedEvent</span><span style="color:#E1E4E8;">(tripId, tripDetails, driversId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ResultWithDomainEvents&lt;&gt;(dispatch, event);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> ResultWithDomainEvents</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Dispatch, DispatchDomainEvent</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createDispatch</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tripId,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripDetails tripDetails,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Set</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">AvailableDriver</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> drivers) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> PositionVO startPos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tripDetails.</span><span style="color:#6F42C1;">getStartPos</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Dispatch dispatch </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Dispatch</span><span style="color:#24292E;">(tripId, startPos.</span><span style="color:#6F42C1;">getLng</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">      startPos.</span><span style="color:#6F42C1;">getLat</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">TripAcceptance</span><span style="color:#24292E;">&gt; tripAcceptances </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> drivers.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(driver </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripAcceptance</span><span style="color:#24292E;">(driver.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">          driver.</span><span style="color:#6F42C1;">getPosLng</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">          driver.</span><span style="color:#6F42C1;">getPosLat</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  dispatch.</span><span style="color:#6F42C1;">setTripAcceptances</span><span style="color:#24292E;">(tripAcceptances);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> DispatchDomainEvent event;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (drivers.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">    dispatch.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(DispatchState.FAILED);</span></span>
<span class="line"><span style="color:#24292E;">    dispatch.</span><span style="color:#6F42C1;">setFailedReason</span><span style="color:#24292E;">(TripDispatchFailedReason.NO_DRIVERS_AVAILABLE);</span></span>
<span class="line"><span style="color:#24292E;">    event </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripDispatchFailedEvent</span><span style="color:#24292E;">(tripId,</span></span>
<span class="line"><span style="color:#24292E;">        TripDispatchFailedReason.NO_DRIVERS_AVAILABLE);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; driversId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> drivers.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(AvailableDriver</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getDriverId)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toSet</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    event </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripDispatchedEvent</span><span style="color:#24292E;">(tripId, tripDetails, driversId);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ResultWithDomainEvents&lt;&gt;(dispatch, event);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="接受行程" tabindex="-1">接受行程 <a class="header-anchor" href="#接受行程" aria-label="Permalink to &quot;接受行程&quot;">​</a></h4><p>在行程派发之后，需要通知司机来接受行程。对于乘客 App 说，可以使用消息推送来发送通知；对于 Web 应用来说，可以使用 WebSocket 来发送通知。只需要添加 TripDispatchedEvent 事件的处理器，就可以使用不同的方式来发送通知。</p><p>当司机接收到通知之后，可以选择是否接受行程。在一定的时间之内，所有收到通知的司机都可以选择接受行程。在初始的等待时间过后，如果有司机接受行程，那么会从接受行程的司机中，选择一个来作为行程的接受者，而其他的司机则会收到通知，说明行程已经被其他司机所接受。如果没有司机接受行程，那么会再等待一段时间之后，再进行检查；如果在给定的期限之后，仍然没有司机接受行程，那么行程派发失败。</p><p>司机接受行程的请求由行程管理服务提供的 REST API 来负责处理。REST 控制器使用 TripService 处理请求，如下面的代码所示。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">PostMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;{id}/accept&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">acceptTrip</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">PathVariable</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">) String id,</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">RequestBody</span><span style="color:#E1E4E8;"> AcceptTripRequest request) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  tripService</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">driverAcceptTrip</span><span style="color:#E1E4E8;">(id, request.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">(), request.</span><span style="color:#B392F0;">getPosLng</span><span style="color:#E1E4E8;">(), request.</span><span style="color:#B392F0;">getPosLat</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">PostMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;{id}/accept&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">acceptTrip</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">PathVariable</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">) String id,</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">RequestBody</span><span style="color:#24292E;"> AcceptTripRequest request) {</span></span>
<span class="line"><span style="color:#24292E;">  tripService</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">driverAcceptTrip</span><span style="color:#24292E;">(id, request.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">(), request.</span><span style="color:#6F42C1;">getPosLng</span><span style="color:#24292E;">(), request.</span><span style="color:#6F42C1;">getPosLat</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>下面的代码给出了 TripService 类的 driverAcceptTrip 方法的实现。在实现中，一个 DriverAcceptTripEvent 事件会被发布。withTrip 方法的作用是根据行程的标识符找到对应的 Trip 对象，并执行操作。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">driverAcceptTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tripId, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String driverId,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BigDecimal posLng,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BigDecimal posLat) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">withTrip</span><span style="color:#E1E4E8;">(tripId, trip </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.eventPublisher.</span><span style="color:#B392F0;">publish</span><span style="color:#E1E4E8;">(trip,</span></span>
<span class="line"><span style="color:#E1E4E8;">      ImmutableList</span></span>
<span class="line"><span style="color:#E1E4E8;">          .</span><span style="color:#B392F0;">of</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DriverAcceptTripEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DriverAcceptTripDetails</span><span style="color:#E1E4E8;">(driverId, posLng, posLat)))));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">driverAcceptTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tripId, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String driverId,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BigDecimal posLng,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BigDecimal posLat) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">withTrip</span><span style="color:#24292E;">(tripId, trip </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.eventPublisher.</span><span style="color:#6F42C1;">publish</span><span style="color:#24292E;">(trip,</span></span>
<span class="line"><span style="color:#24292E;">      ImmutableList</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DriverAcceptTripEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DriverAcceptTripDetails</span><span style="color:#24292E;">(driverId, posLng, posLat)))));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>DriverAcceptTripEvent 事件的处理器调用 DispatchService 类的 submitTripAcceptance 方法，如下面的代码所示。其中 withCurrentDispatch 方法的作用是根据行程的标识符，找到该行程当前的 Dispatch 对象，再对该 Dispatch 对象进行操作。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">submitTripAcceptance</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tripId,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> DriverAcceptTripDetails details) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  log.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Driver {} wants to accept trip {}&quot;</span><span style="color:#E1E4E8;">, details.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">      tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">withCurrentDispatch</span><span style="color:#E1E4E8;">(tripId, dispatch </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.dispatchRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(dispatch.</span><span style="color:#B392F0;">submitTripAcceptance</span><span style="color:#E1E4E8;">(details));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripAcceptanceService.</span><span style="color:#B392F0;">addDriverToAcceptTrip</span><span style="color:#E1E4E8;">(tripId, details);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">submitTripAcceptance</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tripId,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> DriverAcceptTripDetails details) {</span></span>
<span class="line"><span style="color:#24292E;">  log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Driver {} wants to accept trip {}&quot;</span><span style="color:#24292E;">, details.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">      tripId);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">withCurrentDispatch</span><span style="color:#24292E;">(tripId, dispatch </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.dispatchRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(dispatch.</span><span style="color:#6F42C1;">submitTripAcceptance</span><span style="color:#24292E;">(details));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripAcceptanceService.</span><span style="color:#6F42C1;">addDriverToAcceptTrip</span><span style="color:#24292E;">(tripId, details);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在下面的代码中，Dispatch 类的 submitTripAcceptance 方法用来对当前 Dispatch 对象进行修改，把司机对应的 TripAcceptance 对象的状态改为已提交。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Dispatch </span><span style="color:#B392F0;">submitTripAcceptance</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> DriverAcceptTripDetails acceptTripDetails) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  Stream.</span><span style="color:#B392F0;">ofAll</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tripAcceptances)</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(tripAcceptance </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Objects</span></span>
<span class="line"><span style="color:#E1E4E8;">          .</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(tripAcceptance.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">              acceptTripDetails.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">toJavaOptional</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">ifPresent</span><span style="color:#E1E4E8;">(tripAcceptance </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        tripAcceptance.</span><span style="color:#B392F0;">setState</span><span style="color:#E1E4E8;">(TripAcceptanceState.SUBMITTED);</span></span>
<span class="line"><span style="color:#E1E4E8;">        tripAcceptance.</span><span style="color:#B392F0;">setCurrentPosLng</span><span style="color:#E1E4E8;">(acceptTripDetails.</span><span style="color:#B392F0;">getPosLng</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        tripAcceptance.</span><span style="color:#B392F0;">setCurrentPosLat</span><span style="color:#E1E4E8;">(acceptTripDetails.</span><span style="color:#B392F0;">getPosLat</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Dispatch </span><span style="color:#6F42C1;">submitTripAcceptance</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> DriverAcceptTripDetails acceptTripDetails) {</span></span>
<span class="line"><span style="color:#24292E;">  Stream.</span><span style="color:#6F42C1;">ofAll</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tripAcceptances)</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(tripAcceptance </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Objects</span></span>
<span class="line"><span style="color:#24292E;">          .</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(tripAcceptance.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">              acceptTripDetails.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">toJavaOptional</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">ifPresent</span><span style="color:#24292E;">(tripAcceptance </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        tripAcceptance.</span><span style="color:#6F42C1;">setState</span><span style="color:#24292E;">(TripAcceptanceState.SUBMITTED);</span></span>
<span class="line"><span style="color:#24292E;">        tripAcceptance.</span><span style="color:#6F42C1;">setCurrentPosLng</span><span style="color:#24292E;">(acceptTripDetails.</span><span style="color:#6F42C1;">getPosLng</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        tripAcceptance.</span><span style="color:#6F42C1;">setCurrentPosLat</span><span style="color:#24292E;">(acceptTripDetails.</span><span style="color:#6F42C1;">getPosLat</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>TripAcceptanceService 类负责找到合适的司机来接受行程，如下面的代码所示。在 startTripAcceptanceCheck 方法中，把行程的起始地理位置添加到 Redis 中，然后启动一个定时任务来检查行程的接受状态。该定时任务由 CheckTripAcceptanceTask 类来描述。在每次执行任务时，调用 findDriverToAcceptTrip 方法来从当前已接受行程的司机中，找到距离行程的起始位置最近的司机，并选中该司机来接受行程。</p><p>如果当前没有司机接受行程，那么会启动一个新的执行同样操作的任务，并在给定的时间间隔之后运行。对于一个行程，检查任务最多运行 3 次，如果 3 次之后仍然没有司机接受行程，会调用指定的错误回调函数 failureCallback；如果有司机接受行程，则会调用指定的成功回调函数 successCallback。当有司机接受行程时，addDriverToAcceptTrip 方法会被调用来把司机的位置信息添加到 Redis 中，可以在下一次定时任务中被查询到。addDriverToAcceptTrip 方法会被 DispatchService 类的 submitTripAcceptance 方法调用。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TripAcceptanceService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  RedisTemplate&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; redisTemplate;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  TaskScheduler taskScheduler;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Distance searchRadius </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Distance</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      DistanceUnit.KILOMETERS);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String passenger </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__passenger__&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> acceptanceCheckMaxTimes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">startTripAcceptanceCheck</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TripDetails </span><span style="color:#FFAB70;">tripDetails</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Duration </span><span style="color:#FFAB70;">interval</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BiConsumer&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">successCallback</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BiConsumer&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">TripDispatchFailedReason</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">failureCallback</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.redisTemplate.</span><span style="color:#B392F0;">opsForGeo</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">keyForTripAcceptance</span><span style="color:#E1E4E8;">(tripId),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Point</span><span style="color:#E1E4E8;">(tripDetails.</span><span style="color:#B392F0;">getStartPos</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getLng</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">doubleValue</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">                tripDetails.</span><span style="color:#B392F0;">getStartPos</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getLat</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">doubleValue</span><span style="color:#E1E4E8;">()),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.passenger);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">scheduleCheckTripAcceptanceTask</span><span style="color:#E1E4E8;">(tripId, interval, successCallback,</span></span>
<span class="line"><span style="color:#E1E4E8;">        failureCallback, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">scheduleCheckTripAcceptanceTask</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Duration </span><span style="color:#FFAB70;">interval</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BiConsumer&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">successCallback</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> BiConsumer&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">TripDispatchFailedReason</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">failureCallback</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">attempt</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.taskScheduler</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">schedule</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CheckTripAcceptanceTask</span><span style="color:#E1E4E8;">(tripId, interval, successCallback,</span></span>
<span class="line"><span style="color:#E1E4E8;">                failureCallback,</span></span>
<span class="line"><span style="color:#E1E4E8;">                attempt),</span></span>
<span class="line"><span style="color:#E1E4E8;">            Instant.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">plusMillis</span><span style="color:#E1E4E8;">(interval.</span><span style="color:#B392F0;">toMillis</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addDriverToAcceptTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> DriverAcceptTripDetails </span><span style="color:#FFAB70;">details</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.redisTemplate.</span><span style="color:#B392F0;">opsForGeo</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">keyForTripAcceptance</span><span style="color:#E1E4E8;">(tripId),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Point</span><span style="color:#E1E4E8;">(details.</span><span style="color:#B392F0;">getPosLng</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">doubleValue</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">                details.</span><span style="color:#B392F0;">getPosLat</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">doubleValue</span><span style="color:#E1E4E8;">()), details.</span><span style="color:#B392F0;">getDriverId</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Optional&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">findDriverToAcceptTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> GeoResults&lt;GeoLocation&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt;&gt; results </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.redisTemplate</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">opsForGeo</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">radius</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">keyForTripAcceptance</span><span style="color:#E1E4E8;">(tripId), </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.passenger,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.searchRadius,</span></span>
<span class="line"><span style="color:#E1E4E8;">            GeoRadiusCommandArgs.</span><span style="color:#B392F0;">newGeoRadiusArgs</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">sortAscending</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> results.</span><span style="color:#B392F0;">getContent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(result </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">getContent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(name </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(name, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.passenger))</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">findFirst</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">keyForTripAcceptance</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">tripId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;accept_trip_%s&quot;</span><span style="color:#E1E4E8;">, tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TripAcceptanceService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  RedisTemplate&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; redisTemplate;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  TaskScheduler taskScheduler;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Distance searchRadius </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Distance</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      DistanceUnit.KILOMETERS);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String passenger </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__passenger__&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> acceptanceCheckMaxTimes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">startTripAcceptanceCheck</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TripDetails </span><span style="color:#E36209;">tripDetails</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Duration </span><span style="color:#E36209;">interval</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BiConsumer&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">successCallback</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BiConsumer&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">TripDispatchFailedReason</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">failureCallback</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.redisTemplate.</span><span style="color:#6F42C1;">opsForGeo</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">keyForTripAcceptance</span><span style="color:#24292E;">(tripId),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Point</span><span style="color:#24292E;">(tripDetails.</span><span style="color:#6F42C1;">getStartPos</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getLng</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                tripDetails.</span><span style="color:#6F42C1;">getStartPos</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getLat</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">()),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.passenger);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">scheduleCheckTripAcceptanceTask</span><span style="color:#24292E;">(tripId, interval, successCallback,</span></span>
<span class="line"><span style="color:#24292E;">        failureCallback, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scheduleCheckTripAcceptanceTask</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Duration </span><span style="color:#E36209;">interval</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BiConsumer&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">successCallback</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> BiConsumer&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">TripDispatchFailedReason</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">failureCallback</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">attempt</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.taskScheduler</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">schedule</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CheckTripAcceptanceTask</span><span style="color:#24292E;">(tripId, interval, successCallback,</span></span>
<span class="line"><span style="color:#24292E;">                failureCallback,</span></span>
<span class="line"><span style="color:#24292E;">                attempt),</span></span>
<span class="line"><span style="color:#24292E;">            Instant.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">plusMillis</span><span style="color:#24292E;">(interval.</span><span style="color:#6F42C1;">toMillis</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addDriverToAcceptTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> DriverAcceptTripDetails </span><span style="color:#E36209;">details</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.redisTemplate.</span><span style="color:#6F42C1;">opsForGeo</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">keyForTripAcceptance</span><span style="color:#24292E;">(tripId),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Point</span><span style="color:#24292E;">(details.</span><span style="color:#6F42C1;">getPosLng</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                details.</span><span style="color:#6F42C1;">getPosLat</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">doubleValue</span><span style="color:#24292E;">()), details.</span><span style="color:#6F42C1;">getDriverId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Optional&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">findDriverToAcceptTrip</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> GeoResults&lt;GeoLocation&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt;&gt; results </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.redisTemplate</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">opsForGeo</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">radius</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">keyForTripAcceptance</span><span style="color:#24292E;">(tripId), </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.passenger,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.searchRadius,</span></span>
<span class="line"><span style="color:#24292E;">            GeoRadiusCommandArgs.</span><span style="color:#6F42C1;">newGeoRadiusArgs</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">sortAscending</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> results.</span><span style="color:#6F42C1;">getContent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(result </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">getContent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(name </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(name, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.passenger))</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">findFirst</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">keyForTripAcceptance</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">tripId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;accept_trip_%s&quot;</span><span style="color:#24292E;">, tripId);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>当有司机被选中接受行程时，DispatchService 的 selectTripAcceptance 方法会被调用，如下面的代码所示。这个方法会对 Dispatch 对象及其关联的 TripAcceptance 对象进行修改，并发布相应的事件。只有被选中的司机所对应的 TripAcceptance 对象的状态会变为已选中，其他的 TripAcceptance 对象的状态会变为已拒绝，与之相关的事件也会被发布。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">selectTripAcceptance</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tripId, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String driverId) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  log.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Select driver {} to accept trip {}&quot;</span><span style="color:#E1E4E8;">, driverId, tripId);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">withCurrentDispatch</span><span style="color:#E1E4E8;">(tripId, dispatch </span><span style="color:#F97583;">-&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">saveAndPublishEvents</span><span style="color:#E1E4E8;">(dispatch.</span><span style="color:#B392F0;">selectTripAcceptance</span><span style="color:#E1E4E8;">(driverId)));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">selectTripAcceptance</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tripId, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String driverId) {</span></span>
<span class="line"><span style="color:#24292E;">  log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Select driver {} to accept trip {}&quot;</span><span style="color:#24292E;">, driverId, tripId);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">withCurrentDispatch</span><span style="color:#24292E;">(tripId, dispatch </span><span style="color:#D73A49;">-&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">saveAndPublishEvents</span><span style="color:#24292E;">(dispatch.</span><span style="color:#6F42C1;">selectTripAcceptance</span><span style="color:#24292E;">(driverId)));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="事件处理配置" tabindex="-1">事件处理配置 <a class="header-anchor" href="#事件处理配置" aria-label="Permalink to &quot;事件处理配置&quot;">​</a></h4><p>下面的代码是 Eventuate Tram 框架使用的领域事件处理相关的配置，产生事件的领域对象是 Trip。创建的 DomainEventHandlers 对象对 Trip 对象产生的 TripConfirmedEvent 和 DriverAcceptTripEvent 两种事件进行处理。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">public </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DispatchServiceEventConsumer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  DispatchService </span><span style="color:#FFAB70;">dispatchService</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> final Logger </span><span style="color:#FFAB70;">LOGGER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LoggerFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">      .</span><span style="color:#B392F0;">getLogger</span><span style="color:#E1E4E8;">(DispatchServiceEventConsumer.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DomainEventHandlers </span><span style="color:#B392F0;">domainEventHandlers</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">forAggregateType</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(TripConfirmedEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onTripConfirmed)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">onEvent</span><span style="color:#E1E4E8;">(DriverAcceptTripEvent.class, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">::onDriverAcceptTrip)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onTripConfirmed</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">TripConfirmedEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TripDetails tripDetails </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getTripDetails</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      dispatchService.</span><span style="color:#B392F0;">dispatchTrip</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(), tripDetails);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">LOGGER</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Failed to dispatch trip {}&quot;</span><span style="color:#E1E4E8;">, envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(), e);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onDriverAcceptTrip</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">DomainEventEnvelope</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#FFAB70;">DriverAcceptTripEvent</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#FFAB70;">envelope</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    dispatchService.</span><span style="color:#B392F0;">submitTripAcceptance</span><span style="color:#E1E4E8;">(envelope.</span><span style="color:#B392F0;">getAggregateId</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">        envelope.</span><span style="color:#B392F0;">getEvent</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getAcceptTripDetails</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">public </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DispatchServiceEventConsumer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @Autowired</span></span>
<span class="line"><span style="color:#24292E;">  DispatchService </span><span style="color:#E36209;">dispatchService</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> final Logger </span><span style="color:#E36209;">LOGGER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LoggerFactory</span></span>
<span class="line"><span style="color:#24292E;">      .</span><span style="color:#6F42C1;">getLogger</span><span style="color:#24292E;">(DispatchServiceEventConsumer.class);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DomainEventHandlers </span><span style="color:#6F42C1;">domainEventHandlers</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> DomainEventHandlersBuilder</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">forAggregateType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;io.vividcode.happyride.tripservice.domain.Trip&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(TripConfirmedEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onTripConfirmed)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">onEvent</span><span style="color:#24292E;">(DriverAcceptTripEvent.class, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">::onDriverAcceptTrip)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onTripConfirmed</span><span style="color:#24292E;">(</span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">TripConfirmedEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    TripDetails tripDetails </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getTripDetails</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      dispatchService.</span><span style="color:#6F42C1;">dispatchTrip</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(), tripDetails);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception e) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">LOGGER</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Failed to dispatch trip {}&quot;</span><span style="color:#24292E;">, envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(), e);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onDriverAcceptTrip</span><span style="color:#24292E;">(</span><span style="color:#E36209;">DomainEventEnvelope</span><span style="color:#24292E;">&lt;</span><span style="color:#E36209;">DriverAcceptTripEvent</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">envelope</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    dispatchService.</span><span style="color:#6F42C1;">submitTripAcceptance</span><span style="color:#24292E;">(envelope.</span><span style="color:#6F42C1;">getAggregateId</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">        envelope.</span><span style="color:#6F42C1;">getEvent</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getAcceptTripDetails</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="事件驱动的微服务总结" tabindex="-1">事件驱动的微服务总结 <a class="header-anchor" href="#事件驱动的微服务总结" aria-label="Permalink to &quot;事件驱动的微服务总结&quot;">​</a></h4><p>本课时是事件驱动的微服务部分的最后一个课时，我对事件驱动的微服务做一下总结。事件驱动的微服务使用异步传递的消息来代替同步的微服务 API 调用。当一个微服务的领域对象状态发生变化时，会发布相应的事件来通知感兴趣的其他微服务。每个微服务可以添加对感兴趣的领域事件的处理器，来修改自己内部的对象状态，事件的发布和处理使用发布者 - 订阅者（PubSub） 模式。事件的发布者和处理者之间不存在耦合关系。</p><p>值得一提的是，在事件驱动的微服务中，每个微服务所发布和处理的事件，成为了其公开 API 的一部分，需要在设计时与其他微服务进行协调。比如，一个事件的发布者不能随意修改事件的载荷格式，不过事件驱动设计的一个好处是事件的版本更新很容易。比如，当前的某个事件的类型声明是 MyEvent，如果需要改变该事件的载荷格式时，只需要创建一个新的事件类型 MyEvent2 即可。在代码迁移阶段，事件的发布者可以同时发布这两种类型的事件，这样可以保证已有的代码不会出错。等所有的事件处理器都升级到使用新的事件类型之后，只需要停止旧版本的事件发布即可。</p><p>为了保证对象状态的修改和事件的发布之间的一致性，我们使用事务性消息模式，典型的做法是事务性发件箱模式。Eventuate Tram 框架提供了对事务性发件箱模式的支持，示例应用使用这个框架来进行跨服务的消息传递。</p><p>与事务性消息模式不同的是，事件源技术使用事件来描述所有对对象状态的修改。这样可以产生一个完整的对象状态修改的日志记录，形成一个审核日志。通过这些事件，可以查询到对象在任意时刻的状态。</p><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>作为事件驱动的微服务部分的最后一个课时，本课时主要介绍了行程派发服务的一些实现细节，包括其中的领域对象、行程派发算法和接受行程的实现。这些实现细节可以帮助你更好的理解事务性消息模式的使用。最后对事件驱动的微服务做了总结。相信通过部分的学习，你已经掌握或了解了事件驱动的微服务的开发，在今后的工作中可以按照事件驱动的思路来设计和实现微服务。</p>`,29);function E(y,i,F,d,v,D){const a=p("Image");return l(),o("div",null,[c,e(a,{alt:"dispatch-model-er.png",src:"https://s0.lgstatic.com/i/image/M00/0D/E9/CgqCHl7EzmGAYgmfAAAgkXN0SMc457.png"}),r])}const g=n(t,[["render",E]]);export{h as __pageData,g as default};
