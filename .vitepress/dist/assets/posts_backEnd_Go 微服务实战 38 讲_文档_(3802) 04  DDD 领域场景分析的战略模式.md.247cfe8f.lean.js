import{_ as n,j as s,o as r,g as p,k as o,h as D,Q as a,s as t}from"./chunks/framework.b3d8e22e.js";const S=JSON.parse('{"title":"微服务就是\\"小\\"服务吗？ ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3802) 04  DDD 领域场景分析的战略模式.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3802) 04  DDD 领域场景分析的战略模式.md","lastUpdated":1696417798000}'),_={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3802) 04  DDD 领域场景分析的战略模式.md"},d=a("",11),l=a("",15),i=a("",6),c=t("p",null,"领域示意图（二）",-1),h=t("p",null,'DDD 是围绕着"领域"来开展软件设计的。在明确了系统的问题域和业务期望后，可以梳理出主要的业务流程，这些业务流程体现了各种参与者在这个过程中通过业务活动共同协作，最终完成具有业务价值的领域功能。因此，一门通用的语言对于开发人员、产品经理、测试人员之间达成共识显得很重要了。通用语言是一个各种概念的集合，将一个限界上下文中的名词、动词和形容词全部集中在一起，且具有简洁、清晰的特性，这套通用语言与限界上下文对应，开发、产品和测试都基于通用语言进行沟通。',-1),u=t("p",null,"理想情况下，限界上下文与微服务可以一一对应，但在实际项目中，还会有一些调整，比如根据业务的相关度和变化频率，有时候就需要将多个限界上下文进行合并。",-1),g=t("h3",{id:"小结",tabindex:"-1"},[D("小结 "),t("a",{class:"header-anchor",href:"#小结","aria-label":'Permalink to "小结"'},"​")],-1),q=t("p",null,"在微服务刚兴起时，很多企业或者架构师对微服务架构划分的粒度都没有统一且明确的定义，往往采用诸如代码行数、职责的划分、比萨原则和组织结构等规则进行判断，无一例外，这些规则都无法准确地对粒度进行判定。DDD 为微服务的边界拆分提供了方法论，可以解决微服务的粒度问题。",-1),m=t("p",null,"本课时我们主要讲解了运用 DDD 进行领域场景分析的战略模式。DDD 不是银弹，实证软件工程强调了经验的重要性，然而 DDD对于复杂软件系统的整体架构的搭建，有着重要的指导作用。你在进行 DDD 战术设计时，需要首先掌握本课时所讲解的 DDD 战略模式。在接下来的具体案例实践中，我们将会结合案例讲解 DDD 战术设计的过程。",-1),b=t("p",null,"学习完本课时，你理解 DDD 的战略模式了吗？欢迎你在留言区分享你的想法。",-1);function x(T,A,k,f,P,C){const e=s("Image");return r(),p("div",null,[d,o(e,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/2F/DE/Ciqc1F8ICWKAWH1KAADBphxNKvM178.png"}),D(),l,o(e,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/2F/DE/Ciqc1F8ICaSAfJzpAAMWB0c5GBg079.png"}),D(),i,o(e,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/2F/DE/Ciqc1F8ICeaAPgvMAALoLbd-V-0404.png"}),D(),c,h,u,g,q,m,b])}const E=n(_,[["render",x]]);export{S as __pageData,E as default};
