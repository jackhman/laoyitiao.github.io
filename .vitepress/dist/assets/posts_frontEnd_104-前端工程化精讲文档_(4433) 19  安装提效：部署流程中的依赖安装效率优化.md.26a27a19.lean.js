import{_ as r,j as s,o as i,h as o,k as t,f as n,Q as l,s as a}from"./chunks/framework.d3daa342.js";const F=JSON.parse('{"title":"19安装提效：部署流程中的依赖安装效率优化","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/104-前端工程化精讲文档/(4433) 19  安装提效：部署流程中的依赖安装效率优化.md","filePath":"posts/frontEnd/104-前端工程化精讲文档/(4433) 19  安装提效：部署流程中的依赖安装效率优化.md","lastUpdated":1696682708000}'),p={name:"posts/frontEnd/104-前端工程化精讲文档/(4433) 19  安装提效：部署流程中的依赖安装效率优化.md"},c=l("",19),_=a("blockquote",null,[a("p",null,"注 1：除了第一种纯净环境外，后面的环境中都存在 Lock 文件。因为 Lock 文件对于提供稳定依赖版本至关重要。出于现实场景考虑，这里不再单独对比没有 Lock 文件但存在历史安装目录的场景。"),a("p",null,"注 2： 为了屏蔽网络对解析下载依赖包的影响，所有目录下均使用相同注册表网址 registry.npm.taobao.org。"),a("p",null,"注 3：以下时间统计的默认设备为 MacOS，网速约为 20Mbit/s。")],-1),h=a("h3",{id:"不同维度对安装效率的影响分析",tabindex:"-1"},[n("不同维度对安装效率的影响分析 "),a("a",{class:"header-anchor",href:"#不同维度对安装效率的影响分析","aria-label":'Permalink to "不同维度对安装效率的影响分析"'},"​")],-1),m=a("h4",{id:"纯净环境",tabindex:"-1"},[n("纯净环境 "),a("a",{class:"header-anchor",href:"#纯净环境","aria-label":'Permalink to "纯净环境"'},"​")],-1),d=a("p",null,"首先来对纯净环境进行分析，不同安装方式的执行耗时统计如下：",-1),g=l("",5),u=l("",5),f=a("p",null,"对结果的分析如下：",-1),b=a("ul",null,[a("li",null,[a("p",null,"从执行时间上看，各类型的安装方式的耗时都明显下降。")]),a("li",null,[a("p",null,[n("从细分阶段的耗时情况可以发现，"),a("strong",null,"本地缓存主要优化的是下载依赖包阶段的耗时"),n("，即在本地缓存命中的情况下免去了通过网络请求下载依赖包数据的过程。对于使用 npm 的项目而言，这一阶段还剩下解压缓存写入安装目录的耗时。对于使用 Yarn 的项目而言，这一阶段没有其他处理，直接略过。对于 pnpm 的项目而言，这一阶段的处理中还剩下从缓存硬链接到项目安装目录的过程。")])])],-1),k=a("h4",{id:"无缓存的重复安装环境",tabindex:"-1"},[n("无缓存的重复安装环境 "),a("a",{class:"header-anchor",href:"#无缓存的重复安装环境","aria-label":'Permalink to "无缓存的重复安装环境"'},"​")],-1),P=a("p",null,"无缓存的重复安装环境在本地环境下部署时可能遇到，即当本地已存在安装目录，但人工清理缓存后再次执行安装时可能遇到。这种情况的耗时如下：",-1),v=a("p",null,"对结果的分析如下：",-1),Y=a("ul",null,[a("li",null,[a("p",null,[n("从上面的表格中可以看到，存在安装目录这一条件首先"),a("strong",null,"对链接阶段能起到优化的作用"),n("。对于下载阶段，除了使用 PnP 的两种安装方式外，当项目中已存在安装目录时，下载阶段耗时也趋近于零。其中 Yarn v1 表现最好，各主要阶段都直接略过，而 npm 和 pnpm 则多少还有一些处理过程。")])]),a("li",null,[a("p",null,"而使用 PnP 的两种安装方式因为内部机制依赖缓存，本身不存在 node_modules，因此在清除本地缓存的情况下仍需完整经历远程下载过程，只不过由于其他安装后文件的存在（例如 .pnp.js），使得链接阶段的耗时相比 Lock 环境而言有所下降。")])],-1),q=a("h4",{id:"有缓存的重复安装环境",tabindex:"-1"},[n("有缓存的重复安装环境 "),a("a",{class:"header-anchor",href:"#有缓存的重复安装环境","aria-label":'Permalink to "有缓存的重复安装环境"'},"​")],-1),y=a("p",null,"最后是安装目录与本地缓存都存在的情况，耗时如下：",-1),A=l("",14);function C(E,T,L,x,w,D){const e=s("Image");return i(),o("div",null,[c,t(e,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/5D/44/Ciqc1F-EFtSATNnGAABjLC1FXMQ343.png"}),n(),_,h,m,d,t(e,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5D/44/Ciqc1F-EFuOAf51jAABmxP3DGmM839.png"}),n(),g,t(e,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/5D/4F/CgqCHl-EFwyAUyc0AABWRUrdf70141.png"}),n(),u,t(e,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5D/4F/CgqCHl-EFxqARvOCAABWYHKz7lk118.png"}),n(),f,b,k,P,t(e,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/5D/44/Ciqc1F-EFyqAc4dbAABWpKpPTt4305.png"}),n(),v,Y,q,y,t(e,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/5D/4F/CgqCHl-EFzKAOLpCAABS3Wdu4Zw636.png"}),n(),A])}const N=r(p,[["render",C]]);export{F as __pageData,N as default};
