import{_ as t,j as e,o,g as i,k as p,h as a,Q as l,s}from"./chunks/framework.4e7d56ce.js";const ps=JSON.parse('{"title":"第10讲：高频真题解析III（上)","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/037_300分钟搞定数据结构与算法/(38) 第10讲：高频真题解析 III（上).md","filePath":"posts/backEnd/037_300分钟搞定数据结构与算法/(38) 第10讲：高频真题解析 III（上).md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/037_300分钟搞定数据结构与算法/(38) 第10讲：高频真题解析 III（上).md"},r=l("",46),E=s("p",null,"此时，假设 s 字符串的长度为 m，p 字符串的长度为 n，s 和 p 匹配的条件就是 s 和 p 从头到尾一直匹配，即 i == m 同时 j == n 是 s 和 p 匹配的唯一条件。",-1),h=s("h3",{id:"点匹配符",tabindex:"-1"},[a("点匹配符 '.' "),s("a",{class:"header-anchor",href:"#点匹配符","aria-label":`Permalink to "点匹配符 '.'"`},"​")],-1),y=s("p",null,"'.' 匹配任意单个字符，首先要明确的是，它是一一对应关系，和 '*' 匹配符不一样。举例说明如下。",-1),d=s("p",null,"输入:",-1),u=s("p",null,'s = "leetcode"',-1),g=s("p",null,'p = "l..tc..e"',-1),_=s("p",null,"输出: true",-1),m=s("p",null,"因为 '.' 可以匹配任何字符，即，一旦遇上了 '.' 匹配符，可以让 i 指针和 j 指针同时跳到下一个位置。",-1),j=s("p",null,[s("strong",null,"星匹配符 '*'")],-1),b=s("p",null,`'*' 匹配符较难，先要理解这个星匹配符的定义。题目" '*' 匹配零个或多个前面的那一个元素"中包含三个重要的信息：`,-1),A=s("ol",null,[s("li",null,[s("p",null,"它匹配的是 p 字符串中，该 '*' 前面的那个字符。")]),s("li",null,[s("p",null,"它可以匹配零个或多个。")]),s("li",null,[s("p",null,"'*' 匹配符前面必须有一个非星的字符。")])],-1),f=s("p",null,"因此，在分析 '*' 匹配符的时候，一定要把 '*' 以及它前面的一个字符看作为一个整体， '*' 不能单独作为一个个体来看（例如点匹配符）。例如，p 字符串是 a *，则把 (a*) 当作一个整体来看。",-1),q=s("p",null,"对 p 字符串说明如下。",-1),M=l("",6),C=s("ol",{start:"2"},[s("li",null,"在 p 字符串里，a 的下一个字符是 c，不是 '*'，比较 s[i] 和 p[j]。因为它们都是字符 a，所以这个位置匹配正确，i 和 j 同时指向下一个。此时 j 的下一个字符是 '*'，要将 c* 当作一个整体去看待。")],-1),I=s("ol",{start:"3"},[s("li",null,"将 c* 看成是空字符，p 如下所示。")],-1),k=s("ol",{start:"4"},[s("li",null,"若匹配中不一致即 c* 不能当作空字符串，则当作一个 c 字符，此时 p 如下。")],-1),v=s("ol",{start:"5"},[s("li",null,"若不行，则看作两个 c。")],-1),S=s("p",null,"以此类推，应用了回溯的思想。",-1),V=s("p",null,"对于将 c* 作为空字符串的情况。每一次，都要看看当前 j 指向的字符的下一个是不是 '*'。如果是 '*'，就要作为整体考虑。很明显，a 的下一个字符是 '*'。",-1),T=s("p",null,"同样，先将 a* 作为空字符串看待。此时，a != b，两个字符串不匹配，因此回溯.现在将 a* 看成是一个 a，此时 a = a，两个位置的字符匹配。",-1),P=s("p",null,"j 的下一个字符不是 '*'，而是点号，比较 s[i] 和 p[j]，发现 a != b。于是再次回溯，将 a* 看成是两个 a，回到刚才的位置。",-1),B=s("p",null,"最后遇到了两个点号，由于点号可以匹配任何字符，因此可以直接忽略。i 和 j 同时往前一步，再次遇到了点号。i 和 j 继续往前一步。",-1),x=s("p",null,"此时，i 和 j 都已经同时结束了各自的遍历，表明 s 和 p 是匹配的。",-1),F=s("p",null,"提示：重点是把这种回溯的思想掌握好。对于这道题，可以采用递归的写法，也可以采用动态规划的写法。",-1),D=s("h6",{id:"递归法一",tabindex:"-1"},[a("递归法一 "),s("a",{class:"header-anchor",href:"#递归法一","aria-label":'Permalink to "递归法一"'},"​")],-1),O=s("p",null,"一开始，用两个指针 i 和 j 分别指向字符串 s 和 p 的第一个字符，当我们发现它们指向的字符相同时，我们同时往前一步移动指针 i 和 j。",-1),N=s("br",null,null,-1),G=s("p",null,"接下来重复进行相同的操作，即，若将函数定义为 isMatch(String s, int i, String p, int j) 的话，通过传递 i 和 j，就能实现重复利用匹配逻辑的效果。",-1),J=s("p",null,"当遇到点匹配符的时候，方法类似。",-1),w=s("p",null,"来看看当遇到星匹配符的情况，举例说明如下。要不断地用 a* 去表示一个空字符串，一个 a，两个 a，一直到多个 a......",-1),Y=s("p",null,"当 a* 表示空字符串的时候，i 和 j 应该如何调整呢？此时 i 保持不变，j+2，递归调用函数的时候，变成 isMatch(s, i, p, j + 2)。",-1),K=s("p",null,"此时，指向的字符和 j 指向的字符不匹配，于是回溯，回到原来的位置。11:57",-1),R=s("p",null,"用 a* 去表示一个 a，i 指向的字符与 a 匹配，那么 i+1。指针 j，已经完成了用 a* 去表示一个 a 的任务，接下来要指向 b，调用的时候应该是 isMatch(s, i + 1, p, j + 2)。",-1),z=s("p",null,"i 指向的字符和 j 指向的字符不匹配，又进行回溯，但是不用回到最开始的位置。已知用 a* 去表示空字符串不行，表示一个 a 也不行，那么尝试两个 a 字符，于是，i 再往前一步，用 a* 去匹配两个 a，i 就到了 b 的位置上，调用的时候就是 isMatch(s, i + 2, p, j + 2)。",-1),Q=l("",13),U=s("p",null,"实现过程如下所示。",-1),L=l("",21);function $(H,W,Z,X,ss,as){const n=e("Image");return o(),i("div",null,[r,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1iAL3rjAFNmGn6rmB8556.gif"}),a(),E,h,y,d,u,g,_,m,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie1mAHiTeAFyyE_vrAho862.gif"}),a(),j,b,A,f,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1qAJ0yjABmVlo21Z_k078.gif"}),a(),q,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie1uAfvGOAFXqP1fgpyo624.gif"}),a(),M,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1uAWy3YACOzTjqASVU474.gif"}),a(),C,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie1uAQkfIAD7sMK4b0q0916.gif"}),a(),I,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1yATZ7aACaSPwysGtw610.gif"}),a(),k,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1yAYdqYACtak4duJdY791.gif"}),a(),v,S,V,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie12AJf14ACHySIotppY330.gif"}),a(),T,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie16AEWe2AGU2311QM54850.gif"}),a(),P,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie1-AAfhyAMUVWpoQPio071.gif"}),a(),B,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie1-AAKtMAGRVK2beFJI055.gif"}),a(),x,F,D,O,N,G,J,w,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie1-AJzGVAACAxM7kNrk693.png"}),a(),Y,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie2CAAZ6aAEk53IJKbK4406.gif"}),a(),K,R,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie2CARkM9AD_zVAmy1eI036.gif"}),a(),z,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie2GALJKxAEMDpEqq9pU613.gif"}),a(),Q,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/90/FC/CgoB5l2Ie2GAFb2VAAB2VFYCpQA482.png"}),a(),U,p(n,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/91/1C/CgotOV2Ie2GAA1bPAGMu3IFkH1Y793.gif"}),a(),L])}const ls=t(c,[["render",$]]);export{ps as __pageData,ls as default};
