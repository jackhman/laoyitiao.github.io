import{_ as p,j as t,o,g as n,k as i,s as l,h as r,Q as e}from"./chunks/framework.e0c66c3f.js";const P=JSON.parse('{"title":"详解 MySQL ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/036_32个Java面试必考点/(13) 第09讲（下）：MySQL调优与最佳实践.md","filePath":"posts/backEnd/036_32个Java面试必考点/(13) 第09讲（下）：MySQL调优与最佳实践.md","lastUpdated":1696338709000}'),s={name:"posts/backEnd/036_32个Java面试必考点/(13) 第09讲（下）：MySQL调优与最佳实践.md"},h=l("h6",{id:"详解-mysql",tabindex:"-1"},[r("详解 MySQL "),l("a",{class:"header-anchor",href:"#详解-mysql","aria-label":'Permalink to "详解 MySQL"'},"​")],-1),_=l("p",null,"下面来学习互联网行业使用最为广泛的关系型数据库 MySQL，它的知识点结构图如下所示。",-1),c=l("br",null,null,-1),d=e("",31),u=e("",6),S=e("",12),L=l("ul",null,[l("li",null,[l("p",null,"第 2 题，可以从消息的发送者保证投递到消息队列、消息对象自身的高可用、消费方处理完成后修改 offset 这三个方面来保证消息的可靠性。这个题目可以结合 Kafka 的消息发送同步、异步，消息可靠性配置来回答。")]),l("li",null,[l("p",null,"第 3 题可以从两个方面解决消息重复：一个是通过对消息处理实现幂等，消除消息重复的影响；另一个是使用 Redis 来进行消息去重，避免重复消息的处理。")]),l("li",null,[l("p",null,"第 4 题可以从创建索引、减少关联查询、优化 SQL 查询条件等方面展开。")]),l("li",null,[l("p",null,"第 6 题可以从 MySQL 调优部分讲解的相关原则这个角度来回答。")])],-1),M=l("br",null,null,-1),Q=l("p",null,"下一课时将会学习系统架构与项目案例详解的相关内容。",-1),y=l("br",null,null,-1);function m(b,A,T,q,f,k){const a=t("Image");return o(),n("div",null,[h,_,c,i(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/EF/CgotOV14tcCAAj4qAAG5pZSsGg0126.png"}),d,i(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/CF/CgoB5l14tcCAW4TEAAA4gPziGLI076.png"}),u,i(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/EF/CgotOV14tcCADvHvAAC0X6SqEbk666.png"}),S,i(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/CF/CgoB5l14tcGASkb-AABwwI5lamM754.png"}),L,M,Q,y])}const C=p(s,[["render",m]]);export{P as __pageData,C as default};
