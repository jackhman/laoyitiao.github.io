import{_ as o,j as e,o as t,g as c,k as a,h as p,Q as l,s}from"./chunks/framework.4e7d56ce.js";const w=JSON.parse('{"title":"1. 配置 GitLab SSH 访问公钥 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/045_由浅入深吃透 Docker/(4596) 25  CICD：容器化后如何实现持续集成与交付？（下）.md","filePath":"posts/backEnd/045_由浅入深吃透 Docker/(4596) 25  CICD：容器化后如何实现持续集成与交付？（下）.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/045_由浅入深吃透 Docker/(4596) 25  CICD：容器化后如何实现持续集成与交付？（下）.md"},E=l("",10),y=l("",9),i=s("p",null,"项目创建完成后，GitLab 会自动跳转到项目详情页面。",-1),F=s("h3",{id:"_3-创建-jenkins-任务",tabindex:"-1"},[p("3. 创建 Jenkins 任务 "),s("a",{class:"header-anchor",href:"#_3-创建-jenkins-任务","aria-label":'Permalink to "3. 创建 Jenkins 任务"'},"​")],-1),d=s("p",null,"在 Jenkins 中添加一个自由风格的任务。",-1),h=s("p",null,"点击确定，然后到源码管理选择 Git，填写 GitLab 项目的 URL。此时 Jenkins 会提示没有访问 GitLab 的相关权限，我们需要点击添加按钮将私钥添加到 Jenkins 中用以鉴权。",-1),A=s("blockquote",null,[s("p",null,"由于部署 GitLab 的宿主机 ssh 默认端口为 22，为了避免与宿主机的 ssh 端口冲突，我们的 GitLab ssh 端口配置为 2222，因此 Jenkins 连接 GitLab 的 URL 中需要包含端口号 2222， 配置格式为 ssh://git@172.20.1.6:2222/root/hello.git。")],-1),C=s("p",null,'选择添加的密钥类型为 "SSH Username with private key"，Username 设置为 jenkins，然后将私钥粘贴到 Private Key 输入框中，点击添加即可。',-1),g=s("p",null,"添加完成后，认证名称选择 jenkins 后，红色报错提示就会消失。这证明此时 Jenkins 和 GitLab 已经认证成功，可以成功从 GitLab 拉取代码了。",-1),u=l("",2),D=s("p",null,"完成后点击保存，此时任务已经成功添加到 Jenkins 中。回到任务首页，点击构建按钮即可开始构建。第一次构建需要下载依赖的基础镜像，这个过程可能比较慢。构建过程中，我们也可以点击控制台查看构建输出的内容：",-1),k=s("h3",{id:"_4-配置自动构建",tabindex:"-1"},[p("4. 配置自动构建 "),s("a",{class:"header-anchor",href:"#_4-配置自动构建","aria-label":'Permalink to "4. 配置自动构建"'},"​")],-1),_=s("p",null,"点击上一步创建的任务，点击配置进入任务配置界面，到构建触发器下勾选 GitLab 相关的选项，点击 Generate 按钮生成一个 GitLab 回调 Jenkins 的 token。记录下 Jenkins 的回调地址和生成的 token 信息。",-1),m=s("p",null,"在 GitLab 项目设置中，选择 Webhooks，将 Jenkins 的回调地址和 token 信息添加到 Webhooks 的配置中，点击添加即可。",-1),b=l("",9),B=s("p",null,[s("strong",null,"第二步，配置 Publish Over SSH 插件。"),p(" 插件安装完成后，在 Jenkins 系统管理的系统设置下，找到 Publish Over SSH 功能模块，添加远程服务器节点，这里我使用密码验证的方式添加一台服务器。配置好后，我们可以使用测试按钮测试服务器是否可以正常连接，显示Success 代表服务器可以正常连接，测试连接成功后，点击保存按钮保存配置。")],-1),S=l("",4),v=l("",7);function q(R,O,I,T,f,G){const n=e("Image");return t(),c("div",null,[E,a(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A8/CgqCHl-2P_qAO6VIAAIAcpA55IY226.png"}),y,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A8/CgqCHl-2QA2ARz39AADE_fukgio780.png"}),p(),a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A9/CgqCHl-2QQCAZUxWAAF7KHvN2DI582.png"}),i,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9D/Ciqc1F-2QQeAXsbVAAELrFGkphU008.png"}),F,d,a(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9D/Ciqc1F-2QRGAIS83AAGKHDb05xE232.png"}),h,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9D/Ciqc1F-2QSWAceMNAADnnjcKzCo548.png"}),A,C,a(n,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9D/Ciqc1F-2QTSARpg5AAET_4BGb-0066.png"}),g,a(n,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A9/CgqCHl-2QTqAQf8RAACXxIBN-Z8663.png"}),u,a(n,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A9/CgqCHl-2QUKAJ-psAABwghmp76g949.png"}),D,a(n,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9D/Ciqc1F-2QUuAEXcXAAGe5l9e2h0928.png"}),k,_,a(n,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9E/Ciqc1F-2QWCABHzrAAFQCgpFnLs787.png"}),m,a(n,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9E/Ciqc1F-2QWiAFOVBAAI93Lelr38996.png"}),b,a(n,{alt:"Drawing 12.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A9/CgqCHl-2QfmAc4iBAACDzvOoPWI585.png"}),B,a(n,{alt:"Drawing 13.png",src:"https://s0.lgstatic.com/i/image/M00/6F/A9/CgqCHl-2QgSAVk0bAAC6abody2k836.png"}),S,a(n,{alt:"Drawing 14.png",src:"https://s0.lgstatic.com/i/image/M00/6F/9E/Ciqc1F-2QhKAPblBAAC4Bp33K2Y632.png"}),v])}const x=o(r,[["render",q]]);export{w as __pageData,x as default};
