import{_ as p,D as t,o as e,g as c,J as n,h as o,m as s,Q as l}from"./chunks/framework.f67d7268.js";const w=JSON.parse('{"title":"05gRPC代理模式：实现可伸缩的etcdAPI","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/etcd 原理与实践_文档/(6399) 05  gRPC 代理模式：实现可伸缩的 etcd API.md","filePath":"posts/backEnd/etcd 原理与实践_文档/(6399) 05  gRPC 代理模式：实现可伸缩的 etcd API.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/etcd 原理与实践_文档/(6399) 05  gRPC 代理模式：实现可伸缩的 etcd API.md"},y=s("h1",{id:"_05grpc代理模式-实现可伸缩的etcdapi",tabindex:"-1"},[o("05gRPC代理模式：实现可伸缩的etcdAPI "),s("a",{class:"header-anchor",href:"#_05grpc代理模式-实现可伸缩的etcdapi","aria-label":'Permalink to "05gRPC代理模式：实现可伸缩的etcdAPI"'},"​")],-1),E=s("p",null,[o("gRPC proxy 是在 gRPC 层（L7）运行的无状态 etcd 反向代理，旨在"),s("strong",null,"减少核心 etcd 集群上的总处理负载"),o("。gRPC proxy 合并了监视和 Lease API 请求，实现了水平可伸缩性。同时，为了保护集群免受滥用客户端的侵害，gRPC proxy 实现了键值对的读请求缓存。")],-1),i=s("p",null,"下面我们将围绕 gRPC proxy 基本应用、客户端端点同步、可伸缩的 API、命名空间的实现和其他扩展功能展开介绍。",-1),F=s("h3",{id:"grpc-proxy-基本应用",tabindex:"-1"},[o("gRPC proxy 基本应用 "),s("a",{class:"header-anchor",href:"#grpc-proxy-基本应用","aria-label":'Permalink to "gRPC proxy 基本应用"'},"​")],-1),u=s("p",null,"首先我们来配置 etcd 集群，集群中拥有如下的静态成员信息：",-1),d=l("",12),q=l("",7),C=s("h3",{id:"可伸缩的-watch-api",tabindex:"-1"},[o("可伸缩的 watch API "),s("a",{class:"header-anchor",href:"#可伸缩的-watch-api","aria-label":'Permalink to "可伸缩的 watch API"'},"​")],-1),g=s("p",null,"如果客户端监视同一键或某一范围内的键，gRPC 代理可以将这些客户端监视程序（c-watcher）合并为连接到 etcd 服务器的单个监视程序（s-watcher）。当 watch 事件发生时，代理将所有事件从 s-watcher 广播到其 c-watcher。",-1),A=s("p",null,"假设 N 个客户端监视相同的 key，则 gRPC 代理可以将 etcd 服务器上的监视负载从 N 减少到 1。用户可以部署多个 gRPC 代理，进一步分配服务器负载。",-1),D=s("p",null,"如下图所示，三个客户端监视键 A。gRPC 代理将三个监视程序合并，从而创建一个附加到 etcd 服务器的监视程序。",-1),h=l("",8),B=l("",13),_=s("p",null,"访问 metrics 接口的结果",-1),v=l("",20),m=s("p",null,"gRPC 代理用于支持多个 etcd 服务器端点，当代理启动时，它会随机选择一个 etcd 服务器端点来使用，该端点处理所有请求，直到代理检测到端点故障为止。如果 gRPC 代理检测到端点故障，它将切换到其他可用的端点，对客户端继续提供服务，并且隐藏了存在问题的 etcd 服务端点。",-1),P=s("p",null,"关于 gRPC 代理，你有什么经验和踩坑的经历，欢迎在留言区和我分享你的经验。",-1),f=s("p",null,"集群的部署并不是一劳永逸的事情，在我们日常的工作中经常会遇到集群的调整。下一讲，我们将会介绍如何动态配置 etcd 集群。我们下一讲再见。",-1);function x(T,k,b,R,I,$){const a=t("Image");return e(),c("div",null,[y,E,i,F,u,n(a,{alt:"202125-92345.png",src:"https://s0.lgstatic.com/i/image6/M00/02/39/CioPOWAdDsCAOeHvAACGoxT-wS8912.png"}),o(),d,n(a,{alt:"202125-92351.png",src:"https://s0.lgstatic.com/i/image6/M00/02/39/CioPOWAdDuaAL9IoAAMgcPZE1jc101.png"}),o(),q,n(a,{alt:"202125-92353.png",src:"https://s0.lgstatic.com/i/image6/M00/02/3B/Cgp9HWAdDu2Afub8AAI6unk0A5A099.png"}),o(),C,g,A,D,n(a,{alt:"202125-92355.png",src:"https://s0.lgstatic.com/i/image6/M00/02/39/CioPOWAdDvWAAhlsAADrPgju77A709.png"}),o(),h,n(a,{alt:"202125-92357.png",src:"https://s0.lgstatic.com/i/image6/M00/02/3C/Cgp9HWAdDwCAZYOCAAC-ZGY7vng236.png"}),o(),B,n(a,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/94/3D/Ciqc1GAXy8qAAw3iAAaZ1XYdHxw861.png"}),o(),_,n(a,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/94/48/CgqCHmAXy8-AZ0q5AACKTo_Vhhg176.png"}),o(),v,n(a,{alt:"202125-92359.png",src:"https://s0.lgstatic.com/i/image6/M00/02/39/CioPOWAdDxKAFk1BAAIimkNUiSk285.png"}),o(),m,P,f])}const S=p(r,[["render",x]]);export{w as __pageData,S as default};
