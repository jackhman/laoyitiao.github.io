import{_ as o,D as e,o as t,g as r,J as a,h as p,Q as l,m as s}from"./chunks/framework.f67d7268.js";const b=JSON.parse('{"title":"35案例：如何在微服务中集成Zipkin组件？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3830) 35  案例：如何在微服务中集成 Zipkin 组件？.md"},E=l("",6),i=l("",26),y=s("p",null,"结果验证截图",-1),g=s("p",null,"可以看到，通过网关，我们可以正常访问字符串服务提供的接口。下面我们通过 Zipkin UI 来查看本次链路调用的信息，如下图所示：",-1),F=s("p",null,"Zipkin UI 查看链路调用的信息截图",-1),u=s("p",null,'在浏览器请求之后，可以在 Zipkin UI 中看到发送的请求记录（单击上方"Try Lens UI"切换成了 Lens UI，效果还不错），点击查看详细的链路调用情况，如下图所示：',-1),d=s("p",null,"Lens UI 截图",-1),C=s("p",null,"从调用链中可以看到，本次请求涉及两个服务：gateway-service 和 string-service。",-1),h=s("p",null,"整个链路有 3 个 Span：gateway、HTTP-transport 和 string-endpoint，确实如我们所定义的一样。这里我们主要看一下网关中的 Gateway Span 详情，如下图所示：",-1),k=l("",26);function T(A,v,D,q,B,P){const n=e("Image");return t(),r("div",null,[E,a(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvryAbSsGAABD2LP4yN8428.png"}),p(),i,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvvSAdvD2AAJxdVYATAU644.png"}),p(),y,g,a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-GvvqAccZPAAPASa8eLYA067.png"}),p(),F,u,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvwOAO5wJAANEaW1O3C4296.png"}),p(),d,C,h,a(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-GvwuASVfGAAcZvmOB0Kc881.png"}),p(),k,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/5E/81/CgqCHl-GvzeAWzGRAASmhMb8V3c466.png"})])}const _=o(c,[["render",T]]);export{b as __pageData,_ as default};
