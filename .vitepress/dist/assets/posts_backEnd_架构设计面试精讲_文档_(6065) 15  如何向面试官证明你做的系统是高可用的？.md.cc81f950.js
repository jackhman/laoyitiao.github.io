import{_ as n,j as _,o as i,h as a,k as l,f as o,Q as p,s as t}from"./chunks/framework.d3daa342.js";const K=JSON.parse('{"title":"15如何向面试官证明你做的系统是高可用的？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/架构设计面试精讲_文档/(6065) 15  如何向面试官证明你做的系统是高可用的？.md","filePath":"posts/backEnd/架构设计面试精讲_文档/(6065) 15  如何向面试官证明你做的系统是高可用的？.md","lastUpdated":1696682708000}'),e={name:"posts/backEnd/架构设计面试精讲_文档/(6065) 15  如何向面试官证明你做的系统是高可用的？.md"},c=p('<h1 id="_15如何向面试官证明你做的系统是高可用的" tabindex="-1">15如何向面试官证明你做的系统是高可用的？ <a class="header-anchor" href="#_15如何向面试官证明你做的系统是高可用的" aria-label="Permalink to &quot;15如何向面试官证明你做的系统是高可用的？&quot;">​</a></h1><p>我们已经用了五个模块分别讲了架构原理、分布式技术、中间件、数据库，以及缓存，这些都是面试中必考的技术领域和技术点，又因为我们处在大数据和互联网时代，所以高可用高性能这些非功能性需求的考察，也是你需要了解的，所以在最后一个模块，我会带你打卡高可用高性能的架构设计面试实战。</p><p>我在 01 讲中说过，高级研发工程师和架构师的区别不在于掌握了多少技术，而在于你所能驾驭系统的边界。这其实也反映了一个研发工程师的成长历程，起初独立负责一个功能，然后负责一个系统模块，再负责一个系统，最后负责多个系统或业务条线。</p><p>但是不管你在哪个阶段，有一个问题你肯定逃不开：怎么证明自己负责的系统是高可用的？因为任何一个系统架构初衷，最基本的诉求是要保证系统的稳定性和可用性，然后才是基于高流量的场景下，保证系统的并发承载能力。</p><h3 id="案例背景" tabindex="-1">案例背景 <a class="header-anchor" href="#案例背景" aria-label="Permalink to &quot;案例背景&quot;">​</a></h3><p>一般来讲，面试官在考察你系统架构的设计能力时，经常会让你说一下你在上一家公司是怎么设计系统架构的，以此了解你的设计能力和思路。</p><p>而你在讲解架构设计时，也是在向面试官逐步证明，自己负责的系统是如何做到高可用的。这会涉及一个公认的论证------SLA。服务等级协议（Service-Level Agreement，SLA）最根本的形式是协议双方（服务提供者和用户）签订的一个合约或协议。这个合约规范了双方的商务关系或部分商务关系。简单点儿说，你可以认为 SLA 是服务可用性一个重要衡量指标。</p><p>业界一般用几个 9 的 SLA 服务等级来衡量互联网应用的可用性。比如京东的可用性是 4 个 9（京东的服务 99.99% 可用）：京东的服务要保证在所有的运行时间里只有 0.01% 不可用，也就是说一年大概有 52.6 分钟不可用，这个 99.99% 就叫作系统的可用性指标。</p><p>52.6 分钟是怎么计算出来的呢？</p>',9),r=t("p",null,"SLA 的计算公式",-1),u=t("p",null,"从公式中可以看出， SLA 等于 4 个 9，也就是可用时长达到了 99.99% ，不可用时长则为是0.01%，一年是 365 天， 8760 个小时，一年的不可用时长就是 52.6 分钟，那么：",-1),g=t("ul",null,[t("li",null,[t("p",null,"SLA 等于 3 个 9，就相当于一年不可用时长等于 526 分钟；")]),t("li",null,[t("p",null,"SLA 等于 5 个 9，就相当于一年不可用时长等于 5.26 分钟。")])],-1),A=t("p",null,"可以发现，用 SLA 等于 4 个9 作为参照物，少个 9 相当于小数点往后移一位，多个 9 相当于小数点往前移一位（我把系统可用性指标总结成一张表格）。",-1),h=p('<p>系统可用性指标</p><p><strong>那么问题就来了：</strong> 既然 SLA 是服务可用性的一个衡量指标，那么你在面试时，怎么设置这个指标的阈值才合理呢？</p><ul><li><p>一般来讲，2 个 9 表示系统基本可用，年度不可用时间小于 88 小时。</p></li><li><p>3 个 9 是较高可用，年度不可用时间小于 9 个小时。</p></li><li><p>4 个 9 是具有自动恢复能力的高可用，年度不可用时间小于 53 分钟。</p></li><li><p>5 个 9 指极高的可用性，年度不可用时间小于 5 分钟。</p></li></ul><p>在电商平台中（比如淘宝、京东、拼多多），系统可用性大多是 4 个 9。那么你在回答时，一要了解 SLA 的概念，N 个 9 代表什么含义，更要清楚互联网对于 SLA 的主流设定阈值。</p><p>讲到这儿，你可能会觉得：那我清楚了 SLA 的概念，然后也了解了 SLA 的主流设定阈值，当面试官问我&quot;你们的系统高可用做得怎么样&quot;时，我回答系统做到了 N 个 9 是不是就可以了？</p><h3 id="案例分析" tabindex="-1">案例分析 <a class="header-anchor" href="#案例分析" aria-label="Permalink to &quot;案例分析&quot;">​</a></h3><p>给你 10 秒钟的时间思考一下，当面试官听到你按照时间指标度量系统可用性，会不会满意？</p><p>要知道，任何一家互联网公司，都有流量的低峰期和高峰期，你在低峰期停机 1 分钟和高峰期停机 1 分钟，对业务影响的结果完全不同。<strong>如果认识不到这一点，面试官很容易认为你很业余，并没有实践经验。</strong></p><p>所以，仅凭理论指标在有些情况下是不能满足实际需求的，那有没有更加科学的度量方式呢？答案就是基于一段时间（比如 1 年）的停机影响的请求量占比，进行评估，公式如下：</p>',9),d=p('<p>这样一来，你就可以评估，业务在高峰期停机和在低峰期停机分别造成多少的损失了。<strong>所以，如果你再回答系统高可用指标的时候，我建议你可以遵循这样的套路：先摆明度量的两种方式，&quot;N 个 9&quot; 和 &quot;影响请求量占比&quot;，然后再结合实际业务场景表明第二种方式的科学性。</strong></p><p>总的来说，作为候选人，要立足业务价值去回答问题，不是仅停留于技术概念的堆砌，这才能体现你的思考。</p><p>当然了，以上的内容基本可以满足你应聘初中级研发工程师的需求，如果你要面试高级研发工程师或者是架构师，你还要有一个思路的闭环。<strong>为了方便你的记忆，我把这个思路总结为：&quot;可评估&quot;&quot;可监控&quot;&quot;可保证&quot;。</strong></p><p>所以，当你向面试官证明系统高可用时，其实是在回答这样几个问题：</p><ul><li><p>如何评估系统高可用？</p></li><li><p>如何监控系统高可用？</p></li><li><p>如何保证系统高可用？</p></li></ul><p>接下来，我们继续学习&quot;如何监控系统高可用&quot;至于&quot;如何保证系统高可用&quot;我将在下一讲中为你解答。</p><h3 id="案例解答" tabindex="-1">案例解答 <a class="header-anchor" href="#案例解答" aria-label="Permalink to &quot;案例解答&quot;">​</a></h3><p>我们以设计一个保证系统服务 SLA 等于 4 个 9 的监控报警体系为例。<strong>监控系统包括三个部分：基础设施监控报警、系统应用监控报警，以及存储服务监控报警。</strong> 接下来，我就围绕这三个最核心的框架带你设计一个监控系统，并基于监控系统的设计，让你了解到系统哪些环节会影响系统整体的可用性，从而在面试中对系统高可用设计有更加清晰的掌握。</p><ul><li><strong>基础设施监控</strong></li></ul><p>基础设施监控由三个部分组成：监控报警指标、监控工具以及报警策略。</p><p><strong>监控报警指标分为两种类型。</strong></p><ol><li><p>系统要素指标：主要有 CPU、内存，和磁盘。</p></li><li><p>网络要素指标：主要有带宽、网络 I/O、CDN、DNS、安全策略、和负载策略。</p></li></ol><p>为什么我们要监控这些指标？因为它们是判断系统的基础环境是否为高可用的重要核心指标。</p>',13),S=t("p",null,"监控报警指标",-1),m=t("p",null,[t("strong",null,"监控工具常用的有"),o("ZABBIX（Alexei Vladishev 开源的监控系统，覆盖市场最多的老牌监控系统，资料很多）、Open-Falcon（小米开源的监控系统，小米、滴滴、美团等公司内部都在用）、Prometheus（SoundCloud 开源监控系统，对 K8S 的监控支持更好）。这些工具基本都能监控所有系统的 CPU、内存、磁盘、网络带宽、网络 I/O 等基础关键指标，再结合一些运营商提供的监控平台，就可以覆盖整个基础设施监控。")],-1),C=t("p",null,[t("strong",null,"监控报警策略一般由时间维度"),o(" 、"),t("strong",null,"报警级别"),o(" 、"),t("strong",null,"阈值设定三部分组成"),o("。")],-1),P=t("p",null,"监控报警策略",-1),T=t("p",null,"为了方便你理解监控报警策略，我举个例子。假设系统的监控指标有CPU、内存和磁盘，监控的时间维度是分钟级，监控的阈值设置为占比。那么你可以定义出如下的监控报警策略：",-1),q=t("p",null,'为了第一时间监测到指标的健康度，报警级别可以分为紧急、重要，以及一般。当 CPU、内存，以及磁盘使用率这三项指标的每分钟采集的指标达到 90% 使用率时，就触发"紧急报警"；达到 80% 触发"重要报警"；70% 触发"一般报警"。',-1),L=t("ul",null,[t("li",null,[t("strong",null,"系统应用监控")])],-1),b=t("p",null,"业务状态监控报警，关注点在于系统自身状态的监控报警。和基础设施监控一样，它也是由监控指标，监控工具，报警策略组成，不同的是，系统应用监控报警的核心监控指标主要有流量、耗时、错误、心跳、客户端数、连接数等 6 个核心指标，监控工具有 CAT、SkyWalking、Pinpoint、Zipkin 等。",-1),k=p("<p>系统应用监控</p><ul><li><strong>存储服务监控</strong></li></ul><p>一般来讲，常用的第三方存储有 DB、ES、Redis、MQ 等。</p><p>对于存储服务的监控，除了基础指标监控之外，还有一些比如集群节点、分片信息、存储数据信息等相关特有存储指标的监控。</p><p>对于存储服务监的内容细节，我这里就不再一一介绍，在面试中，你只需要基于监控系统的三个核心组成部分（基础设施监控、系统应用监控、存储服务监控）来回答问题即可，比如，你可以回答：我为了确保系统的健康可靠，设计了一套监控体系，用于在生产环境对系统的可用性进行监控，具体的指标细节可以结合业务场景进行裁剪，比如你们是游戏领域，所以很关注流量和客户端连接数。</p><p>总的来说，<strong>让面试官认可你有一个全局的监控视角，比掌握很多监控指标更为重要。</strong></p><p>当然，很多互联网公司都很重视系统服务稳定性的工作，因为服务的稳定性直接影响用户的体验和口碑，线上服务稳定性是研发工程师必须要重点关注的问题。所以当你回答完上述问题后，有的面试官为了考察候选人的责任意识，一般还会追问：&quot;如果线上出现告警，你作为核心研发，该怎么做呢？&quot;</p><p>对于线上故障，要有应急响应机制，我总结以下几点供你参考：</p>",8),D=t("h3",{id:"总结",tabindex:"-1"},[o("总结 "),t("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),N=t("p",null,"我们来回顾一下今天的重点内容。",-1),V=t("p",null,'为了在面试中更好地回答怎么评估系统高可用，我们讲解了 SLA 的概念以及评估方法，并得出"以停机时间影响的系统请求量作为评估指标"比较科学。',-1),f=t("p",null,"为了确保线上服务的稳定运行，在设计监控系统时，要考虑三个核心点，基础设施监控、系统应用监控，以及存储服务监控。",-1),E=t("p",null,"另外，我强调了故障处理是研发工程师在进阶过程中必须经历的，而故障处理能力也是面试官最为看重的能力之一，所以对于怎么处理各类故障，你要形成一套体系化的知识框架。",-1),I=t("p",null,"为了方便你的记忆，我将今天的内容总结如下。",-1),M=t("p",null,"最后，留一个话题我们来讨论吧：在你所处了领域中，你设计系统架构时，更关注哪些可用性指标？感谢你的阅读，我们下一讲见。",-1);function W(x,O,B,U,Y,v){const s=_("Image");return i(),a("div",null,[c,l(s,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M01/04/84/CioPOWAs3d-AU1jSAAAJ1V9HKdE826.png"}),o(),r,u,g,A,l(s,{alt:"1.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CD/Cgp9HWAuYU2ANzYsAADiIW0-zW8205.png"}),o(),h,l(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M01/04/84/CioPOWAs3f-ARcGTAAAKDhhS0CU196.png"}),o(),d,l(s,{alt:"2.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CD/Cgp9HWAuYWyATkxVAABau7vw5jQ035.png"}),o(),S,m,C,l(s,{alt:"3.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CA/CioPOWAuYX-APgb5AABCnrQ8zLc613.png"}),o(),P,T,l(s,{alt:"4.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CA/CioPOWAuYZKAaViEAACdg3MBCqE160.png"}),o(),q,L,b,l(s,{alt:"5.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CD/Cgp9HWAuYaSAOg3MAABlYMloePk508.png"}),o(),k,l(s,{alt:"6.png",src:"https://s0.lgstatic.com/i/image6/M00/04/CA/CioPOWAuYbuAaS3EAAFIiTdJNEg195.png"}),o(),D,N,V,f,E,I,l(s,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image6/M00/04/84/CioPOWAs3luAbbhpAAEjKaU8JLg460.png"}),o(),M])}const j=n(e,[["render",W]]);export{K as __pageData,j as default};
