import{_ as s,o as a,h as n,Q as o}from"./chunks/framework.d3daa342.js";const d=JSON.parse('{"title":"第25讲：如何搭建一个高可用的ZooKeeper生产环境？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ZooKeeper源码分析与实战_文档/(3155) 第25讲：如何搭建一个高可用的 ZooKeeper 生产环境？.md","filePath":"posts/backEnd/ZooKeeper源码分析与实战_文档/(3155) 第25讲：如何搭建一个高可用的 ZooKeeper 生产环境？.md","lastUpdated":1696682708000}'),l={name:"posts/backEnd/ZooKeeper源码分析与实战_文档/(3155) 第25讲：如何搭建一个高可用的 ZooKeeper 生产环境？.md"},p=o(`<h1 id="第25讲-如何搭建一个高可用的zookeeper生产环境" tabindex="-1">第25讲：如何搭建一个高可用的ZooKeeper生产环境？ <a class="header-anchor" href="#第25讲-如何搭建一个高可用的zookeeper生产环境" aria-label="Permalink to &quot;第25讲：如何搭建一个高可用的ZooKeeper生产环境？&quot;">​</a></h1><p>如何在生产环境中部署一个安全可靠的 ZooKeeper 运行环境，是每个 IT 技术人员都要掌握的知识。没有一个安全可靠的运行环境，无论开发的服务再怎么优秀，都无法为用户提供服务。因此，本课时的重点将聚焦在 ZooKeeper 生产环境下安装的相关知识和参数配置技巧上。</p><h3 id="运行方式" tabindex="-1">运行方式 <a class="header-anchor" href="#运行方式" aria-label="Permalink to &quot;运行方式&quot;">​</a></h3><p>首先，我们来介绍一下 ZooKeeper 服务的几种运行模式，ZooKeeper 的运行模式一般分为<strong>单机模式、伪集群模式、集群模式</strong>。其中单机模式和伪集群模式，在我们的日常开发中经常用到。</p><h4 id="单机模式配置" tabindex="-1">单机模式配置 <a class="header-anchor" href="#单机模式配置" aria-label="Permalink to &quot;单机模式配置&quot;">​</a></h4><p>在 ZooKeeper 的单机模式下，整个 ZooKeeper 服务只运行在一台服务器节点下。在 zoo.cfg 配置文件中，我们只定义了基本的 dataDir 目录和 clientPort 端口号等信息。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tickTime</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">dataDir</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">zookeeper </span></span>
<span class="line"><span style="color:#E1E4E8;">clientPort</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2181</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tickTime</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">dataDir</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">zookeeper </span></span>
<span class="line"><span style="color:#24292E;">clientPort</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2181</span></span></code></pre></div><h4 id="伪集群模式配置" tabindex="-1">伪集群模式配置 <a class="header-anchor" href="#伪集群模式配置" aria-label="Permalink to &quot;伪集群模式配置&quot;">​</a></h4><p>与单机模式相比，伪集群模式的意思是：<strong>虽然 ZooKeeper 服务配置有多台服务器节点，但是这些集群服务器都运行在同一台机器上。</strong> 通常伪集群服务器在配置的时候，每台服务器间采用不同的端口号进行区分，多用在本地开发或测试中。</p><p>如下面的代码所示，在配置伪集群的时候，我们将每台服务器的 IP 地址都指向 127.0.0.1，即本机地址，每台 ZooKeeper 对外提供服务的端口分别是 2223、3334、4445。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tickTime</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">dataDir</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">zookeeper </span></span>
<span class="line"><span style="color:#E1E4E8;">clientPort</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2181</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">127.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2222</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2223</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">127.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3333</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3334</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">3</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">127.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">4444</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">4445</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tickTime</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">dataDir</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">zookeeper </span></span>
<span class="line"><span style="color:#24292E;">clientPort</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2181</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">127.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2222</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2223</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">127.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3333</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3334</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">3</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">127.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">4444</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">4445</span></span></code></pre></div><h4 id="集群模式配置" tabindex="-1">集群模式配置 <a class="header-anchor" href="#集群模式配置" aria-label="Permalink to &quot;集群模式配置&quot;">​</a></h4><p>集群模式在配置上与伪集群模式基本相同。不同之处在于配置服务器地址列表的时候，<strong>组成 ZooKeeper 集群的各个服务器 IP 地址列表分别指向每台服务在网络中的实际 IP 地址。</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tickTime</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">dataDir</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">zookeeper </span></span>
<span class="line"><span style="color:#E1E4E8;">clientPort</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2181</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">101</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2222</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2223</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">102</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3333</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3334</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">sever.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">103</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">4444</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">4445</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tickTime</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">dataDir</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">zookeeper </span></span>
<span class="line"><span style="color:#24292E;">clientPort</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2181</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">101</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2222</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2223</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">102</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3333</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3334</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">sever.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">103</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">4444</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">4445</span></span></code></pre></div><p>在 ZooKeeper 集群的三种模式中，单机模式和伪集群模式经常用于开发和测试中。而分别利用不同网络上的物理机器组成的 ZooKeeper 集群经常被我们作为生成系统的环境配置方式。</p><h3 id="容器化部署" tabindex="-1">容器化部署 <a class="header-anchor" href="#容器化部署" aria-label="Permalink to &quot;容器化部署&quot;">​</a></h3><p>介绍完 ZooKeeper 服务器三种模式的配置方法后，接下来我们学习如何利用容器化技术来部署 ZooKeeper 集群。</p><p>首先，我们来了解一下什么是容器化技术。在我们前面的课程中，无论是在单机模式下在 ZooKeeper 数据模型中创建数据节点，还是在集群模式中，ZooKeeper 集群进行 Leader 节点选举，它们的实现都依赖于 ZooKeeper 服务部署在真实的物理机器上运行。</p><p>随着 IT 技术的发展，人们开始设想能否通过软件的方式，在一台机器上模拟出多台机器，突破单体物理机器的限制，利用一台物理机器的计算资源模拟出多台机器，为技术开发提供更加灵活和高效的环境。因此，有了我们比较熟悉的 VMware Workstation 等虚拟化技术软件。</p><p>利用该软件，我们可以在单一的桌面系统上，同时运行多个不同的操作系统。每个操作系统都可以看作独立的计算机。可以在不同的系统上进行程序开发、测试、服务部署等工作。虽然 VMware Workstation 为我们解决了系统资源虚拟化的问题，但是这种实现方式也有自身的缺点，比如每个虚拟机实例都需要运行客户端操作系统的完整副本以及其中包含的大量应用程序。从实际运行的角度来说，这会对物理机资源产生较大占用，也不利于整个虚拟系统的扩展和维护。</p><p>接下来我们要介绍的另一种容器化解决方式叫作 Docker，在实现容器化部署的同时，避免了 VMware Workstation 的上述问题。Docker 是一个开源的应用容器引擎，基于 Go 语言并遵从 Apache2.0 协议开源。与 VMware Workstation 相比，Docker 容器更加轻量化。在 Web 网站自动化部署、持续集成与发布等使用场景中具有广泛的应用。</p><p>本课时中，我们也使用 Docker 容器化技术来实现一个生产环境中的 ZooKeeper 集群部署案例。</p><h3 id="使用-docker-部署" tabindex="-1">使用 Docker 部署 <a class="header-anchor" href="#使用-docker-部署" aria-label="Permalink to &quot;使用 Docker 部署&quot;">​</a></h3><h4 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h4><p>为了使用 Docker 容器技术部署我们的应用服务，首先，我们要在服务器上安装 Docker 软件。以 Linux 系统中的 CentOS 7 64 位版本为例。如下面的代码所示，通过 curl 命令使用官方安装脚本自动安装。curl 通过资源地址获取资源到本地进行安装。而国内服务器由于网络等原因可能无法访问默认的 Docker 资源服务器，因此这里采用的是国内阿里云的镜像资源服务器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">fsSL https</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//get.docker.com | bash -s docker --mirror Aliyun</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">fsSL https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//get.docker.com | bash -s docker --mirror Aliyun</span></span></code></pre></div><h4 id="创建-docer-服务器" tabindex="-1">创建 Docer 服务器 <a class="header-anchor" href="#创建-docer-服务器" aria-label="Permalink to &quot;创建 Docer 服务器&quot;">​</a></h4><p>安装完 Docker 后，接下来我们就开始部署 ZooKeeper 的集群环境。这里的集群环境仍然由三台 Linux 服务器组成。而与上面我们介绍的利用网络中三台实体机器不同，这三台服务器可以通过 Docker 的方式来创建。</p><p>如下面的代码所示，首先打开系统终端，输入 docker pull 获取需要的系统镜像文件，这里选择的是 3.6 版本的 ZooKeeper，当然我们也可以不指定具体版本号，系统会默认拉取最新版本的 ZooKeeper 。之后我们通过 docker run 命令来启动 ZooKeeper 镜像服务器。执行完这两个步骤，我们就拥有一台运行 ZooKeeper 服务的服务器了。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">docker pull zookeeper</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3.6</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">docker run </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zookeeper1 </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">net</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">host zookeeper</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">docker pull zookeeper</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3.6</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">docker run </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zookeeper1 </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">net</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">host zookeeper</span></span></code></pre></div><h4 id="配置-zookeeper-服务" tabindex="-1">配置 ZooKeeper 服务 <a class="header-anchor" href="#配置-zookeeper-服务" aria-label="Permalink to &quot;配置 ZooKeeper 服务&quot;">​</a></h4><p>创建完 ZooKeeper 服务器，接下来就要通过 zoo.cfg 文件来配置 ZooKeeper 服务。与部署在物理机器上不同，我们通过 docker exec 命令进入 Docker 创建的 ZooKeeper 服务器中，之后通过 vim 命令打开 zoo.cfg 文件进行相关配置。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">docker exec </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">it zookeeper1 </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bash </span></span>
<span class="line"><span style="color:#E1E4E8;">vim </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">conf</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">zoo.cfg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">docker exec </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">it zookeeper1 </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bash </span></span>
<span class="line"><span style="color:#24292E;">vim </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">conf</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">zoo.cfg</span></span></code></pre></div><h4 id="多台服务器配置" tabindex="-1">多台服务器配置 <a class="header-anchor" href="#多台服务器配置" aria-label="Permalink to &quot;多台服务器配置&quot;">​</a></h4><p>按照上面介绍的方法，如果我们想搭建三台服务器规模的 ZooKeeper 集群服务，就需要重复上面的步骤三次，并分别在创建的三台 ZooKeeper 服务器进行配置。</p><p>不过在实际生产环境中，我们需要的 ZooKeeper 规模可能远远大于三台，而且这种逐一部署的方式不但浪费时间，在配置过程中出错率也较高。因此，这里介绍另一种配置方式，通过 Docker Compose 的方式来部署 ZooKeeper 集群。</p><p><strong>Docker Compose 是用于定义和运行多容器 Docker 应用程序的工具</strong>。通过 Compose，你可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。如下面的代码所示，我们创建了一个名为 docker-compose.yml 的配置文件。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">version</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;3.6&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">services</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	zk1</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		image</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zookeeper</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3.6</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">		restart</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> always</span></span>
<span class="line"><span style="color:#E1E4E8;">		hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk1</span></span>
<span class="line"><span style="color:#E1E4E8;">		container_name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk1 </span></span>
<span class="line"><span style="color:#E1E4E8;">		ports</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2181</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span></span>
<span class="line"><span style="color:#E1E4E8;">		environment</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_MY_ID</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_SERVERS</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk2</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">3</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk3</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span></span>
<span class="line"><span style="color:#E1E4E8;">	zk2</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		image</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zookeeper</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3.6</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">		restart</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> always</span></span>
<span class="line"><span style="color:#E1E4E8;">		hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk2</span></span>
<span class="line"><span style="color:#E1E4E8;">		container_name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk2</span></span>
<span class="line"><span style="color:#E1E4E8;">		ports</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2182</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span></span>
<span class="line"><span style="color:#E1E4E8;">		environment</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_MY_ID</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_SERVERS</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk2</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">3</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk3</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">	zk3</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		image</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zookeeper</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3.6</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">		restart</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> always</span></span>
<span class="line"><span style="color:#E1E4E8;">		hostname</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk3</span></span>
<span class="line"><span style="color:#E1E4E8;">		container_name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> zk3</span></span>
<span class="line"><span style="color:#E1E4E8;">		ports</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2183</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span></span>
<span class="line"><span style="color:#E1E4E8;">		environment</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_MY_ID</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">		 ZOO_SERVERS</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">1</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk1</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">2</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk2</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span><span style="color:#E1E4E8;"> server.</span><span style="color:#FDAEB7;font-style:italic;">3</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">zk3</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2888</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">3888</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">version</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;3.6&#39;</span></span>
<span class="line"><span style="color:#24292E;">services</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">	zk1</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		image</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zookeeper</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3.6</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">		restart</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> always</span></span>
<span class="line"><span style="color:#24292E;">		hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk1</span></span>
<span class="line"><span style="color:#24292E;">		container_name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk1 </span></span>
<span class="line"><span style="color:#24292E;">		ports</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2181</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span></span>
<span class="line"><span style="color:#24292E;">		environment</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_MY_ID</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_SERVERS</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk2</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">3</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk3</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span></span>
<span class="line"><span style="color:#24292E;">	zk2</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		image</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zookeeper</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3.6</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">		restart</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> always</span></span>
<span class="line"><span style="color:#24292E;">		hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk2</span></span>
<span class="line"><span style="color:#24292E;">		container_name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk2</span></span>
<span class="line"><span style="color:#24292E;">		ports</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2182</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span></span>
<span class="line"><span style="color:#24292E;">		environment</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_MY_ID</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_SERVERS</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk2</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">3</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk3</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">	zk3</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		image</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zookeeper</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3.6</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">		restart</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> always</span></span>
<span class="line"><span style="color:#24292E;">		hostname</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk3</span></span>
<span class="line"><span style="color:#24292E;">		container_name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> zk3</span></span>
<span class="line"><span style="color:#24292E;">		ports</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2183</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span></span>
<span class="line"><span style="color:#24292E;">		environment</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_MY_ID</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">		 ZOO_SERVERS</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">1</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk1</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">2</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk2</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span><span style="color:#24292E;"> server.</span><span style="color:#B31D28;font-style:italic;">3</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">zk3</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2888</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">3888</span></span></code></pre></div><p>在这个文件中，我们将需要手工逐一创建的 ZooKeeper 服务器的创建过程，通过 docker-compose.yml 配置文件的方式进行了描述。在这个配置文件中，我们告诉 Docker 服务分别创建并运行三个 ZooKeeper 服务器，并分别将本地的 2181, 2182, 2183 端口绑定到对应容器的 2181 端口上。</p><p>Docker 容器化方式部署的服务默认情况下对外界隔离，默认的 Docker 容器内服务无法被外界访问，因此需要进行端口映射，将外部物理机器的端口映射到对应的 Docker 服务器端口，这样外界在对物理机器进行访问后，系统会自动映射该端口到对应的 Docker 服务上。</p><p>在 environment 节点下，我们配置了 ZooKeeper 集群需要的两个配置参数，分别是 ZOO_MY_ID 以及 ZooKeeper 集群的服务器列表 ZOO_SERVERS。ZOO_MY_ID 是 1-255 之间的整数，必须在集群中唯一。</p><h4 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务&quot;">​</a></h4><p>在编写完 docker-compose.yml 配置文件的相关信息后，接下来我们就启动 docker 创建 ZooKeeper 集群服务。如下面的代码所示，首先，我们打开系统终端，输入 docker-compose up 命令来启动服务器。之后终端会显示我们配置的三台服务器都成功启动。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">compose up </span></span>
<span class="line"><span style="color:#E1E4E8;">Name              Command               State           Ports </span></span>
<span class="line"><span style="color:#F97583;">----------------------------------------------------------------------</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">zk1   </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">entrypoint.sh zkSe ...   Up      </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span><span style="color:#F97583;">-&gt;</span><span style="color:#79B8FF;">2181</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tcp </span></span>
<span class="line"><span style="color:#E1E4E8;">zk2   </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">entrypoint.sh zkSe ...   Up      </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2182</span><span style="color:#F97583;">-&gt;</span><span style="color:#79B8FF;">2181</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tcp </span></span>
<span class="line"><span style="color:#E1E4E8;">zk3   </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">entrypoint.sh zkSe ...   Up      </span><span style="color:#79B8FF;">0.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2183</span><span style="color:#F97583;">-&gt;</span><span style="color:#79B8FF;">2181</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tcp</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">docker</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">compose up </span></span>
<span class="line"><span style="color:#24292E;">Name              Command               State           Ports </span></span>
<span class="line"><span style="color:#D73A49;">----------------------------------------------------------------------</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">zk1   </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">entrypoint.sh zkSe ...   Up      </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span><span style="color:#D73A49;">-&gt;</span><span style="color:#005CC5;">2181</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tcp </span></span>
<span class="line"><span style="color:#24292E;">zk2   </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">entrypoint.sh zkSe ...   Up      </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2182</span><span style="color:#D73A49;">-&gt;</span><span style="color:#005CC5;">2181</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tcp </span></span>
<span class="line"><span style="color:#24292E;">zk3   </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">entrypoint.sh zkSe ...   Up      </span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2183</span><span style="color:#D73A49;">-&gt;</span><span style="color:#005CC5;">2181</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tcp</span></span></code></pre></div><h4 id="访问服务" tabindex="-1">访问服务 <a class="header-anchor" href="#访问服务" aria-label="Permalink to &quot;访问服务&quot;">​</a></h4><p>ZooKeeper 集群配置完成并成功启动后，我们可以通过客户端命令来访问集群服务。如下面的代码所示，通过 zkCli.sh -server 客户端命令来访问集群服务器。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">zkCli.sh </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">server localhost</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span><span style="color:#E1E4E8;">,localhost</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2182</span><span style="color:#E1E4E8;">,localhost</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2183</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">zkCli.sh </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">server localhost</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span><span style="color:#24292E;">,localhost</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2182</span><span style="color:#24292E;">,localhost</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2183</span></span></code></pre></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>本课时我们介绍了 ZooKeeper 的三种部署方式，学习了在这三种部署方式下，zoo.cfg 的不同配置方式。之后介绍了什么是容器化技术，并重点介绍了目前最为流行的容器化技术 Docker。并利用 Docker 创建了三台 Linux 服务器，通过这三台服务器来部署 ZooKeeper 集群。</p><p>相比本课时的例子，在实际生产环境中，对于 ZooKeeper 的性能要求可能更高。为了满足性能的要求，我们可以在三台服务器的基础上对 Docker 服务器进行动态增加来满足性能要求，这也是本课时留给你的作业。</p><p>在扩展集群规模的时候，根据 ZooKeeper 集群中 Leader 节点的选举原则，整个 ZooKeeper 集群服务器在数量上，尽量采用奇数原则，从而满足当 Leader 节点选举时，能够最终产生大多数的投票结果，避免偶数服务器一直存在票数相等的问题，从而出现脑裂等问题。</p>`,51),e=[p];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const k=s(l,[["render",t]]);export{d as __pageData,k as default};
