import{_ as o,j as e,o as t,g as c,k as l,h as n,Q as p,s}from"./chunks/framework.a0d18f64.js";const R=JSON.parse('{"title":"06服务发现：如何使用Eureka客户端并理解其实现原理？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Cloud 原理与实战_文档/(4751) 06  服务发现：如何使用 Eureka 客户端并理解其实现原理？.md","filePath":"posts/backEnd/Spring Cloud 原理与实战_文档/(4751) 06  服务发现：如何使用 Eureka 客户端并理解其实现原理？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/Spring Cloud 原理与实战_文档/(4751) 06  服务发现：如何使用 Eureka 客户端并理解其实现原理？.md"},E=p("",18),y=p("",9),i=p("",23),g=p("",17),u=s("p",null,"Eureka 缓存刷选流程时序图",-1),d=s("h3",{id:"小结与预告",tabindex:"-1"},[n("小结与预告 "),s("a",{class:"header-anchor",href:"#小结与预告","aria-label":'Permalink to "小结与预告"'},"​")],-1),F=s("p",null,"延续上一课时内容，今天我们讨论了 Eureka 客户端组件的使用方法和实现原理。在使用方法上，我们同样只需要在 Spring Boot 的启动类中添加一个注解，就可以将服务自身注册到 Eureka 服务器中。而在实现原理上，服务的提供者和服务的消费者都是 Eureka 客户端，但却有不同的操作流程，需要我们分别进行分析。",-1),A=s("p",null,"这里给你留一道思考题：针对位于 Eureka 服务器上的服务列表信息，Eureka 客户端如何实现注册信息的同步和增量更新？",-1),h=s("p",null,"负载均衡与服务治理关系密切。下一课时，我们就将基于Eureka 的已知内容，讨论 Spring Cloud 中的客户端负载均衡组件 Ribbon 与 Eureka 之间的交互关系以及使用方法。",-1);function C(k,D,v,f,m,S){const a=e("Image");return t(),c("div",null,[E,l(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/58/DB/Ciqc1F9wT66APdccAAB8da4b_EM993.png"}),n(),y,l(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/58/E7/CgqCHl9wUAmATPQxAAAqMtQEPGk029.png"}),n(),i,l(a,{alt:"Lark20201009-104135.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A4/CgqCHl9_zgeAKVhNAAHaQoJ_1kI602.png"}),n(),g,l(a,{alt:"Lark20201009-104138.png",src:"https://s0.lgstatic.com/i/image/M00/5B/99/Ciqc1F9_zfGAOViSAAGXRnBlAdc236.png"}),n(),u,d,F,A,h])}const b=o(r,[["render",C]]);export{R as __pageData,b as default};
