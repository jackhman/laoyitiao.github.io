import{_ as o,j as e,o as t,g as c,k as l,h as n,s,Q as p}from"./chunks/framework.4e7d56ce.js";const f=JSON.parse('{"title":"26案例：如何通过ServiceMeh实现熔断和限流？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3821) 26  案例：如何通过 Service Meh 实现熔断和限流？.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3821) 26  案例：如何通过 Service Meh 实现熔断和限流？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3821) 26  案例：如何通过 Service Meh 实现熔断和限流？.md"},E=s("h1",{id:"_26案例-如何通过servicemeh实现熔断和限流",tabindex:"-1"},[n("26案例：如何通过ServiceMeh实现熔断和限流？ "),s("a",{class:"header-anchor",href:"#_26案例-如何通过servicemeh实现熔断和限流","aria-label":'Permalink to "26案例：如何通过ServiceMeh实现熔断和限流？"'},"​")],-1),y=s("p",null,"在前面的课时中，我们分别学习了熔断、限流在服务高可用架构中的重要性和具体使用方式。但是，在具体使用过程中，我们会发现实现熔断和限流的代码和实现业务逻辑的代码耦合在一起，对系统的可维护性产生了不良的影响。",-1),F=s("p",null,"而 Service Mesh 作为下一代的微服务架构，它将服务间的通信从基础设施中抽离出来，还可以替这些业务服务完成熔断和限流等功能，而且完全对业务代码透明，这妥妥地提高了开发效率，因为普通开发者能够更加专注于业务开发。",-1),i=s("p",null,"下面我们就来看一下如何通过Service Mesh 实现熔断和限流。",-1),C=s("p",null,"在前面的第14课时中，我们已经学习了 Service Mesh中Istio 的基础知识，以及如何使用它来进行服务注册和发现，没有学习和稍有遗忘的同学们可以回过去阅读或温习一下。下面我们就直接讲解 Istio 实现熔断和限流的优势、实现案例和相关原理。",-1),B=s("h3",{id:"service-mesh-基本原理和优缺点",tabindex:"-1"},[n("Service Mesh 基本原理和优缺点 "),s("a",{class:"header-anchor",href:"#service-mesh-基本原理和优缺点","aria-label":'Permalink to "Service Mesh 基本原理和优缺点"'},"​")],-1),d=s("p",null,"本课时我们关注的是Istio 数据平面的高性能智能网络代理，它是基于 Envoy 改进的 Istio-Proxy，控制和协调了被代理服务的所有网络通信，同时也负责收集和上报相关的监控数据。也就是说，代理服务跟外界的所有网络请求都会经过该网络代理，所以网络代理可以代替代理服务实现熔断和限流等功能。",-1),h=p("<p>Istio 服务间网络请求示意图</p><p>如上图所示，当httpbin 服务调用 Java API 提供的网络 RESTful 接口时，其发送的网络请求会经过它们各自的网络代理 proxy，那么 httpbin的代理就可以为其提供服务<strong>熔断</strong>相关的机制，当调用 Java API 持续出错时，就不再将网络请求发送出去，而是直接本地返回默认数值。</p><p>而 Java API 的网络代理可以为其提供<strong>限流</strong>功能，当 httpbin 的请求流量过大时，Java API 的网络代理会对其中一部分请求进行限流，直接返回默认的响应，只将部分请求转发给 Java API 进行处理。</p><p>下面，我们就以熔断为例，对比一下使用Service Mesh 方式和使用 Hystrix 类通用组件的优缺点。</p><ul><li><p><strong>Service Mesh 是&quot;黑盒&quot;的熔断工具，而 Hystrix 等通用组件则可以被看成是&quot;白盒&quot;的熔断工具。</strong> 具体判断标准是看二者到底是通过外部监控系统监控服务网络请求情况，还是在服务内部监控服务的请求响应情况。如下图所示，Service Mesh 是独立于服务实例之外的存在，通过代理所有服务实例的网络请求来监控响应信息实现熔断机制；而 Hystrix 等通用组件，则是在服务实例中发挥作用，作为服务实例进行网络请求的基础层之一，来监控网络请求信息。</p></li><li><p><strong>Service Mesh 是无侵入地实现熔断，而 Hystrix 等通用组件则需要侵入具体服务业务代码中。</strong> Service Mesh 通过在网络层面配置熔断策略，可以在不更改服务代码的情况下为服务实例提供熔断保护，其对服务来说几乎是无感和透明的。通过这个方法，Service Mesh 适用于任何语言或者框架开发的服务，并且开发人员也不必为每个服务单独配置或重新编程，减少了开发人员的工作量。Hystrix等通用组件需要更改服务的具体代码来引入其第三方依赖库，这些通用组件目前也只支持几类较为主流的编程语言，适用性不如 Service Mesh高。除此之外，开启或关闭熔断机制需要重新部署或者重启服务实例，这对高可用的服务系统来说代价很高。</p></li><li><p><strong>Service Mesh 熔断机制能提供的回退行为较为有限，而 Hystrix 等通用组件提供了较为丰富的回退实现。</strong> 正是因为 Service Mesh 是无侵入的，所以它只能在系统触发熔断机制时，通过 Proxy 返回 HTTP 503 错误，期望应用服务在应对503错误时进行各类回退操作。 而 Hystrix等通用组件在其 API 层面提供了多种的回退操作实现，这样可以实现各种不同类型的回退操作，比如单一的默认值、使用缓存结果或者去调用其他服务等。</p></li></ul>",5),g=p(`<p>Hystrix 和 Istio 的使用区别</p><p>总体来说，Istio是使用了 Proxy 作为服务的网络层面的代理来实现熔断机制的，不依赖底层具体的代码和技术栈，而且在部署后也可以进行重新配置和部署。Hystrix等通用组件则需要在代码级别实现熔断机制，因此它需要在开发阶段时就做出具体熔断配置等决策，后期变更配置成本比较高。</p><h3 id="istio-的熔断限流实践" tabindex="-1">Istio 的熔断限流实践 <a class="header-anchor" href="#istio-的熔断限流实践" aria-label="Permalink to &quot;Istio 的熔断限流实践&quot;">​</a></h3><p>Istio使用目标规则中的 TrafficPolicy 属性来配置熔断和限流，其中 <strong>connectionPool 属性配置限流方式，outlierDetection 配置异常检测的熔断方式</strong>。下面，我们来分别看一下这二者是如何配置的。</p><p><strong>ConnectionPool 下有 TCP 和 HTTP 两个类别的配置，二者相互协作，为服务提供有关限流的配置。</strong></p><p>TCP 相关的基础配置有maxConnections 和 connectTimeout。</p><ul><li><p>maxConnections 表示到目标服务最大的 HTTP1/TCP 连接数量。它只会限制基于HTTP1.1协议的连接，不会影响基于HTTP2的连接，因为 HTTP2 协议只建立一次连接。</p></li><li><p>connectTimeout 表示建立 TCP 连接时的超时时间，默认单位是秒。超出该时间，则连接会被自动断开。</p></li></ul><p>HTTP下的配置包括http1MaxPendingRequests、http2MaxRequests 和 maxRequestsPerConnection 三种。</p><ul><li><p>http1MaxPendingRequests 表示HTTP 请求处于pending状态下的最大请求数，也就是目标服务最多可以同时处理多少个 HTTP 请求，默认是1024 个。</p></li><li><p>http2MaxRequests 表示目标服务最大的 HTTP2 请求数量，默认是1024。</p></li><li><p>maxRequestsPerConnection 表示每个 TCP 连接可以被多少个请求复用，如果将这一参数设置为 1，则会禁止 keepalive 特性。</p></li></ul><p><strong>OutlierDetection 下相关的配置项涉及服务的熔断机制</strong>，具体有如下几个基础配置。</p><ul><li><p>consecutiveErrors 表示如果目标服务连续返回多少次错误码后，会将目标服务从可用服务实例列表中剔除，也就是说进行熔断，不再请求目标服务。当通过HTTP请求访问服务，返回码为502、503或504时，Istio 会将本次网络请求判断为发生错误。该属性配置的默认值是5，也就是说如果目标实例连续5个 http请求都返回了 5xx 的错误码，则该服务实例会被剔除，不再接受客户端的网络请求。</p></li><li><p>Interval 表示服务剔除的时间间隔，即在interval 时间周期内发生1个consecutiveErrors错误，则触发服务熔断。其单位包括小时、分钟、秒和毫秒，默认值是10秒。</p></li><li><p>baseEjectionTime 表示目标服务被剔除后，至少要维持剔除状态多长时间。这段时间内，目标服务将保持拒绝访问状态。该时间会随着被剔除次数的增加而自动增加，时间为baseEjectionTime 和驱逐次数的乘积。其单位包括小时、分钟、秒和毫秒，默认是30秒。</p></li><li><p>maxEjectionPercent 表示可用服务实例列表中实例被移除的最大百分比，默认是10%。当超出这个比率时，即使再次发生熔断，也不会将服务剔除，这样就避免了因为瞬时错误导致大多数服务实例都被剔除的问题。</p></li><li><p>minHealthPercent 表示健康模式的最小百分比，也就是所有服务实例中健康（未被剔除）的比率。当低于这一比率时，整个集群被认为处于非健康状态，outlierDetection配置相关的服务剔除熔断机制将被关闭，不再进行服务健康检查，所有服务实例都可以被请求访问，包含健康和不健康的主机。该属性的默认值是50%，并且minHealthPercent 和 maxEjectionPercent 的和一般都不超过100%。</p></li></ul><p>下面，我们以官方提供的 httpbin 服务为例演示一下上述配置的使用。首先要部署 httpbin 服务，如果已经开启了自动注入模式，就使用如下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">section26/httpbin.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">section26/httpbin.yaml</span></span></code></pre></div><p>否则，需要使用命令手动注入：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;(</span><span style="color:#B392F0;">istioctl</span><span style="color:#9ECBFF;"> kube-inject </span><span style="color:#79B8FF;">-f</span><span style="color:#9ECBFF;"> section26/httpbin.yaml)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;(</span><span style="color:#6F42C1;">istioctl</span><span style="color:#032F62;"> kube-inject </span><span style="color:#005CC5;">-f</span><span style="color:#032F62;"> section26/httpbin.yaml)</span></span></code></pre></div><p>接着，创建一个目标规则来配置相关的限流和熔断机制，具体命令如下所示：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">kubectl apply </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">f </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">EOF</span></span>
<span class="line"><span style="color:#E1E4E8;">apiVersion</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> networking.istio.io</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">v1alpha3</span></span>
<span class="line"><span style="color:#E1E4E8;">kind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">DestinationRule</span><span style="color:#E1E4E8;">    # 目标规则</span></span>
<span class="line"><span style="color:#E1E4E8;">metadata</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> httpbin</span></span>
<span class="line"><span style="color:#E1E4E8;">spec</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  host</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> httpbin          # 目标服务是 httpbin    </span></span>
<span class="line"><span style="color:#E1E4E8;">  trafficPolicy</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    connectionPool</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">      # 限流相关的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">      tcp</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        maxConnections</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">      http</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        http1MaxPendingRequests</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">        maxRequestsPerConnection</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    outlierDetection</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">    # 熔断剔除相关的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">      consecutiveErrors</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">      interval</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 1s</span></span>
<span class="line"><span style="color:#E1E4E8;">      baseEjectionTime</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 3m</span></span>
<span class="line"><span style="color:#E1E4E8;">      maxEjectionPercent</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#79B8FF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">kubectl apply </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">f </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">EOF</span></span>
<span class="line"><span style="color:#24292E;">apiVersion</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> networking.istio.io</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">v1alpha3</span></span>
<span class="line"><span style="color:#24292E;">kind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DestinationRule</span><span style="color:#24292E;">    # 目标规则</span></span>
<span class="line"><span style="color:#24292E;">metadata</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> httpbin</span></span>
<span class="line"><span style="color:#24292E;">spec</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  host</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> httpbin          # 目标服务是 httpbin    </span></span>
<span class="line"><span style="color:#24292E;">  trafficPolicy</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    connectionPool</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">      # 限流相关的配置</span></span>
<span class="line"><span style="color:#24292E;">      tcp</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        maxConnections</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">      http</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">        http1MaxPendingRequests</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        maxRequestsPerConnection</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    outlierDetection</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">    # 熔断剔除相关的配置</span></span>
<span class="line"><span style="color:#24292E;">      consecutiveErrors</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">      interval</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 1s</span></span>
<span class="line"><span style="color:#24292E;">      baseEjectionTime</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 3m</span></span>
<span class="line"><span style="color:#24292E;">      maxEjectionPercent</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#005CC5;">EOF</span></span></code></pre></div><p>对于限流而言，该配置表示服务最多接收一个 TCP 连接，HTTP 请求pending状态的最大请求为1，后端请求的最大数量也为1，超过上述这些数量，则 Proxy 会自动为 httpbin 限流，返回 503 异常。对于熔断而言，该配置表示每秒钟对 httpbin 的服务实例进行一次熔断剔除检查，如果处理网络请求，连续返回1次 5xx 错误码则会被认定为不健康，要从可用服务列表中剔除 3分钟。</p><p>接着，我们部署 fortio 测试客户端向 httpbin 发起请求检查一下上述配置的正确性。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;(</span><span style="color:#B392F0;">istioctl</span><span style="color:#9ECBFF;"> kube-inject </span><span style="color:#79B8FF;">-f</span><span style="color:#9ECBFF;"> section26/sample-client/fortio-deploy.yaml)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;(</span><span style="color:#6F42C1;">istioctl</span><span style="color:#032F62;"> kube-inject </span><span style="color:#005CC5;">-f</span><span style="color:#032F62;"> section26/sample-client/fortio-deploy.yaml)</span></span></code></pre></div><p>然后使用 fortio 客户端请求<a href="http://httpbin:8000/get" target="_blank" rel="noreferrer">http://httpbin:8000/get</a>接口，可用获得正常的响应码为200的返回值。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">FORTIO_POD=$(</span><span style="color:#B392F0;">kubectl</span><span style="color:#9ECBFF;"> get pods </span><span style="color:#79B8FF;">-lapp=fortio</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#9ECBFF;"> &#39;jsonpath={.items[0].metadata.name}&#39;)</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$FORTIO_POD</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-quiet</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://httpbin:8000/get</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 返回 200 的正常请求返回值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">export</span><span style="color:#24292E;"> </span><span style="color:#032F62;">FORTIO_POD=$(</span><span style="color:#6F42C1;">kubectl</span><span style="color:#032F62;"> get pods </span><span style="color:#005CC5;">-lapp=fortio</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-o</span><span style="color:#032F62;"> &#39;jsonpath={.items[0].metadata.name}&#39;)</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$FORTIO_POD</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fortio</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/fortio</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-quiet</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://httpbin:8000/get</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 返回 200 的正常请求返回值</span></span></code></pre></div><p>再接着，为了触发 httpbin 的限流机制，我们让fortio 以两个线程模式运行，每个线程向 httpbin 发送20个请求，具体命令和返回值如下所示：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$FORTIO_POD</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">load</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-qps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-loglevel</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Warning</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://httpbin:8000/get</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">I</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logger.go:11</span><span style="color:#F97583;">5&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Log</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">level</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">now</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Warning</span><span style="color:#E1E4E8;"> (was </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Info</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.6</span><span style="color:#9ECBFF;">.8</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">running</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">queries</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">per</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">second,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">-</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">procs,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calls:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://httpbin:8000/get</span></span>
<span class="line"><span style="color:#B392F0;">Starting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qps</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">thread</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">s</span><span style="color:#E1E4E8;">) [gomax </span><span style="color:#79B8FF;">4</span><span style="color:#9ECBFF;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exactly</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calls</span><span style="color:#E1E4E8;"> (10 </span><span style="color:#9ECBFF;">per</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">thread</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">08:14:45</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">W</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_client.go:69</span><span style="color:#F97583;">8&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Parsed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">non</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ok</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> (HTTP/1.1 </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Ended</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">after</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">26.459047</span><span style="color:#9ECBFF;">ms</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calls.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qps=</span><span style="color:#79B8FF;">755.89</span></span>
<span class="line"><span style="color:#B392F0;">Aggregated</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Function</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Time</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0021580284</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+/-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.001323</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.000221019</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.005158471</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.043160568</span></span>
<span class="line"><span style="color:#6A737D;"># range, mid point, percentile, count</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">= 0.000221019 </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">= 0.001 , 0.00061051 , 30.00, 6</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 0.001 </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">= 0.002 , 0.0015 , 35.00, 1</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 0.002 </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">= 0.003 , 0.0025 , 70.00, 7</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 0.003 </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">= 0.004 , 0.0035 , 95.00, 5</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 0.005 </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">= 0.00515847 , 0.00507924 , 100.00, 1</span></span>
<span class="line"><span style="color:#6A737D;"># target 50% 0.00242857</span></span>
<span class="line"><span style="color:#6A737D;"># target 75% 0.0032</span></span>
<span class="line"><span style="color:#6A737D;"># target 90% 0.0038</span></span>
<span class="line"><span style="color:#6A737D;"># target 99% 0.00512678</span></span>
<span class="line"><span style="color:#6A737D;"># target 99.9% 0.0051553</span></span>
<span class="line"><span style="color:#B392F0;">Sockets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">used:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> (for </span><span style="color:#9ECBFF;">perfect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keepalive,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">would</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Jitter:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#B392F0;">Code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> (70.0 </span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> (30.0 </span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Header</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Sizes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">161</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+/-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">105.4</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">230</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3220</span></span>
<span class="line"><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Body/Total</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Sizes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">668</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+/-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">279.5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">241</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">851</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13360</span></span>
<span class="line"><span style="color:#B392F0;">All</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">done</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calls</span><span style="color:#E1E4E8;"> (plus </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">warmup</span><span style="color:#E1E4E8;">) 2.158 ms avg, 755.9 qps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$FORTIO_POD</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fortio</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/fortio</span><span style="color:#24292E;"> </span><span style="color:#032F62;">load</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-qps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-loglevel</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Warning</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://httpbin:8000/get</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">I</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logger.go:11</span><span style="color:#D73A49;">5&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Log</span><span style="color:#24292E;"> </span><span style="color:#032F62;">level</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">now</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Warning</span><span style="color:#24292E;"> (was </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Info</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Fortio</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.6</span><span style="color:#032F62;">.8</span><span style="color:#24292E;"> </span><span style="color:#032F62;">running</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">queries</span><span style="color:#24292E;"> </span><span style="color:#032F62;">per</span><span style="color:#24292E;"> </span><span style="color:#032F62;">second,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">-</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">4</span><span style="color:#24292E;"> </span><span style="color:#032F62;">procs,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calls:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://httpbin:8000/get</span></span>
<span class="line"><span style="color:#6F42C1;">Starting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qps</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">thread</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">s</span><span style="color:#24292E;">) [gomax </span><span style="color:#005CC5;">4</span><span style="color:#032F62;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exactly</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calls</span><span style="color:#24292E;"> (10 </span><span style="color:#032F62;">per</span><span style="color:#24292E;"> </span><span style="color:#032F62;">thread</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">08:14:45</span><span style="color:#24292E;"> </span><span style="color:#032F62;">W</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_client.go:69</span><span style="color:#D73A49;">8&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Parsed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">non</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ok</span><span style="color:#24292E;"> </span><span style="color:#032F62;">code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> (HTTP/1.1 </span><span style="color:#005CC5;">503</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Ended</span><span style="color:#24292E;"> </span><span style="color:#032F62;">after</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">26.459047</span><span style="color:#032F62;">ms</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calls.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qps=</span><span style="color:#005CC5;">755.89</span></span>
<span class="line"><span style="color:#6F42C1;">Aggregated</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Function</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Time</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0021580284</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+/-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.001323</span><span style="color:#24292E;"> </span><span style="color:#032F62;">min</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.000221019</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.005158471</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.043160568</span></span>
<span class="line"><span style="color:#6A737D;"># range, mid point, percentile, count</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">= 0.000221019 </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 0.001 , 0.00061051 , 30.00, 6</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 0.001 </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 0.002 , 0.0015 , 35.00, 1</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 0.002 </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 0.003 , 0.0025 , 70.00, 7</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 0.003 </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 0.004 , 0.0035 , 95.00, 5</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 0.005 </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">= 0.00515847 , 0.00507924 , 100.00, 1</span></span>
<span class="line"><span style="color:#6A737D;"># target 50% 0.00242857</span></span>
<span class="line"><span style="color:#6A737D;"># target 75% 0.0032</span></span>
<span class="line"><span style="color:#6A737D;"># target 90% 0.0038</span></span>
<span class="line"><span style="color:#6A737D;"># target 99% 0.00512678</span></span>
<span class="line"><span style="color:#6A737D;"># target 99.9% 0.0051553</span></span>
<span class="line"><span style="color:#6F42C1;">Sockets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">used:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> (for </span><span style="color:#032F62;">perfect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keepalive,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">would</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Jitter:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#6F42C1;">Code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> (70.0 </span><span style="color:#032F62;">%</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> (30.0 </span><span style="color:#032F62;">%</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Response</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Header</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Sizes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">161</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+/-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">105.4</span><span style="color:#24292E;"> </span><span style="color:#032F62;">min</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">230</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3220</span></span>
<span class="line"><span style="color:#6F42C1;">Response</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Body/Total</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Sizes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">668</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+/-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">279.5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">min</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">241</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">851</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13360</span></span>
<span class="line"><span style="color:#6F42C1;">All</span><span style="color:#24292E;"> </span><span style="color:#032F62;">done</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calls</span><span style="color:#24292E;"> (plus </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">warmup</span><span style="color:#24292E;">) 2.158 ms avg, 755.9 qps</span></span></code></pre></div><p>从上面的返回值可以看到一共20个请求，状态码为200的请求响应有14个，状态码为503，也就是触发了限流机制而直接拒绝的请求响应有6个。</p><p>最后，我们使用 fortio 来验证熔断机制。使用 fortio 调用 httpbin 的 <a href="http://httpbin:8000/status/502" target="_blank" rel="noreferrer">http://httpbin:8000/status/502</a> 接口，该接口会直接返回状态码为502的响应，这样就触发了上述的outlierDetection 配置，即只要返回一次 5xx 的网络响应就会被熔断剔除。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$FORTIO_POD</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-quiet</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://httpbin:8000/status/502</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$FORTIO_POD</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fortio</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/fortio</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-quiet</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://httpbin:8000/status/502</span></span></code></pre></div><p>那接下来我们就来验证一下 httpbin 是否被熔断剔除了，使用以下命令，连续调用10次相同的接口。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$FORTIO_POD</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/fortio</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">load</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-qps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">http://httpbin:8000/status/502</span></span>
<span class="line"><span style="color:#79B8FF;">....</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">省略</span></span>
<span class="line"><span style="color:#B392F0;">Sockets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">used:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> (for </span><span style="color:#9ECBFF;">perfect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">keepalive,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">would</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Jitter:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#B392F0;">Code</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> (100.0 </span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Header</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Sizes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+/-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Body/Total</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Sizes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">count</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">153</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+/-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">153</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">153</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1530</span></span>
<span class="line"><span style="color:#B392F0;">All</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">done</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calls</span><span style="color:#E1E4E8;"> (plus </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">warmup</span><span style="color:#E1E4E8;">) 0.357 ms avg, 2779.6 qps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$FORTIO_POD</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fortio</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/fortio</span><span style="color:#24292E;"> </span><span style="color:#032F62;">load</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-qps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">  </span><span style="color:#032F62;">http://httpbin:8000/status/502</span></span>
<span class="line"><span style="color:#005CC5;">....</span><span style="color:#24292E;"> </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">省略</span></span>
<span class="line"><span style="color:#6F42C1;">Sockets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">used:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> (for </span><span style="color:#032F62;">perfect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">keepalive,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">would</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Jitter:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#6F42C1;">Code</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">503</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> (100.0 </span><span style="color:#032F62;">%</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">Response</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Header</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Sizes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+/-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">min</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">Response</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Body/Total</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Sizes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">count</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">153</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+/-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">min</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">153</span><span style="color:#24292E;"> </span><span style="color:#032F62;">max</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">153</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1530</span></span>
<span class="line"><span style="color:#6F42C1;">All</span><span style="color:#24292E;"> </span><span style="color:#032F62;">done</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calls</span><span style="color:#24292E;"> (plus </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">warmup</span><span style="color:#24292E;">) 0.357 ms avg, 2779.6 qps</span></span></code></pre></div><p>我们可以发现，所有的请求都是返回的 503，也就是说 httpbin 服务被熔断剔除了，所以才会接收到 503 的响应。</p><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p>本课时我们主要介绍了如何使用 Service Mesh 实现熔断和限流。使用 Service Mesh实现上述功能，可以减少对业务服务代码的入侵，并且可以对现有服务熔断和限流进行随意改造，大大提升了开发和运维效率。</p><p>通过目标规则的配置，我们可以很方便地为服务配置基于 TPC 或者 HTTP 相关指标的限流，保护服务不受外界突发大流量的影响。此外，目标规则还可以为服务配置基于某些网络异常的熔断机制，定时扫描上游服务，发现问题就移除其服务来保护业务服务不被拖垮。</p><p>关于 Service Mesh 的 Istio 组件的集成，你还有什么其他经验？欢迎你在留言区和我分享。</p>`,34);function u(m,b,v,_,P,T){const a=e("Image");return t(),c("div",null,[E,y,F,i,C,B,d,l(a,{alt:"Istio_service_mesh.png",src:"https://s0.lgstatic.com/i/image/M00/55/EE/CgqCHl9q6yiADTC_AAA05D6oqE0082.png"}),n(),h,l(a,{alt:"istio_and_hystrix.png",src:"https://s0.lgstatic.com/i/image/M00/55/EF/CgqCHl9q61aAEwYWAAB6vty4Sd8250.png"}),n(),g])}const A=o(r,[["render",u]]);export{f as __pageData,A as default};
