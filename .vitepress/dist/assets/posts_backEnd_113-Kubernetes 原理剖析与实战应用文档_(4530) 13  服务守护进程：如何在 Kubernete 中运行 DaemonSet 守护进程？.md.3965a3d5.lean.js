import{_ as p,j as e,o,g as t,k as a,s,Q as l}from"./chunks/framework.4e7d56ce.js";const k=JSON.parse('{"title":"DaemonSet 的使用场景 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4530) 13  服务守护进程：如何在 Kubernete 中运行 DaemonSet 守护进程？.md","filePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4530) 13  服务守护进程：如何在 Kubernete 中运行 DaemonSet 守护进程？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4530) 13  服务守护进程：如何在 Kubernete 中运行 DaemonSet 守护进程？.md"},r=s("p",null,"通过前面课程的学习，我们对 Kubernetes 中一些常见工作负载已经有所了解。比如无状态工作负载 Dployment 可以帮助我们运行指定数目的服务副本，并维护其状态，而对于有状态服务来说，我们同样可以采用 StatefulSet 来做到这一点。",-1),E=s("p",null,"但是，在实际使用的时候，有些场景，比如监控各个节点的状态，使用 Deployment 或者 StatefulSet 都无法满足我们的需求，因为这个时候我们可能会有以下这些需求。",-1),y=s("ol",null,[s("li",null,[s("p",null,"希望每个节点上都可以运行一个副本，且只运行一个副本。虽然通过调整 spec.replicas 的数值，可以使之等于节点数目，再配合一些调度策略（我们后面讲调度原理的时候会深入解释）可以实现这一点。但是如果节点数目发生了变化呢？")]),s("li",null,[s("p",null,"希望在新节点上也快速拉起副本。比如集群扩容，这个时候会有一些新节点加入进来，如何立即感知到这些节点，并在上面部署新的副本。")]),s("li",null,[s("p",null,"希望节点下线的时候，对应的 Pod 也可以被删除。")]),s("li",null,[s("p",null,"......")])],-1),i=s("p",null,"Kubernetes 提供的 DaemonSet 就可以完美地解决上述问题，其主要目的就是可以在集群内的每个节点上（或者指定的一堆节点上）都只运行一个副本，即 Pod 和 Node 是一一对应的关系。DaemonSet 会结合节点的情况来帮助你管理这些 Pod，见下面的拓扑结构：",-1),d=l("",23),m=l("",30);function u(D,h,A,F,g,b){const n=e("Image");return o(),t("div",null,[r,E,y,i,a(n,{alt:"Lark20201009-105149.png",src:"https://s0.lgstatic.com/i/image/M00/5B/9B/Ciqc1F9_0FqACmcBAABg43Rbbow934.png"}),d,a(n,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/59/81/Ciqc1F9xnpWAKFwRAAB-Lq1l0YU648.png"}),m])}const f=p(c,[["render",u]]);export{k as __pageData,f as default};
