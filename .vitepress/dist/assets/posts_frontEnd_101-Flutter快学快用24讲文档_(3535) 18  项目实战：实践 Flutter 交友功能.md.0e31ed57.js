import{_ as s,o as n,g as a,Q as l}from"./chunks/framework.f949202b.js";const m=JSON.parse('{"title":"我的好友 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3535) 18  项目实战：实践 Flutter 交友功能.md","filePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3535) 18  项目实战：实践 Flutter 交友功能.md","lastUpdated":null}'),p={name:"posts/frontEnd/101-Flutter快学快用24讲文档/(3535) 18  项目实战：实践 Flutter 交友功能.md"},o=l(`<p>本课时我会和大家一起来完善 App 的其他功能，其中包括：我的好友、我的消息、系统设置和搜索功能。按照我们之前课时所学的技术点，我们可以通过绘制组件树+布局来实现，在实现过程中也会介绍一些新的知识点，接下来我们就分别看下这几个功能的实现过程。</p><h3 id="我的好友" tabindex="-1">我的好友 <a class="header-anchor" href="#我的好友" aria-label="Permalink to &quot;我的好友&quot;">​</a></h3><p>我们首先看下要实现的效果图，如图 1 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/A7/Ciqc1F8tC1OAa6iOAABaIAPOiu0051.png" alt="Drawing 0.png"><br> 图 1 我的好友效果图</p><p>根据图 1 的效果图，我们绘制出组件树+布局，如图 2 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/A7/Ciqc1F8tC3SAJma7AACIdJvSfFY733.png" alt="Drawing 2.png"><br> 图 2 组件树</p><p>图 2 很清晰地分析出了界面所转化的组件树，由于这里都不涉及动态组件，因此将 Text 和 Image 作为一个 card 组件即可。代码实现逻辑和我们之前介绍的推荐页面和关注页面基本一样，接下来我们看下&quot;我的消息&quot;的实现。</p><h3 id="我的消息" tabindex="-1">我的消息 <a class="header-anchor" href="#我的消息" aria-label="Permalink to &quot;我的消息&quot;">​</a></h3><p>我们先来看下&quot;我的消息&quot;要实现的界面效果，如图 3 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/B2/CgqCHl8tC4CAKYbEAACBTQQFajM318.png" alt="Drawing 4.png"><br> 图 3 我的消息界面效果</p><p>根据图 3 的效果图，我们绘制出组件树+布局，如图 4 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/B2/CgqCHl8tC4iAA2RQAAGgiSh8hy0630.png" alt="Drawing 6.png"><br> 图 4 我的消息组件树+布局</p><p>图 4 就非常清晰地描述了我们整个 UI 构造：</p><ul><li><p>图 4 中的 Row-Expanded-1 和 Row-Expanded-5 代表的是使用 flex 布局，左右屏幕占比 1 比 5；</p></li><li><p>图 4 中的 first_line 代表的是图 3 右侧的用户昵称和时间一行；</p></li><li><p>图 4 中的 spaceBetween 是 Row 的 mainAxisAlignment 属性，代表的是两端对齐，具体这部分代码如下。</p></li></ul><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 获取右侧的首行 </span></span>
<span class="line"><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_getFirstLine</span><span style="color:#E1E4E8;">() { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Row</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">    mainAxisAlignment</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MainAxisAlignment</span><span style="color:#E1E4E8;">.spaceBetween, </span></span>
<span class="line"><span style="color:#E1E4E8;">    children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">Widget</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[ </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">        userMessage.userInfo.nickName, </span></span>
<span class="line"><span style="color:#E1E4E8;">        style</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TextStyles</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">commonStyle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.8</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Colors</span><span style="color:#E1E4E8;">.black), </span></span>
<span class="line"><span style="color:#E1E4E8;">      ), </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">_getMessageTimeSection</span><span style="color:#E1E4E8;">(userMessage.messageTime), </span></span>
<span class="line"><span style="color:#E1E4E8;">    ], </span></span>
<span class="line"><span style="color:#E1E4E8;">  ); </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 获取右侧的首行 </span></span>
<span class="line"><span style="color:#005CC5;">Widget</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_getFirstLine</span><span style="color:#24292E;">() { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">Row</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">    mainAxisAlignment</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MainAxisAlignment</span><span style="color:#24292E;">.spaceBetween, </span></span>
<span class="line"><span style="color:#24292E;">    children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">Widget</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[ </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">        userMessage.userInfo.nickName, </span></span>
<span class="line"><span style="color:#24292E;">        style</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TextStyles</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">commonStyle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Colors</span><span style="color:#24292E;">.black), </span></span>
<span class="line"><span style="color:#24292E;">      ), </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">_getMessageTimeSection</span><span style="color:#24292E;">(userMessage.messageTime), </span></span>
<span class="line"><span style="color:#24292E;">    ], </span></span>
<span class="line"><span style="color:#24292E;">  ); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>由于这里也没有涉及组件的复用和动态组件，因此这里也建议将整个组件内容设计为一个组件叫作 message_card。为了代码维护性，可以使用类函数来封装小组件，为后续重构抽象为通用组件做准备，例如这里我们将 first_line 设计为一个类函数，如上代码中的 _getFirstLine 函数。</p><h3 id="系统设置" tabindex="-1">系统设置 <a class="header-anchor" href="#系统设置" aria-label="Permalink to &quot;系统设置&quot;">​</a></h3><p>接下来我们来看下&quot;系统设置&quot;这部分界面效果，如图 5 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/A7/Ciqc1F8tC5mAb80WAABCUd3CwUc272.png" alt="Drawing 8.png"><br> 图 5 系统设置的效果</p><p>看到图 5 的效果后，其实组件设计可能不是关键。这里涉及两个新的知识点：</p><ul><li><p>在 Flutter 上怎么处理表单数据；</p></li><li><p>怎么保存系统设置的数据。</p></li></ul><p>这里具体的组件树+布局就不绘制了，我们可以将实现过程分为四部分：第三方库引入、通用文件存储、model 应用和组件应用。</p><h4 id="第三方库" tabindex="-1">第三方库 <a class="header-anchor" href="#第三方库" aria-label="Permalink to &quot;第三方库&quot;">​</a></h4><p>这里我们需要使用到 Flutter 本地存储功能，Flutter 本地存储功能包含三种：<a href="https://pub.dev/packages/shared_preferences" target="_blank" rel="noreferrer">shared_preferences</a>、<a href="https://pub.dev/packages/path_provider" target="_blank" rel="noreferrer">path_provider</a> 文件存储以及 <a href="https://pub.dev/packages/sqflite" target="_blank" rel="noreferrer">sqflite</a>。这里只介绍 path_provider 文件存储的实现，其他两个大家参照官网的介绍尝试即可。使用该 path_provider 库需要在 pubspec.yaml 中增加库引入，然后更新本地库。</p><h4 id="通用文件存储" tabindex="-1">通用文件存储 <a class="header-anchor" href="#通用文件存储" aria-label="Permalink to &quot;通用文件存储&quot;">​</a></h4><p>接下来我们基于 path_provider 实现一个通用的文件内容存储，<a href="https://github.com/love-flutter/flutter-column" target="_blank" rel="noreferrer">代码在 github 源码中</a>的 util/tools/local_storage.dart 中。这里我们主要需要实现两个方法，一个是文件储存内容，一个文件读取内容。</p><ul><li>文件存储</li></ul><p>我们先来看下文件存储的逻辑，如下代码：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 将数据保存到文件中 </span></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Future</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> content, </span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> filePath) </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> directory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getApplicationDocumentsDirectory</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">File</span><span style="color:#E1E4E8;"> file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;\${</span><span style="color:#79B8FF;">directory</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">path</span><span style="color:#9ECBFF;">}/$</span><span style="color:#79B8FF;">filePath</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">  file.</span><span style="color:#B392F0;">writeAsString</span><span style="color:#E1E4E8;">(content); </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 将数据保存到文件中 </span></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Future</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> content, </span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> filePath) </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> directory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getApplicationDocumentsDirectory</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">File</span><span style="color:#24292E;"> file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;\${</span><span style="color:#005CC5;">directory</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">path</span><span style="color:#032F62;">}/$</span><span style="color:#005CC5;">filePath</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">  file.</span><span style="color:#6F42C1;">writeAsString</span><span style="color:#24292E;">(content); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>因为是异步获取文件存储路径，因此 save 方法也需要作为异步逻辑，由于无须等待处理结果，因此返回 void。上面代码中使用了 path_provider 的 getApplicationDocumentsDirectory 的方法获取文件存储目录，使用 dart:io 获取具体文件的操作句柄，最后将内容写入文件，接下来我们看下读取的过程。</p><ul><li>文件读取</li></ul><p>读取的过程和写的代码相似，首先是找到文件并获取文件操作句柄，然后再使用文件句柄读取文件具体内容，代码如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 获取文件数据内容 </span></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Future</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> filePath) </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> directory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getApplicationDocumentsDirectory</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">File</span><span style="color:#E1E4E8;"> file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">File</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;\${</span><span style="color:#79B8FF;">directory</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">path</span><span style="color:#9ECBFF;">}/$</span><span style="color:#79B8FF;">filePath</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> exist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> file.</span><span style="color:#B392F0;">exists</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">exist){ </span><span style="color:#6A737D;">// 判断是否存在文件 </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> file.</span><span style="color:#B392F0;">readAsString</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(e) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 获取文件数据内容 </span></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Future</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> filePath) </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> directory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getApplicationDocumentsDirectory</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">File</span><span style="color:#24292E;"> file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">File</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;\${</span><span style="color:#005CC5;">directory</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">path</span><span style="color:#032F62;">}/$</span><span style="color:#005CC5;">filePath</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> exist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> file.</span><span style="color:#6F42C1;">exists</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">exist){ </span><span style="color:#6A737D;">// 判断是否存在文件 </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">    } </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> file.</span><span style="color:#6F42C1;">readAsString</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(e) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>上面代码增加了一个异常处理，避免读取失败返回错误数据，因此如果这里判断异常，则返回空字符串。在 catch 逻辑中是需要增加上报来监控告警的，后续我们再来介绍这部分内容。</p><h4 id="model-应用" tabindex="-1">model 应用 <a class="header-anchor" href="#model-应用" aria-label="Permalink to &quot;model 应用&quot;">​</a></h4><p>因为系统配置是一个全局状态，需要在多个页面使用，所以我们需要将系统数据保存在 model 中，因此我们在 model 创建</p><p>system_config_model.dart 文件。在实现逻辑中，需要先调用 LocalStorage 来获取初始配置，代码如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#79B8FF;">SystemConfigModel</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(){ </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">LocalStorage</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;tyfapp.system.config&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">((configStr){ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;">&gt; configInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}; </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(configStr </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> configStr </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// 判断合法性 </span></span>
<span class="line"><span style="color:#E1E4E8;">      configInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;accessMessage&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;tipsDetail&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;soundReminder&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;vibrationReminder&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">      }; </span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// 尝试 json 解析，解析失败直接返回 </span></span>
<span class="line"><span style="color:#E1E4E8;">        configInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">        json.</span><span style="color:#B392F0;">decode</span><span style="color:#E1E4E8;">(configStr) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;">&gt;; </span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(e){ </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span></span>
<span class="line"><span style="color:#E1E4E8;">    systemConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">fromJson</span><span style="color:#E1E4E8;">(configInfo); </span></span>
<span class="line"><span style="color:#E1E4E8;">  }); </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#005CC5;">SystemConfigModel</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(){ </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">LocalStorage</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;tyfapp.system.config&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">((configStr){ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Map</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;">&gt; configInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}; </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(configStr </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> configStr </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 判断合法性 </span></span>
<span class="line"><span style="color:#24292E;">      configInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;accessMessage&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;tipsDetail&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;soundReminder&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;vibrationReminder&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">      }; </span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 尝试 json 解析，解析失败直接返回 </span></span>
<span class="line"><span style="color:#24292E;">        configInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        json.</span><span style="color:#6F42C1;">decode</span><span style="color:#24292E;">(configStr) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Map</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;">&gt;; </span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(e){ </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">      } </span></span>
<span class="line"><span style="color:#24292E;">    } </span></span>
<span class="line"><span style="color:#24292E;">    systemConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">fromJson</span><span style="color:#24292E;">(configInfo); </span></span>
<span class="line"><span style="color:#24292E;">  }); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>上面代码 init 为构造函数，其中第 3 行是异步读取文件，获取到文件后存储在共享状态变量 systemConfig 中。为了异常考虑，如果没有获取到文件内容，则将共享状态变量默认设置打开状态，也就是 true 值。有了初始化部分，再修改 main.dart 增加一个新的状态共享，部分如下代码：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 初始化共享状态对象 </span></span>
<span class="line"><span style="color:#79B8FF;">LikeNumModel</span><span style="color:#E1E4E8;"> likeNumModel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">LikeNumModel</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#79B8FF;">NewMessageModel</span><span style="color:#E1E4E8;"> newMessageNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NewMessageModel</span><span style="color:#E1E4E8;">(newMessageNum</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#6A737D;">// 异步数据处理 </span></span>
<span class="line"><span style="color:#79B8FF;">ApiUserInfoMessage</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getUnReadMessageNum</span><span style="color:#E1E4E8;">(newMessageNum); </span></span>
<span class="line"><span style="color:#6A737D;">// 异步获取系统配置 </span></span>
<span class="line"><span style="color:#79B8FF;">SystemConfigModel</span><span style="color:#E1E4E8;"> systemConfigModel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemConfigModel</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MultiProvider</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">  providers</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">ChangeNotifierProvider</span><span style="color:#E1E4E8;">(create</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> likeNumModel), </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">ChangeNotifierProvider</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">        create</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UserInfoModel</span><span style="color:#E1E4E8;">(myUserInfo</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> myUserInfo)), </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">ChangeNotifierProvider</span><span style="color:#E1E4E8;">(create</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> newMessageNum), </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">ChangeNotifierProvider</span><span style="color:#E1E4E8;">(create</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> systemConfigModel), </span></span>
<span class="line"><span style="color:#E1E4E8;">  ], </span></span>
<span class="line"><span style="color:#E1E4E8;">  child</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> child, </span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 初始化共享状态对象 </span></span>
<span class="line"><span style="color:#005CC5;">LikeNumModel</span><span style="color:#24292E;"> likeNumModel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">LikeNumModel</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#005CC5;">NewMessageModel</span><span style="color:#24292E;"> newMessageNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NewMessageModel</span><span style="color:#24292E;">(newMessageNum</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#6A737D;">// 异步数据处理 </span></span>
<span class="line"><span style="color:#005CC5;">ApiUserInfoMessage</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getUnReadMessageNum</span><span style="color:#24292E;">(newMessageNum); </span></span>
<span class="line"><span style="color:#6A737D;">// 异步获取系统配置 </span></span>
<span class="line"><span style="color:#005CC5;">SystemConfigModel</span><span style="color:#24292E;"> systemConfigModel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemConfigModel</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MultiProvider</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">  providers</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ChangeNotifierProvider</span><span style="color:#24292E;">(create</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> likeNumModel), </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ChangeNotifierProvider</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">        create</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UserInfoModel</span><span style="color:#24292E;">(myUserInfo</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> myUserInfo)), </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ChangeNotifierProvider</span><span style="color:#24292E;">(create</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> newMessageNum), </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ChangeNotifierProvider</span><span style="color:#24292E;">(create</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> systemConfigModel), </span></span>
<span class="line"><span style="color:#24292E;">  ], </span></span>
<span class="line"><span style="color:#24292E;">  child</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> child, </span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>上面代码的第 7 行就是增加了系统变量的初始化，第 15 行就是增加到状态共享中。接下来我们完善下 system_config_model.dart 代码，为其增加 get 和 save 方法，代码如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 转化为StructSystemConfig结构 </span></span>
<span class="line"><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">() { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> systemConfig; </span></span>
<span class="line"><span style="color:#E1E4E8;">} </span></span>
<span class="line"><span style="color:#6A737D;">/// 转化为StructSystemConfig结构 </span></span>
<span class="line"><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSwitchItem</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> switchItem) { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(systemConfig </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;">&gt; systemConfigJson </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">toJson</span><span style="color:#E1E4E8;">(systemConfig); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">{ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> systemConfigJson[switchItem] </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(e){ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 转化为StructSystemConfig结构 </span></span>
<span class="line"><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">() { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> systemConfig; </span></span>
<span class="line"><span style="color:#24292E;">} </span></span>
<span class="line"><span style="color:#6A737D;">/// 转化为StructSystemConfig结构 </span></span>
<span class="line"><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSwitchItem</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> switchItem) { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(systemConfig </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Map</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;">&gt; systemConfigJson </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toJson</span><span style="color:#24292E;">(systemConfig); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> systemConfigJson[switchItem] </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  }</span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(e){ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>代码的第 2 到第 18 行中的两个方法 get 和 getSwitchItem ，其作用都是获取系统配置，前者是获取所有配置，后者是获取具体的某个配置。我们继续看下配置保存的两个方法，代码如下。</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 保存单个数据 </span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">saveOne</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> key, </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> value) { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;">&gt; systemConfigJson </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">toJson</span><span style="color:#E1E4E8;">(systemConfig); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(systemConfigJson[key] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> value) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">  systemConfigJson[key] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value; </span></span>
<span class="line"><span style="color:#E1E4E8;">  systemConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">fromJson</span><span style="color:#E1E4E8;">(systemConfigJson); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">(systemConfigJson); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">LocalStorage</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(json.</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(systemConfigJson), </span><span style="color:#9ECBFF;">&#39;tyfapp.system.config&#39;</span><span style="color:#E1E4E8;">); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">notifyListeners</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">} </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// 整体数据保存 </span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;"> newSystemConfig) { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">  systemConfig.accessMessage </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> newSystemConfig.accessMessage </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">      systemConfig.tipsDetail </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> newSystemConfig.tipsDetail </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">      systemConfig.soundReminder </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> newSystemConfig.soundReminder </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">      systemConfig.vibrationReminder </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> newSystemConfig.vibrationReminder </span></span>
<span class="line"><span style="color:#E1E4E8;">  ) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">  systemConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newSystemConfig; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">LocalStorage</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      json.</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">toJson</span><span style="color:#E1E4E8;">(systemConfig)), </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;tyfapp.system.config&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  ); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">notifyListeners</span><span style="color:#E1E4E8;">(</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 保存单个数据 </span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">saveOne</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> key, </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> value) { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Map</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;">&gt; systemConfigJson </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toJson</span><span style="color:#24292E;">(systemConfig); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(systemConfigJson[key] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> value) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">  systemConfigJson[key] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value; </span></span>
<span class="line"><span style="color:#24292E;">  systemConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">fromJson</span><span style="color:#24292E;">(systemConfigJson); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">(systemConfigJson); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">LocalStorage</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(json.</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(systemConfigJson), </span><span style="color:#032F62;">&#39;tyfapp.system.config&#39;</span><span style="color:#24292E;">); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">notifyListeners</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">} </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/// 整体数据保存 </span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;"> newSystemConfig) { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">  systemConfig.accessMessage </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> newSystemConfig.accessMessage </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">      systemConfig.tipsDetail </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> newSystemConfig.tipsDetail </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">      systemConfig.soundReminder </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> newSystemConfig.soundReminder </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">      systemConfig.vibrationReminder </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> newSystemConfig.vibrationReminder </span></span>
<span class="line"><span style="color:#24292E;">  ) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">  systemConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> newSystemConfig; </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">LocalStorage</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      json.</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">toJson</span><span style="color:#24292E;">(systemConfig)), </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;tyfapp.system.config&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  ); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">notifyListeners</span><span style="color:#24292E;">(</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>代码 save 和 saveOne，分别对应保存整个系统配置数据和保存单个系统配置数据。在两者实现逻辑中，首先都做了前期数据校验判断，避免不必要的 build 操作。在 save 代码逻辑中，需要将数据存储到本地，通过调用 LocaStorage.save 来实现。</p><h4 id="组件应用" tabindex="-1">组件应用 <a class="header-anchor" href="#组件应用" aria-label="Permalink to &quot;组件应用&quot;">​</a></h4><p>组件应用部分较为简单，我们先看下 pages/system_page/index.dart 的逻辑，如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:flutter/material.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:provider/provider.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:two_you_friend/model/system_config_model.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:two_you_friend/widgets/system_page/switch_card.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:two_you_friend/util/struct/system_config.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#6A737D;">/// 首页 </span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemConfigPageIndex</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">StatelessWidget</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemConfigPageIndex</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@override</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">BuildContext</span><span style="color:#E1E4E8;"> context) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> systemConfigModel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Provider</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">of</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">SystemConfigModel</span><span style="color:#E1E4E8;">&gt;(context); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">StructSystemConfig</span><span style="color:#E1E4E8;"> systemConfig </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> systemConfigModel.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Container</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      padding</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">EdgeInsets</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">      child</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Column</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">        children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">Widget</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[ </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;">(itemDesc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;新消息提醒&#39;</span><span style="color:#E1E4E8;">, switchItem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;accessMessage&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;">(itemDesc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;通知显示详情&#39;</span><span style="color:#E1E4E8;">, switchItem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;tipsDetail&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;">(itemDesc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;声音&#39;</span><span style="color:#E1E4E8;">, switchItem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;soundReminder&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;">(itemDesc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;振动&#39;</span><span style="color:#E1E4E8;">, switchItem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vibrationReminder&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;">         ], </span></span>
<span class="line"><span style="color:#E1E4E8;">      ), </span></span>
<span class="line"><span style="color:#E1E4E8;">    ); </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:flutter/material.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:provider/provider.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:two_you_friend/model/system_config_model.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:two_you_friend/widgets/system_page/switch_card.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:two_you_friend/util/struct/system_config.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#6A737D;">/// 首页 </span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemConfigPageIndex</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">StatelessWidget</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemConfigPageIndex</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@override</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Widget</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">BuildContext</span><span style="color:#24292E;"> context) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> systemConfigModel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Provider</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">SystemConfigModel</span><span style="color:#24292E;">&gt;(context); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">StructSystemConfig</span><span style="color:#24292E;"> systemConfig </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> systemConfigModel.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Container</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      padding</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">EdgeInsets</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">      child</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Column</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">        children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">Widget</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[ </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;">(itemDesc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;新消息提醒&#39;</span><span style="color:#24292E;">, switchItem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;accessMessage&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;">(itemDesc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;通知显示详情&#39;</span><span style="color:#24292E;">, switchItem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;tipsDetail&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;">(itemDesc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;声音&#39;</span><span style="color:#24292E;">, switchItem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;soundReminder&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;">(itemDesc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;振动&#39;</span><span style="color:#24292E;">, switchItem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vibrationReminder&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;">         ], </span></span>
<span class="line"><span style="color:#24292E;">      ), </span></span>
<span class="line"><span style="color:#24292E;">    ); </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>主要逻辑在 build 中，build 中使用了 widgets/system_page/switch_card.dart ，我们看下这个子组件的实现，代码如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:flutter/material.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:provider/provider.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:two_you_friend/model/system_config_model.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;package:two_you_friend/styles/text_syles.dart&#39;</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#6A737D;">/// 单个系统配置 </span></span>
<span class="line"><span style="color:#6A737D;">/// </span></span>
<span class="line"><span style="color:#6A737D;">/// </span><span style="color:#FFAB70;">[title]</span><span style="color:#6A737D;">为帖子详情内容 </span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">StatelessWidget</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/// 传入的帖子标题 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> switchItem; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/// 消息提醒文字 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> itemDesc; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemPageSwitchCard</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span><span style="color:#79B8FF;">Key</span><span style="color:#E1E4E8;"> key, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.itemDesc, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.switchItem} </span></span>
<span class="line"><span style="color:#E1E4E8;">      ) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(key</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> key); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@override</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">BuildContext</span><span style="color:#E1E4E8;"> context) { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 获取操作句柄 </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> systemConfigModel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Provider</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">of</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">SystemConfigModel</span><span style="color:#E1E4E8;">&gt;(context); </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Row</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      mainAxisAlignment</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MainAxisAlignment</span><span style="color:#E1E4E8;">.spaceBetween, </span></span>
<span class="line"><span style="color:#E1E4E8;">      children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">Widget</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[ </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">          itemDesc, </span></span>
<span class="line"><span style="color:#E1E4E8;">          style</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TextStyles</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">commonStyle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Colors</span><span style="color:#E1E4E8;">.black), </span></span>
<span class="line"><span style="color:#E1E4E8;">        ), </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">Switch</span><span style="color:#E1E4E8;">( </span><span style="color:#6A737D;">// 选择 </span></span>
<span class="line"><span style="color:#E1E4E8;">            value</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> systemConfigModel.</span><span style="color:#B392F0;">getSwitchItem</span><span style="color:#E1E4E8;">(switchItem), </span></span>
<span class="line"><span style="color:#E1E4E8;">            activeTrackColor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Colors</span><span style="color:#E1E4E8;">.lightBlueAccent, </span></span>
<span class="line"><span style="color:#E1E4E8;">            materialTapTargetSize</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">MaterialTapTargetSize</span><span style="color:#E1E4E8;">.shrinkWrap, </span></span>
<span class="line"><span style="color:#E1E4E8;">            onChanged</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (newValue) { </span><span style="color:#6A737D;">// 触发状态变化 </span></span>
<span class="line"><span style="color:#E1E4E8;">              systemConfigModel.</span><span style="color:#B392F0;">saveOne</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">                  switchItem, </span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">systemConfigModel.</span><span style="color:#B392F0;">getSwitchItem</span><span style="color:#E1E4E8;">(switchItem) </span></span>
<span class="line"><span style="color:#E1E4E8;">              ); </span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span></span>
<span class="line"><span style="color:#E1E4E8;">        ), </span></span>
<span class="line"><span style="color:#E1E4E8;">      ], </span></span>
<span class="line"><span style="color:#E1E4E8;">    ); </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:flutter/material.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:provider/provider.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:two_you_friend/model/system_config_model.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;package:two_you_friend/styles/text_syles.dart&#39;</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#6A737D;">/// 单个系统配置 </span></span>
<span class="line"><span style="color:#6A737D;">/// </span></span>
<span class="line"><span style="color:#6A737D;">/// </span><span style="color:#E36209;">[title]</span><span style="color:#6A737D;">为帖子详情内容 </span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">StatelessWidget</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/// 传入的帖子标题 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> switchItem; </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/// 消息提醒文字 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> itemDesc; </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/// 构造函数 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemPageSwitchCard</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      {</span><span style="color:#005CC5;">Key</span><span style="color:#24292E;"> key, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.itemDesc, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.switchItem} </span></span>
<span class="line"><span style="color:#24292E;">      ) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(key</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> key); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@override</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Widget</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">BuildContext</span><span style="color:#24292E;"> context) { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 获取操作句柄 </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> systemConfigModel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Provider</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">of</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">SystemConfigModel</span><span style="color:#24292E;">&gt;(context); </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Row</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      mainAxisAlignment</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MainAxisAlignment</span><span style="color:#24292E;">.spaceBetween, </span></span>
<span class="line"><span style="color:#24292E;">      children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">Widget</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[ </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">          itemDesc, </span></span>
<span class="line"><span style="color:#24292E;">          style</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TextStyles</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">commonStyle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Colors</span><span style="color:#24292E;">.black), </span></span>
<span class="line"><span style="color:#24292E;">        ), </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">Switch</span><span style="color:#24292E;">( </span><span style="color:#6A737D;">// 选择 </span></span>
<span class="line"><span style="color:#24292E;">            value</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> systemConfigModel.</span><span style="color:#6F42C1;">getSwitchItem</span><span style="color:#24292E;">(switchItem), </span></span>
<span class="line"><span style="color:#24292E;">            activeTrackColor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Colors</span><span style="color:#24292E;">.lightBlueAccent, </span></span>
<span class="line"><span style="color:#24292E;">            materialTapTargetSize</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MaterialTapTargetSize</span><span style="color:#24292E;">.shrinkWrap, </span></span>
<span class="line"><span style="color:#24292E;">            onChanged</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (newValue) { </span><span style="color:#6A737D;">// 触发状态变化 </span></span>
<span class="line"><span style="color:#24292E;">              systemConfigModel.</span><span style="color:#6F42C1;">saveOne</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">                  switchItem, </span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">systemConfigModel.</span><span style="color:#6F42C1;">getSwitchItem</span><span style="color:#24292E;">(switchItem) </span></span>
<span class="line"><span style="color:#24292E;">              ); </span></span>
<span class="line"><span style="color:#24292E;">            } </span></span>
<span class="line"><span style="color:#24292E;">        ), </span></span>
<span class="line"><span style="color:#24292E;">      ], </span></span>
<span class="line"><span style="color:#24292E;">    ); </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>代码第 34 行使用了 Switch 这个组件，该组件的 value 是通过 systemConfigModel 状态共享类获取，在点击切换时触发状态改变，并调用 systemConfigModel 中的 saveOne 触发依赖组件状态变化。</p><p>以上就实现了系统设置的功能，相对其他组件的实现，这部分逻辑较为复杂，涉及了 Flutter 的本地存储 以及 Provider 的应用技术点。</p><h3 id="搜索" tabindex="-1">搜索 <a class="header-anchor" href="#搜索" aria-label="Permalink to &quot;搜索&quot;">​</a></h3><p>最后我们来看下搜索功能，前面我们已经实现了一个基本的搜索功能，但是其中的接口部分没有补齐，我们先来看下实际的效果，如图 6 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/B2/CgqCHl8tC9yAB1kXAAC_xNdvVn4559.png" alt="Drawing 10.png"><br> 图 6 搜索提示和搜索结果效果</p><h4 id="组件树-布局" tabindex="-1">组件树+布局 <a class="header-anchor" href="#组件树-布局" aria-label="Permalink to &quot;组件树+布局&quot;">​</a></h4><p>根据图 6 的页面效果，我们来绘制组件树+布局，搜索提示就是一个列表，这里就不绘制了，搜索结果稍微复杂一些，主要看下这部分，绘制结果如图 7 所示。</p><p><img src="https://s0.lgstatic.com/i/image/M00/3E/B3/CgqCHl8tC-aAConRAADrcMIRoXM555.png" alt="Drawing 13.png"><br> 图 7 搜索结果页面组件树+布局设计</p><p>这个组件树的设计，包含了我们布局设计思想中的 8 个过程，竖横、高宽、上下和左右，具体细节就不再赘述。接下来我们看下这两部分逻辑的实现：搜索提示和搜索结果。</p><h4 id="搜索提示" tabindex="-1">搜索提示 <a class="header-anchor" href="#搜索提示" aria-label="Permalink to &quot;搜索提示&quot;">​</a></h4><p>搜索提示较为简单，主要逻辑是从服务端拉取搜索提示接口，并返回一个 ListView 列表结果。具体代码如下：</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 获取 suggest list组件列表 </span></span>
<span class="line"><span style="color:#79B8FF;">Future</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">_getSuggestList</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;">{ </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">List</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">&gt; suggests </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ApiSearchIndex</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">suggest</span><span style="color:#E1E4E8;">(query); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(suggests </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> suggests.length </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){ </span><span style="color:#6A737D;">// 异常处理 </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Container</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 保留前 5 个搜索 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> subLen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> suggests.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> suggests.length; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">List</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">&gt; subSuggests </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> suggests.</span><span style="color:#B392F0;">sublist</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, subLen); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ListView</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">builder</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      scrollDirection</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Axis</span><span style="color:#E1E4E8;">.vertical, </span></span>
<span class="line"><span style="color:#E1E4E8;">      shrinkWrap</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">      itemCount</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> subSuggests.length, </span></span>
<span class="line"><span style="color:#E1E4E8;">      itemBuilder</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context,index){ </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">ListTile</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">            title</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RichText</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">                text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TextSpan</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#6A737D;">// 获取搜索框内输入的字符串，设置它的颜色并加粗 </span></span>
<span class="line"><span style="color:#E1E4E8;">                    text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> subSuggests[index], </span></span>
<span class="line"><span style="color:#E1E4E8;">                    style</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TextStyles</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">commonStyle</span><span style="color:#E1E4E8;">() </span></span>
<span class="line"><span style="color:#E1E4E8;">                ) </span></span>
<span class="line"><span style="color:#E1E4E8;">            ), </span></span>
<span class="line"><span style="color:#E1E4E8;">            onTap</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> () { </span></span>
<span class="line"><span style="color:#E1E4E8;">              query </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> subSuggests[index]; </span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">showResults</span><span style="color:#E1E4E8;">(context); </span></span>
<span class="line"><span style="color:#E1E4E8;">            }, </span></span>
<span class="line"><span style="color:#E1E4E8;">        ); </span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span></span>
<span class="line"><span style="color:#E1E4E8;">  ); </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 获取 suggest list组件列表 </span></span>
<span class="line"><span style="color:#005CC5;">Future</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">Widget</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">_getSuggestList</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">async</span><span style="color:#24292E;">{ </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">List</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">&gt; suggests </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ApiSearchIndex</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">suggest</span><span style="color:#24292E;">(query); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(suggests </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> suggests.length </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){ </span><span style="color:#6A737D;">// 异常处理 </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Container</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 保留前 5 个搜索 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> subLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> suggests.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> suggests.length; </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">List</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">&gt; subSuggests </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> suggests.</span><span style="color:#6F42C1;">sublist</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, subLen); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ListView</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">builder</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      scrollDirection</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Axis</span><span style="color:#24292E;">.vertical, </span></span>
<span class="line"><span style="color:#24292E;">      shrinkWrap</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">      itemCount</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> subSuggests.length, </span></span>
<span class="line"><span style="color:#24292E;">      itemBuilder</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context,index){ </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">ListTile</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">            title</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RichText</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">                text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TextSpan</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#6A737D;">// 获取搜索框内输入的字符串，设置它的颜色并加粗 </span></span>
<span class="line"><span style="color:#24292E;">                    text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> subSuggests[index], </span></span>
<span class="line"><span style="color:#24292E;">                    style</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TextStyles</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">commonStyle</span><span style="color:#24292E;">() </span></span>
<span class="line"><span style="color:#24292E;">                ) </span></span>
<span class="line"><span style="color:#24292E;">            ), </span></span>
<span class="line"><span style="color:#24292E;">            onTap</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> () { </span></span>
<span class="line"><span style="color:#24292E;">              query </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> subSuggests[index]; </span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">showResults</span><span style="color:#24292E;">(context); </span></span>
<span class="line"><span style="color:#24292E;">            }, </span></span>
<span class="line"><span style="color:#24292E;">        ); </span></span>
<span class="line"><span style="color:#24292E;">      } </span></span>
<span class="line"><span style="color:#24292E;">  ); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>代码中，首先使用 query 关键词获取用户输入，通过 ApiSearchIndex.suggest 方法获取服务端搜索提示结果，接下来做一些数据校验，最后根据搜索提示 build 出相应的组件。其中的第 26 行至第 28 行代码的作用是，通过点击搜索提示触发搜索行为，第 27 行替换搜索提示内容，第 28 行执行搜索并获取搜索结果。</p><h4 id="搜索结果" tabindex="-1">搜索结果 <a class="header-anchor" href="#搜索结果" aria-label="Permalink to &quot;搜索结果&quot;">​</a></h4><p>根据图 7 的绘制结果，我们了解到这里需要设计两个组件，组件一是展示搜索到的用户列表内容，组件二是展示搜索到的帖子列表内容。我们这里就使用两个组件函数来实现，主要看下用户部分（帖子部分逻辑相似）。</p><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/// 获取用户搜索结果组件 </span></span>
<span class="line"><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_getUserListWidget</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">List</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">StructUserInfo</span><span style="color:#E1E4E8;">&gt; userList) { </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(userList </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> userList.length </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">){ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Container</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> subLen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.length </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> userList.length; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">List</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">StructUserInfo</span><span style="color:#E1E4E8;">&gt; subUserList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.</span><span style="color:#B392F0;">sublist</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, subLen); </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ListView</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">builder</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">      scrollDirection</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Axis</span><span style="color:#E1E4E8;">.vertical, </span></span>
<span class="line"><span style="color:#E1E4E8;">      shrinkWrap</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">      itemCount</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> subUserList.length </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">      itemBuilder</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (context,index) { </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(index </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">){ </span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Row</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">            children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">Widget</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[ </span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#79B8FF;">Padding</span><span style="color:#E1E4E8;">(padding</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">EdgeInsets</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">only</span><span style="color:#E1E4E8;">(left</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)), </span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">( </span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">&#39;用户&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">                style</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">TextStyles</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">commonStyle</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0.9</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">              ), </span></span>
<span class="line"><span style="color:#E1E4E8;">            ], </span></span>
<span class="line"><span style="color:#E1E4E8;">          ); </span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">UserPageCard</span><span style="color:#E1E4E8;">(userInfo</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> subUserList[index </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]); </span></span>
<span class="line"><span style="color:#E1E4E8;">      }); </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/// 获取用户搜索结果组件 </span></span>
<span class="line"><span style="color:#005CC5;">Widget</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_getUserListWidget</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">List</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">StructUserInfo</span><span style="color:#24292E;">&gt; userList) { </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(userList </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> userList.length </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">){ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Container</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">  } </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> subLen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.length </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> userList.length; </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">List</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">StructUserInfo</span><span style="color:#24292E;">&gt; subUserList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.</span><span style="color:#6F42C1;">sublist</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, subLen); </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ListView</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">builder</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">      scrollDirection</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Axis</span><span style="color:#24292E;">.vertical, </span></span>
<span class="line"><span style="color:#24292E;">      shrinkWrap</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">      itemCount</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> subUserList.length </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">      itemBuilder</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (context,index) { </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">){ </span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Row</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">            children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">Widget</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[ </span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#005CC5;">Padding</span><span style="color:#24292E;">(padding</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">EdgeInsets</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">only</span><span style="color:#24292E;">(left</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)), </span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">( </span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#032F62;">&#39;用户&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">                style</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">TextStyles</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">commonStyle</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0.9</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">              ), </span></span>
<span class="line"><span style="color:#24292E;">            ], </span></span>
<span class="line"><span style="color:#24292E;">          ); </span></span>
<span class="line"><span style="color:#24292E;">        } </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">UserPageCard</span><span style="color:#24292E;">(userInfo</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> subUserList[index </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]); </span></span>
<span class="line"><span style="color:#24292E;">      }); </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>以上组件代码的实现与我们之前所学习的知识点，没有太大的差异性。核心知识点是应用 ListView.builder 组件，来显示 seaction_name （也就是上面的 Text 组件）和搜索结果中的用户列表（上面的 UserPageCard 组件）。</p><p>以上就完成了搜索部分的逻辑，具体代码<a href="https://github.com/love-flutter/flutter-column" target="_blank" rel="noreferrer">查看 github 中的 pages/search_page/custom_delegate.dart 文件。</a></p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>本课时带领大家实践开发了四个核心页面（我的好友、我的消息、系统设置和搜索）。学完本课时你需要进一步掌握组件树+布局的设计思想，同时掌握 Flutter 本地存储的技术点，进一步巩固 Flutter 编码风格。学完本课时之后，我建议你自行去实现&quot;我的消息&quot;中的私信功能和评论相关的部分（后续会在 github 上提供源码）。</p><p>本课时之前，我们对 App 的安全并没有关注太多，可以说完全放任。下一课时我们将通过工具化的方式来上报异常，保证我们 App 的质量，提前发现并解决问题。</p><p><a href="https://github.com/love-flutter/flutter-column" target="_blank" rel="noreferrer">点击此链接查看本课时源码</a></p>`,72),e=[o];function t(r,c,E,y,i,F){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{m as __pageData,b as default};
