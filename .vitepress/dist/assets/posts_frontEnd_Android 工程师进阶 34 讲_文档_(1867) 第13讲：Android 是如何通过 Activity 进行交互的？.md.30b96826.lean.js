import{_ as s,j as o,o as l,g as c,k as n,h as i,Q as e,s as t}from"./chunks/framework.4e7d56ce.js";const Z=JSON.parse('{"title":"第13讲：Android是如何通过Activity进行交互的？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1867) 第13讲：Android 是如何通过 Activity 进行交互的？.md","filePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1867) 第13讲：Android 是如何通过 Activity 进行交互的？.md","lastUpdated":1696417798000}'),r={name:"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1867) 第13讲：Android 是如何通过 Activity 进行交互的？.md"},p=e("",8),A=t("p",null,"除了 Activity 类名之外，其他都是默认配置。这种情况下，点击 First 中的 Button，从 First 页面跳转到 Second 页面。",-1),d=t("p",null,"然后在命令行执行以下命令：",-1),_=t("pre",null,[t("code",null,`adb shell dumpsys activity activities
`)],-1),g=t("p",null,"上述命令会将系统中所有存活中的 Activity 信息打印到控制台，具体结果如下：",-1),h=t("p",null,"上图中的 TaskRecord 代表一个任务栈，在这个栈中存在两个 Activity 实例：First 和 Second，并且 Second 处于栈顶。",-1),f=t("p",null,"接下来将 Second 的 taskAffinity 修改一下，如下所示：",-1),y=t("p",null,'我将 Second 的 taskAffinity 修改为 "lagou.affinity"，使它和 First 的 taskAffinity 不同。重新运行代码，并再次查看任务栈中的情况，结果如下：',-1),u=t("p",null,"可以看出，虽然 First 和 Second 的 taskAffinity 不同，但是它们都被创建在一个任务栈中。",-1),m=t("p",null,"但如果我再将 Second 的 launchMode 改为 singleTask，再次重新运行则会发现两个 Activity 会被分配到不同的任务栈中，如下所示：",-1),k=e("",8),v=t("p",null,"接下来，打开 TaskAffinityReparent 项目，屏幕上本应显示 ReparentActivity 的页面内容，但是实际上显示的却是 FirstC 中的页面内容，并且系统中 Activity 信息如下：",-1),q=t("p",null,"可以看出，FirstC 被移动到与 ReparentActivity 处在一个任务栈中。此时 FirstC 位于栈顶位置，再次点击返回键，才会显示 ReparentActivity 页面。",-1),C=t("h3",{id:"通过-binder-传递数据的限制",tabindex:"-1"},[i("通过 Binder 传递数据的限制 "),t("a",{class:"header-anchor",href:"#通过-binder-传递数据的限制","aria-label":'Permalink to "通过 Binder 传递数据的限制"'},"​")],-1),T=t("h4",{id:"binder-传递数据限制",tabindex:"-1"},[i("Binder 传递数据限制 "),t("a",{class:"header-anchor",href:"#binder-传递数据限制","aria-label":'Permalink to "Binder 传递数据限制"'},"​")],-1),b=t("p",null,"Activity 界面跳转时，使用 Intent 传递数据是最常用的操作了。但是 Intent 传值偶尔也会导程序崩溃，比如以下代码：",-1),F=t("p",null,"在 startFirstB 方法中，跳转 FirstB 页面，并通过 Intent 传递 Bean 类中的数据。但是执行上述代码会报如下错误：",-1),E=t("p",null,"上面 log 日志的意思是 Intent 传递数据过大，最终原因是 Android 系统对使用 Binder 传数据进行了限制。通常情况为 1M，但是根据不同版本、不同厂商，这个值会有区别。",-1),S=t("h4",{id:"解决办法",tabindex:"-1"},[i("解决办法： "),t("a",{class:"header-anchor",href:"#解决办法","aria-label":'Permalink to "解决办法："'},"​")],-1),P=t("ol",null,[t("li",null,"减少通过 Intent 传递的数据，将非必须字段使用 transient 关键字修饰。")],-1),B=t("p",null,"比如上述 Bean 类中，假如 byte[] data 并非必须使用的数据，则需要避免将其序列化，如下所示：",-1),M=e("",8),I=t("p",null,"但实际上，Activity 可以在不同的进程中启动，而每一个不同的进程都会创建出一个 Application，因此有可能造成 Application 的 onCreate 方法被执行多次。比如以下代码：",-1),x=t("p",null,'RemoteActivity 的 process 为"lagou.process"，这将导致它会在一个新的进程中创建。当在 MainActivity 中跳转到 RemoteActivity 时，LagouApplication 会被再次创建，其代码如下：',-1),R=t("p",null,"最终打印日志如下：",-1),H=e("",7),V=t("p",null,"主要目的就是尽可能的避免当前前台用户的交互被打断，保证当前屏幕上展示的内容不受影响。",-1),w=t("blockquote",null,[t("p",null,"但是这也造成了很多实际问题，在我们项目中有 Force Update 功能，当用户选择升级之后会在后台进行新的安装包下载任务。正常情况下下载成功需要弹出 apk 安装界面，但是在某一版升级时突然很多用户反馈无法弹出下载界面。经过查看抓取的 log 信息，最终发现有个特点就是都发生在 Android 10 版本，因此怀疑应该是版本兼容问题，最终谷歌搜索，发现果然如此。")],-1),N=t("p",null,"解决办法：",-1),D=t("p",null,"Android 官方建议我们使用通知来替代直接启动 Activity 操作：",-1),L=t("p",null,"也就是当后台执行的任务执行完毕之后，并不会直接调用 startActivity 来启动新的界面，而是通过 NotificationManager 来发送 Notification 到状态栏。这样既不会影响当前使用的交互操作，用户也能及时获取后台任务的进展情况，后续的操作由用户自己决定。",-1),O=t("h3",{id:"总结",tabindex:"-1"},[i("总结 "),t("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),J=t("p",null,"本课时主要总结了几个使用 startActivity 时可能会遇到的问题：",-1),U=t("ul",null,[t("li",null,"taskAffinity 实现任务栈的调配；"),t("li",null,"通过 Binder 传递数据的限制；"),t("li",null,"多进程应用可能会造成的问题；"),t("li",null,"后台启动 Activity 的限制。")],-1);function Y(j,G,K,$,z,W){const a=o("Image");return l(),c("div",null,[p,n(a,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/00/E7/Ciqc1F6qoXmACSfeAACHGnopIuM983.png"}),i(),A,d,_,g,n(a,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/00/E7/Ciqc1F6qoZ6ABVdcAAfaoaqmoBo490.png"}),i(),h,f,n(a,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/00/E7/Ciqc1F6qoaeARMUkAACDSLIIs3Y651.png"}),i(),y,n(a,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/00/E7/CgqCHl6qobyAOxwAAAfcm-3M6WU365.png"}),i(),u,m,n(a,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/00/E7/CgqCHl6qocWAAL2tAAjjzHorETA263.png"}),i(),k,n(a,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/00/E8/CgqCHl6qofaAPOEYAAEyPzU2-7U272.png"}),i(),v,n(a,{alt:"image (4).png",src:"https://s0.lgstatic.com/i/image/M00/00/E8/CgqCHl6qoi6AYBKbAAbxnNqle-w449.png"}),i(),q,C,T,b,n(a,{alt:"image (5).png",src:"https://s0.lgstatic.com/i/image/M00/00/E8/CgqCHl6qox6APKSiAAFYCDL9YmU374.png"}),i(),F,n(a,{alt:"image (6).png",src:"https://s0.lgstatic.com/i/image/M00/00/E8/CgqCHl6qoxaAPCzSAALV6Tx3gOc932.png"}),i(),E,S,P,B,n(a,{alt:"image (7).png",src:"https://s0.lgstatic.com/i/image/M00/00/E8/CgqCHl6qo36AE1wYAAFjocGh-yY383.png"}),i(),M,n(a,{alt:"image (8).png",src:"https://s0.lgstatic.com/i/image/M00/00/E9/CgqCHl6qo-OAVcSFAAF8T_A2nPc539.png"}),i(),I,n(a,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/00/E9/CgqCHl6qo_SAHEpIAALroorEfrs345.png"}),i(),x,n(a,{alt:"image (10).png",src:"https://s0.lgstatic.com/i/image/M00/00/E9/Ciqc1F6qo_2AXKfoAAKiJ356was666.png"}),i(),R,n(a,{alt:"image (11).png",src:"https://s0.lgstatic.com/i/image/M00/00/E9/CgqCHl6qpAaAH3qxAAClcmfTjiA226.png"}),i(),H,n(a,{alt:"image (12).png",src:"https://s0.lgstatic.com/i/image/M00/00/EA/CgqCHl6qpkeADW1nAAGdO7dLZfk559.png"}),i(),V,w,N,D,n(a,{alt:"image (13).png",src:"https://s0.lgstatic.com/i/image/M00/00/EA/CgqCHl6qpmaAZwATAAFGPPvXtn4262.png"}),i(),L,O,J,U])}const Q=s(r,[["render",Y]]);export{Z as __pageData,Q as default};
