import{_,j as s,o as i,g as o,k as t,Q as e,s as p}from"./chunks/framework.b3d8e22e.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/300分钟吃透分布式缓存_文档/(59) 开篇寄语：缓存，你真的用对了吗？.md","filePath":"posts/backEnd/300分钟吃透分布式缓存_文档/(59) 开篇寄语：缓存，你真的用对了吗？.md","lastUpdated":1696417798000}'),a={name:"posts/backEnd/300分钟吃透分布式缓存_文档/(59) 开篇寄语：缓存，你真的用对了吗？.md"},n=e("",17),c=p("br",null,null,-1),r=p("ul",null,[p("li",null,[p("p",null,"首先，要熟练掌握缓存的基础知识，了解缓存常用的分类、读写模式，熟悉缓存的七大经典问题及解决应对之策，同时要从缓存组件的访问协议、Client 入手，熟练掌握如何访问各种缓存组件，如 Memcached、Redis、Pika 等。")]),p("li",null,[p("p",null,"其次，要尽可能深入理解缓存组件的实现方案、设计原理，了解缓存的各种特性、优势和不足，这样在缓存数据与预期不一致时，能够快速定位并解决问题。")]),p("li",null,[p("p",null,"再次，还要多了解线上大中型系统是如何对缓存进行架构设计的。线上系统，业务功能丰富多变，跨域部署环境复杂，而且热点频发，用户习惯迥异。因此，缓存系统在设计之初就要尽量进行良好设计，规划好如何进行Hash及分布、如何保障数据的一致性、如何进行扩容和缩容。当然，缓存体系也需要伴随业务发展持续演进，这就需要对缓存体系进行持续的状态监控、异常报警、故障演练，以确保在故障发生时能及时进行人肉或自动化运维处理，并根据线上状况不断进行优化和改进。")]),p("li",null,[p("p",null,"最后，了解缓存在各种场景下的最佳实践，理解这些最佳实践背后的 Tradeoff，做到知其然知其所以然，以便在实际工作中能举一反三，把知识和经验更好的应用到工作实践中来。")])],-1),d=e("",7);function u(m,g,A,h,T,f){const l=s("Image");return i(),o("div",null,[n,t(l,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/D4/CgoB5l14vN2AdfGUAAg_s9BHRkU420.png"}),c,r,t(l,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/F3/CgotOV14vN2AJTWsAAVC5Nck7MY956.png"}),d,t(l,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/61/36/Cgq2xl4cJq-AIfCTAAMTF_-6GIc754.jpg"})])}const k=_(a,[["render",u]]);export{C as __pageData,k as default};
