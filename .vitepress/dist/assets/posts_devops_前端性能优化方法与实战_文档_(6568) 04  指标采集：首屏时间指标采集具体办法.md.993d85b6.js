import{_ as s,o as n,g as a,Q as p}from"./chunks/framework.f949202b.js";const b=JSON.parse('{"title":"手动采集办法及优缺点 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/前端性能优化方法与实战_文档/(6568) 04  指标采集：首屏时间指标采集具体办法.md","filePath":"posts/devops/前端性能优化方法与实战_文档/(6568) 04  指标采集：首屏时间指标采集具体办法.md","lastUpdated":null}'),l={name:"posts/devops/前端性能优化方法与实战_文档/(6568) 04  指标采集：首屏时间指标采集具体办法.md"},o=p(`<p>记得那是 2014 年我刚入职 58，负责整个集团前端团队，有一天公司老板突然发话，希望从整体上优化一下 M 站性能。</p><p>根据过往经验，我先是和资深前端工程师 F 同学说了下我的想法，然后让他来给出具体方案。</p><p>半个小时后，F 同学就找到我说：&quot;老大，我感觉你想多了，我们只要把首屏慢的问题给解决就行了，还需要做啥首屏指标采集，本质上还是要解决问题嘛。&quot;</p><p>我说：&quot;你如果能解决当然更好了。&quot;很快 F 同学又给了我一个结论：我们列表页的首屏时间没问题。</p><p>为什么会得出这个结论呢？</p><p>原来，F 同学是在内网通过 Chrome DevTools 观察首屏时间的，这样内外网络环境就不同，首屏时间也会受到影响；还有，他使用的是调试工具，而用户是直接访问的，访问方式不同；最后，他观察首屏时间的手机只有几种，而真实用户人不同，手机型号也有很大不同。</p><p>如此复杂的环境，我们到底该如何了解用户的首屏时间？大量用户的首屏时间分布又是怎样的？性能差的用户首屏时间是多少？想要了解这些并对首屏时间进行优化，我们首先要做的就是首屏指标采集。</p><p>那么，具体都有哪些采集方式呢？</p><p>在实际当中，首屏指标采集有手动采集和自动化采集两种，接下来我就来为你分别介绍下。</p><h3 id="手动采集办法及优缺点" tabindex="-1">手动采集办法及优缺点 <a class="header-anchor" href="#手动采集办法及优缺点" aria-label="Permalink to &quot;手动采集办法及优缺点&quot;">​</a></h3><p><strong>所谓手动采集，一般是通过埋点的方式进行，</strong> 比如在页面开始位置打上 FMP.Start()，在首屏结束位置打上 FMP.End()，利用 FMP.End()-FMP.Start() 获取到首屏时间。</p><p>以电商平台为例，如果是电商类商品详情页，首屏包括头图、购买、商品信息、下单按钮等，就在这些内容加载完毕的位置打上首屏结束的点。</p><p>如果是电商列表页，瀑布流型的页面，需要根据各个机型下的首屏位置，估算一个平均的首屏位置，然后打上点。</p><p>如果是直播型的页面，页面核心是一个直播框，就需要在直播框的结束位置，打上点。</p><p>手动采集都有哪些优点和缺点呢？</p><p>首先是它兼容性强，业务同学知道在这个业务场景下首屏结束点在哪里，可以随情况变动。其次是去中心化，各个业务负责自己的打点代码，有问题时业务同学去排查即可，假如一条业务出现问题，并不会影响其他业务。</p><p>缺点方面，手动采集会和业务代码严重耦合，如果首屏采集逻辑调整，业务代码也需要修改；还有，它的覆盖率不足，因为要手动采集，业务一旦忙起来，性能优化方案就会延迟排后。</p><p>最后，手动采集的统计结果并不精确，因为依赖于人，每个人对首屏的理解有偏差，经常打错或者忘记打点。</p><h3 id="自动化采集优势及办法" tabindex="-1">自动化采集优势及办法 <a class="header-anchor" href="#自动化采集优势及办法" aria-label="Permalink to &quot;自动化采集优势及办法&quot;">​</a></h3><p>接下来我们看自动化采集。获取首屏时间，目前业界还是以自动化采集为主。<strong>所谓自动化采集，即引入一段通用的代码来做首屏时间自动化采集，引入过程中，除了必要的配置不需要做其他事情</strong>。</p><p>自动化采集的好处是独立性更强，接入过程更自动化。具体的自动化采集代码，可以由一个公共团队来开发，试点后，推广到各个业务团队。而且统计结果更标准化，同一段统计代码，标准更统一，业务侧同学也更认可这个统计结果。</p><p>当然，它也有缺点，最明显的是，有些个性化需求无法满足，毕竟在工作中，总会有一些特殊业务场景。所以，采用自动化采集方案必须做一些取舍。</p><p>既然是自动化采集，具体怎么采集呢？都有哪些办法？</p><p>首屏指标自动化采集，需要考虑是服务端模板业务，还是单页面（SPA）应用开发业务，业务场景不同，对应的采集方法也不同。下面我来分别介绍下。</p><h4 id="服务端模板业务下的采集办法" tabindex="-1">服务端模板业务下的采集办法 <a class="header-anchor" href="#服务端模板业务下的采集办法" aria-label="Permalink to &quot;服务端模板业务下的采集办法&quot;">​</a></h4><p>提到服务端模板业务，很多人可能会问，现在不都是 Vue 和 React 这些单页面应用的天下了吗？其实在一些 B 端业务的公司用的还是服务端模板，如 Velocity、Smarty 等。另外大名鼎鼎的 SSR 用的也是服务端模板。</p><p>这些业务后端比较重，前端偏配合，出于效率方面的考虑，前后端并没有解耦。因此，公司内部研发同学既做前端又做后端，这时候如果使用现在流行的 Vue/React，无疑会增加学习成本。</p><p>那服务端模板项目的加载流程是怎样的呢？</p><p>大致流程是这样的：HTTP 请求 → HTML 文档加载解析完成 → 加载样式和脚本文件 → 完成页面渲染。</p><p>其中，HTML 文档加载解析完成的时间点，就是首屏时间点，而要采集这个首屏时间，可以用浏览器提供的 DOMContentLoaded 接口来实现。</p><p>我们来直观看一下什么是 DOMContentLoaded。打开 Chrome 浏览器调试工具，进入 Network 选项，重新加载网页，我们就会得到这么一张图。</p><p><img src="https://s0.lgstatic.com/i/image6/M01/0F/EB/Cgp9HWA-BM6AF77NAAHEtECWVO0860.png" alt="Drawing 0.png"><br> DOMContentLoaded 示意图</p><p>右侧中间竖向的一条蓝线，代表了 DOMContentLoaded 这个事件触发的时间，而下面的蓝色文字（DOMContentLoaded 1.02s），代表 HTML 元素加载解析完成用了 1.02 秒。根据服务端模板项目加载流程，我们就知道这个时间就是首屏时间。</p><p>那么，DOMContentLoaded 时间具体的采集思路是怎样的呢？</p><p>当页面中的 HTML 元素被加载和解析完成（不需要等待样式表、图片和一些脚本的加载过程），DOMContentLoaded 事件触发。此时我们记录下当前时间 domContentLoadedEventEnd，再减去页面初始进入的时间 fetchStart，就是 DOMContentLoaded 的时间，也就是我们要采集的首屏时间。</p><p>即首屏时间=DOMContentLoaded 时间=domContentLoadedEventEnd-fetchStart。</p><p>那么，这种采集方法可以照搬到单页面应用下吗？答案是不可以。</p><h4 id="单页面-spa-应用业务下的采集办法" tabindex="-1">单页面（SPA）应用业务下的采集办法 <a class="header-anchor" href="#单页面-spa-应用业务下的采集办法" aria-label="Permalink to &quot;单页面（SPA）应用业务下的采集办法&quot;">​</a></h4><p>SPA 页面首屏时间采集会有什么不同？如果也使用 Performance API 会有什么问题？</p><p>我举个例子，在 2018 年 6 月的 GMTC 大会上，阿里云曾分享了他们的一个首屏指标采集结果：</p><blockquote><p>使用 Performance API 接口采集的首屏时间是 1106ms</p><p>实际的首屏时间是 1976ms</p></blockquote><p>为什么偏差如此大呢？</p><p>原来在 Vue 页面中，整体加载流程是这样的。</p><p>用户请求一个页面时，页面会先加载 index.html，加载完成后，就会触发 DOMContentLoaded 和 load。而这个时候，页面展示的只是个空白页。此时根本不算真正意义的首屏。接下来，页面会加载相关脚本资源并通过 axios 异步请求数据，使用数据渲染页面主题部分，这个时候首屏才渲染完成。</p><p>正是这个原因造成了用 Performance 接口取得的时间是 1106ms，实际时间则是 1976ms，差距如此之大。可以说，SPA 的流行让 Performance 接口失去了原来的意义。那么，这种情况下怎么采集首屏指标呢？可以使用 MutationObserver 采集首屏时间。</p><p>SPA 页面因为无法基于 DOMContentLoaded 做首屏指标采集，最初我们想过使用技术栈的生命周期来解决这个问题。</p><p>比如，我们以 Vue 为例，记录首屏各个组件 mounted 的时间，最终在 onload 时，统计出最后一个组件 mounted 的时间，做为首屏时间。但很快，我就发现这个方案存在以下问题。</p><ol><li><p>如果一个首屏页面的内容没有被组件化，那么首屏时间无法被统计到，除非各个业务都定一套组件标准，首屏内容必须封装成组件。</p></li><li><p>前面也提过 onload 的时间并非最终时间，可能 onload 时，首屏还没加载完。</p></li><li><p>没有考虑首屏是张图片的情况，在这种情况，首屏虽然加载完成了，可是图片是异步的，图片并没有加载，试想你会在看不到商品图片的情况下，直接下单吗？</p></li></ol><p>当时我们就想，如果能在首屏渲染过程中，把各个资源的加载时间记录到日志中，后续再通过分析，确定某一个资源加载完的时间，就是首屏时间。而 MutationObserver 恰恰可以做到这些。</p><p>MutationObserver 是什么意思呢？请看 MDN 上关于它的定义：</p><blockquote><p>MutationObserver 接口提供了监视对 DOM 树所做更改的能力。它被设计为旧的 Mutation Events 功能的替代品，该功能是 DOM3 Events 规范的一部分。</p></blockquote><p>简单来说， 使用 MutationObserver 能监控页面信息的变化，当页面 body 变化最剧烈的时候，我们拿到的时间数据，就是首屏时间。</p><p>但具体怎么做呢？</p><p>首先，在用户进入页面时，我们可以使用 MutationObserver 监控 DOM 元素 （Document Object Model，文档对象模型）。当 DOM 元素发生变化时，程序会标记变化的元素，记录时间点和分数，存储到数组中。数据的格式类似于 [200ms,18.5] 。</p><p>为了提升计算的效率，我们认为首屏指标采集到某些条件时，首屏渲染已经结束，我们需要考虑首屏采集终止的条件，即计算时间超过 30 秒还没有结束；计算了 4 轮且 1 秒内分数不再变化；计算了 9 次且分数不再变化。</p><p>接下来，设定元素权重计算分数。</p><p>递归遍历 DOM 元素及其子元素，根据子元素所在层数设定元素权重，比如第一层元素权重是 1，当它被渲染时得 1 分，每增加一层权重增加 0.5，比如第五层元素权重是 3.5，渲染时给出对应分数。</p><p>为什么需要权重呢？</p><p>因为页面中每个 DOM 元素对于首屏的意义是不同的，越往内层越接近真实的首屏内容，如图片和文字，越往外层越接近 body 等框架层。</p><p>最后，根据前面的得分，计算元素的分数变化率，获取变化率最大点对应的分数。然后找到该分数对应的时间，即为首屏时间。</p><p>分数部分核心计算逻辑是递归遍历元素，将一些无用的标签排除，如果元素超过可视范围返回 0 分，每一层增加 0.5 的权重，具体请看下面代码示例。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CScor</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">tiers</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">parentScore</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> score </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">tagName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> el.tagName;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&quot;SCRIPT&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> tagName </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;STYLE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> tagName </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;META&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> tagName </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;HEAD&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> tagName) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">childrenLen</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> el.children </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> el.children.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (childrenLen </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> childs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> el.children, len </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childrenLen </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; len </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; len</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        score </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">calculateScore</span><span style="color:#E1E4E8;">(childs[len], tiers </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, score </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (score </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">parentScore) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(el.getBoundingClientRect </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> el.</span><span style="color:#B392F0;">getBoundingClientRect</span><span style="color:#E1E4E8;">().top </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WH</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      score </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">.5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> tiers;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> score;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CScor</span><span style="color:#24292E;">(</span><span style="color:#E36209;">el</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tiers</span><span style="color:#24292E;">, </span><span style="color:#E36209;">parentScore</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">tagName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> el.tagName;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;SCRIPT&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> tagName </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;STYLE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> tagName </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;META&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> tagName </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;HEAD&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> tagName) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">childrenLen</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> el.children </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> el.children.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (childrenLen </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> childs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> el.children, len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childrenLen </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; len </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; len</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        score </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">calculateScore</span><span style="color:#24292E;">(childs[len], tiers </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, score </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (score </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">parentScore) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(el.getBoundingClientRect </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> el.</span><span style="color:#6F42C1;">getBoundingClientRect</span><span style="color:#24292E;">().top </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">WH</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      score </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">.5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> tiers;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>变化率部分核心计算逻辑是获取 DOM 变化最大时对应的时间，代码如下所示。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">calFinallScore</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sendMark) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Date.</span><span style="color:#B392F0;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> performance.timing.fetchStart;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> isCheckFmp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> time </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> time </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].t </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CHECK_INTERVAL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> window.performance.timing.loadEventEnd </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].score </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">].score);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.observer </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> isCheckFmp) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.observer.</span><span style="color:#B392F0;">disconnect</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        window.</span><span style="color:#79B8FF;">SCORE_ITEMS_CHART</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> fmps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getFmp</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">SCORE_ITEMS</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> record </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; o </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> fmps.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; o</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (fmps[o].t </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> fmps[o </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].t) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> l </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fmps[o].score </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> fmps[o </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">].score;</span></span>
<span class="line"><span style="color:#E1E4E8;">            (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">record </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> record.rate </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> l) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> (record </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              t: fmps[o].t,</span></span>
<span class="line"><span style="color:#E1E4E8;">              rate: l</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.fmp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> record </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> record.t </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30001</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">checkImgs</span><span style="color:#E1E4E8;">(document.body)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> max </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.imgs.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">^</span><span style="color:#DBEDFF;">(</span><span style="color:#85E89D;font-weight:bold;">\\/\\/</span><span style="color:#DBEDFF;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(element)) element </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https:&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> element;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> performance.</span><span style="color:#B392F0;">getEntriesByName</span><span style="color:#E1E4E8;">(element)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].responseEnd </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">          }))</span></span>
<span class="line"><span style="color:#E1E4E8;">          record </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> record.t </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> record.t </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">36e5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setPerformance</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            fmpImg: </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(record.t , max))</span></span>
<span class="line"><span style="color:#E1E4E8;">          }) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setPerformance</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setPerformance</span><span style="color:#E1E4E8;">({});</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// console.error(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">calFinallScore</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }, </span><span style="color:#79B8FF;">CHECK_INTERVAL</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (error) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">calFinallScore</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sendMark) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">time</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Date.</span><span style="color:#6F42C1;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> performance.timing.fetchStart;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> isCheckFmp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> time </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].t </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CHECK_INTERVAL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> window.performance.timing.loadEventEnd </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].score </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">].score);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.observer </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> isCheckFmp) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.observer.</span><span style="color:#6F42C1;">disconnect</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        window.</span><span style="color:#005CC5;">SCORE_ITEMS_CHART</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> fmps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getFmp</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">SCORE_ITEMS</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> record </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> o </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; o </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> fmps.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; o</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (fmps[o].t </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> fmps[o </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].t) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fmps[o].score </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> fmps[o </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].score;</span></span>
<span class="line"><span style="color:#24292E;">            (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">record </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> record.rate </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> l) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (record </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              t: fmps[o].t,</span></span>
<span class="line"><span style="color:#24292E;">              rate: l</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.fmp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> record </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> record.t </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30001</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">checkImgs</span><span style="color:#24292E;">(document.body)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.imgs.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">^</span><span style="color:#032F62;">(</span><span style="color:#22863A;font-weight:bold;">\\/\\/</span><span style="color:#032F62;">)/</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(element)) element </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https:&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> element;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> performance.</span><span style="color:#6F42C1;">getEntriesByName</span><span style="color:#24292E;">(element)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].responseEnd </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">          }))</span></span>
<span class="line"><span style="color:#24292E;">          record </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> record.t </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> record.t </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">36e5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setPerformance</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            fmpImg: </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(record.t , max))</span></span>
<span class="line"><span style="color:#24292E;">          }) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setPerformance</span><span style="color:#24292E;">({});</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setPerformance</span><span style="color:#24292E;">({});</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// console.error(error)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">calFinallScore</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }, </span><span style="color:#005CC5;">CHECK_INTERVAL</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (error) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>这个就是首屏计算的部分流程。</p><p>看完前面的流程，不知道你有没有这样的疑问：如果页面里包含图片，使用上面的首屏指标采集方案，结果准确吗？</p><p>结论是：不准确。上述计算逻辑主要是针对 DOM 元素来做的，图片加载过程是异步，图片容器（图片的 DOM 元素）和内容的加载是分开的，当容器加载出来时，内容还没出来，一定要确保内容加载出来，才算首屏。</p><p>这就需要增加一些策略了，以下是包含图片页面的首屏计算 demo。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!doctype html&gt;&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;&lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;imgTest&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;imgTest&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=text/css&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    background-image:url(&#39;https://www.baidu.com/img/dong_8f1d47bcb77d74a1e029d8cbb3b33854.gif);</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text/javascript&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">(() =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  const imgs = []</span></span>
<span class="line"><span style="color:#E1E4E8;">  const getImageDomSrc = {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _getImgSrcFromBgImg: function (bgImg) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      var imgSrc;</span></span>
<span class="line"><span style="color:#E1E4E8;">      var matches = bgImg.match(/url\\(.*?\\)/g);</span></span>
<span class="line"><span style="color:#E1E4E8;">      if (matches </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> matches.length) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var urlStr = matches[matches.length - 1];</span></span>
<span class="line"><span style="color:#E1E4E8;">        var innerUrl = urlStr.replace(/^url\\([\\&#39;\\&quot;]?/, &#39;&#39;).replace(/[\\&#39;\\&quot;]?\\)$/, &#39;&#39;);</span></span>
<span class="line"><span style="color:#E1E4E8;">        if (((/^http/.test(innerUrl) || /^\\/\\//.test(innerUrl)))) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          imgSrc = innerUrl;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      return imgSrc;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    getImgSrcFromDom: function (dom, imgFilter) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      if (!(dom.getBoundingClientRect </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> dom.getBoundingClientRect().top &lt; window.innerHeight))</span></span>
<span class="line"><span style="color:#E1E4E8;">        return false;</span></span>
<span class="line"><span style="color:#E1E4E8;">      imgFilter = [/(\\.)(png|jpg|jpeg|gif|webp|ico|bmp|tiff|svg)/i]</span></span>
<span class="line"><span style="color:#E1E4E8;">      var src;</span></span>
<span class="line"><span style="color:#E1E4E8;">      if (dom.nodeName.toUpperCase() == &#39;IMG&#39;) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        src = dom.getAttribute(&#39;src&#39;);</span></span>
<span class="line"><span style="color:#E1E4E8;">      } else {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var computedStyle = window.getComputedStyle(dom);</span></span>
<span class="line"><span style="color:#E1E4E8;">        var bgImg = computedStyle.getPropertyValue(&#39;background-image&#39;) || computedStyle.getPropertyValue(&#39;background&#39;);</span></span>
<span class="line"><span style="color:#E1E4E8;">        var tempSrc = this._getImgSrcFromBgImg(bgImg, imgFilter);</span></span>
<span class="line"><span style="color:#E1E4E8;">        if (tempSrc </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> this._isImg(tempSrc, imgFilter)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          src = tempSrc;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      return src;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    _isImg: function (src, imgFilter) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      for (var i = 0, len = imgFilter.length; i &lt; len; i++) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        if (imgFilter[i].test(src)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          return true;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      return false;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    traverse(e) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      var _this = this</span></span>
<span class="line"><span style="color:#E1E4E8;">        , tName = e.tagName;</span></span>
<span class="line"><span style="color:#E1E4E8;">      if (&quot;SCRIPT&quot; !== tName </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> &quot;STYLE&quot; !== tName </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> &quot;META&quot; !== tName </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> &quot;HEAD&quot; !== tName) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var el = this.getImgSrcFromDom(e)</span></span>
<span class="line"><span style="color:#E1E4E8;">        if (el </span><span style="color:#FDAEB7;font-style:italic;">&amp;&amp;</span><span style="color:#E1E4E8;"> !imgs.includes(el))</span></span>
<span class="line"><span style="color:#E1E4E8;">          imgs.push(el)</span></span>
<span class="line"><span style="color:#E1E4E8;">        var len = e.children ? e.children.length : 0;</span></span>
<span class="line"><span style="color:#E1E4E8;">        if (len &gt; 0)</span></span>
<span class="line"><span style="color:#E1E4E8;">          for (var child = e.children, _len = len - 1; _len &gt;= 0; _len--)</span></span>
<span class="line"><span style="color:#E1E4E8;">            _this.traverse(child[_len]);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  getImageDomSrc.traverse(document.body);</span></span>
<span class="line"><span style="color:#E1E4E8;">  window.onload=function(){</span></span>
<span class="line"><span style="color:#E1E4E8;">  var max = Math.max(...imgs.map(element =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">     if (/^(\\/\\/)/.test(element))</span></span>
<span class="line"><span style="color:#E1E4E8;">      element = &#39;https:&#39; + element;</span></span>
<span class="line"><span style="color:#E1E4E8;">    try {</span></span>
<span class="line"><span style="color:#E1E4E8;">      return performance.getEntriesByName(element)[0].responseEnd || 0</span></span>
<span class="line"><span style="color:#E1E4E8;">    } catch (error) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      return 0</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ))</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.log(max);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">)()</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!doctype html&gt;&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;&lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;imgTest&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;imgTest&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;https://www.baidu.com/img/bd_logo1.png?where=super&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=text/css&gt;</span></span>
<span class="line"><span style="color:#24292E;">    background-image:url(&#39;https://www.baidu.com/img/dong_8f1d47bcb77d74a1e029d8cbb3b33854.gif);</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;text/javascript&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">(() =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  const imgs = []</span></span>
<span class="line"><span style="color:#24292E;">  const getImageDomSrc = {</span></span>
<span class="line"><span style="color:#24292E;">    _getImgSrcFromBgImg: function (bgImg) {</span></span>
<span class="line"><span style="color:#24292E;">      var imgSrc;</span></span>
<span class="line"><span style="color:#24292E;">      var matches = bgImg.match(/url\\(.*?\\)/g);</span></span>
<span class="line"><span style="color:#24292E;">      if (matches </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> matches.length) {</span></span>
<span class="line"><span style="color:#24292E;">        var urlStr = matches[matches.length - 1];</span></span>
<span class="line"><span style="color:#24292E;">        var innerUrl = urlStr.replace(/^url\\([\\&#39;\\&quot;]?/, &#39;&#39;).replace(/[\\&#39;\\&quot;]?\\)$/, &#39;&#39;);</span></span>
<span class="line"><span style="color:#24292E;">        if (((/^http/.test(innerUrl) || /^\\/\\//.test(innerUrl)))) {</span></span>
<span class="line"><span style="color:#24292E;">          imgSrc = innerUrl;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      return imgSrc;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    getImgSrcFromDom: function (dom, imgFilter) {</span></span>
<span class="line"><span style="color:#24292E;">      if (!(dom.getBoundingClientRect </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> dom.getBoundingClientRect().top &lt; window.innerHeight))</span></span>
<span class="line"><span style="color:#24292E;">        return false;</span></span>
<span class="line"><span style="color:#24292E;">      imgFilter = [/(\\.)(png|jpg|jpeg|gif|webp|ico|bmp|tiff|svg)/i]</span></span>
<span class="line"><span style="color:#24292E;">      var src;</span></span>
<span class="line"><span style="color:#24292E;">      if (dom.nodeName.toUpperCase() == &#39;IMG&#39;) {</span></span>
<span class="line"><span style="color:#24292E;">        src = dom.getAttribute(&#39;src&#39;);</span></span>
<span class="line"><span style="color:#24292E;">      } else {</span></span>
<span class="line"><span style="color:#24292E;">        var computedStyle = window.getComputedStyle(dom);</span></span>
<span class="line"><span style="color:#24292E;">        var bgImg = computedStyle.getPropertyValue(&#39;background-image&#39;) || computedStyle.getPropertyValue(&#39;background&#39;);</span></span>
<span class="line"><span style="color:#24292E;">        var tempSrc = this._getImgSrcFromBgImg(bgImg, imgFilter);</span></span>
<span class="line"><span style="color:#24292E;">        if (tempSrc </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> this._isImg(tempSrc, imgFilter)) {</span></span>
<span class="line"><span style="color:#24292E;">          src = tempSrc;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      return src;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    _isImg: function (src, imgFilter) {</span></span>
<span class="line"><span style="color:#24292E;">      for (var i = 0, len = imgFilter.length; i &lt; len; i++) {</span></span>
<span class="line"><span style="color:#24292E;">        if (imgFilter[i].test(src)) {</span></span>
<span class="line"><span style="color:#24292E;">          return true;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      return false;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    traverse(e) {</span></span>
<span class="line"><span style="color:#24292E;">      var _this = this</span></span>
<span class="line"><span style="color:#24292E;">        , tName = e.tagName;</span></span>
<span class="line"><span style="color:#24292E;">      if (&quot;SCRIPT&quot; !== tName </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> &quot;STYLE&quot; !== tName </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> &quot;META&quot; !== tName </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> &quot;HEAD&quot; !== tName) {</span></span>
<span class="line"><span style="color:#24292E;">        var el = this.getImgSrcFromDom(e)</span></span>
<span class="line"><span style="color:#24292E;">        if (el </span><span style="color:#B31D28;font-style:italic;">&amp;&amp;</span><span style="color:#24292E;"> !imgs.includes(el))</span></span>
<span class="line"><span style="color:#24292E;">          imgs.push(el)</span></span>
<span class="line"><span style="color:#24292E;">        var len = e.children ? e.children.length : 0;</span></span>
<span class="line"><span style="color:#24292E;">        if (len &gt; 0)</span></span>
<span class="line"><span style="color:#24292E;">          for (var child = e.children, _len = len - 1; _len &gt;= 0; _len--)</span></span>
<span class="line"><span style="color:#24292E;">            _this.traverse(child[_len]);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  getImageDomSrc.traverse(document.body);</span></span>
<span class="line"><span style="color:#24292E;">  window.onload=function(){</span></span>
<span class="line"><span style="color:#24292E;">  var max = Math.max(...imgs.map(element =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">     if (/^(\\/\\/)/.test(element))</span></span>
<span class="line"><span style="color:#24292E;">      element = &#39;https:&#39; + element;</span></span>
<span class="line"><span style="color:#24292E;">    try {</span></span>
<span class="line"><span style="color:#24292E;">      return performance.getEntriesByName(element)[0].responseEnd || 0</span></span>
<span class="line"><span style="color:#24292E;">    } catch (error) {</span></span>
<span class="line"><span style="color:#24292E;">      return 0</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  ))</span></span>
<span class="line"><span style="color:#24292E;">  console.log(max);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">)()</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br></div></div><p>它的计算逻辑是这样的。</p><p>首先，获取页面所有的图片路径。在这里，图片类型分两种，一种是带 IMG 标签的，一种是带 DIV 标签的。前者可以直接通过 src 值得到图片路径，后者可以使用 window.getComputedStyle(dom) 方式获取它的样式集合。</p><p>接下来，通过正则获取图片的路径即可。</p><p>然后通过 performance.getEntriesByName(element)[0].responseEnd 的方式获取到对应图片路径的下载时间，最后与使用 MutationObserver 获得的 DOM 首屏时间相比较，哪个更长，哪个就是最终的首屏时间。</p><p>以上就是首屏采集的完整流程。</p><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p><img src="https://s0.lgstatic.com/i/image6/M00/13/4C/CioPOWBB_OyAW8ipAAFZ1B6bNmQ490.png" alt="溪风的思维导图04.png"></p><p>这一讲我主要介绍了首屏指标采集相关的内容。不知道你看完后有没有这样的疑惑：这种性能采集方案靠谱吗？目前一线大厂有谁在使用这种采集方案？采集过程中会不会有什么坑？</p><p>先说靠不靠谱，目前来说，这是市面中最好的首屏指标采集方案，它兼容了单页面应用和服务端模板的页面。我们反复做了几个月的数据实验，并借助它完成了一个全公司的性能优化项目，用实验和实践结果证明这种方案的靠谱程度。</p><p>第二个问题，一线大厂里，阿里云、淘宝、阿里飞猪、得到 App、微店等公司都广泛在使用这个方案。</p><p>最后一个问题，首屏指标采集中会不会有坑。实践中确实有不少的坑。比如，一个单页面应用，我们需要采集它的首屏时间，当我们采集首页的首屏指标时，用户恰好输入了一些东西导致页面跳转到了搜索结果页。此时首屏采集脚本继续在执行，那最终统计的就是搜索结果页的首屏数据而不是首页的</p><p>类似这种问题，你想过怎么解决吗？欢迎在评论区和我留言进行交流。</p><p>上面就是首屏指标采集和优化手段相关的内容，接下来看看其他的指标如何采集。</p><p>源码地址：<a href="https://github.com/lagoueduCol/WebPerformanceOptimization-xifeng" target="_blank" rel="noreferrer">https://github.com/lagoueduCol/WebPerformanceOptimization-xifeng</a></p>`,83),e=[o];function t(r,c,E,y,i,m){return n(),a("div",null,e)}const u=s(l,[["render",t]]);export{b as __pageData,u as default};
