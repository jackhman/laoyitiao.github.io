import{_ as p,j as e,o as t,g as c,k as l,h as a,Q as o,s}from"./chunks/framework.4e7d56ce.js";const x=JSON.parse('{"title":"第18讲：带你揭开toolkit-activation工具箱的秘密","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md","filePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1736) 第18讲：带你揭开 toolkit-activation 工具箱的秘密.md"},E=o("",9),y=s("p",null,"点击该 Span，可以看到具体的 Tag 信息以及 Log 信息，如下图所示：",-1),i=s("h4",{id:"深入工具类原理",tabindex:"-1"},[a("深入工具类原理 "),s("a",{class:"header-anchor",href:"#深入工具类原理","aria-label":'Permalink to "深入工具类原理"'},"​")],-1),g=s("p",null,"了解了 @Trace 注解的使用之后，我们来分析其底层实现。首先我们跳转到 SkyWalking 项目的 apm-toolkit-trace 模块，如下图所示：",-1),d=s("p",null,"该模块就有前面使用到的 @Trace 注解以及 ActiveSpan、TraceContext 工具类，打开这两个工具类会发现，全部是空实现，那添加 Tag、获取 Trace ID 等操作是如何完成的呢？我在前面介绍 SkyWalking 源码各个模块功能时提到，apm-application-toolkit 模块类似于暴露 API 定义，对应的处理逻辑在 apm-sniffer/apm-toolkit-activation 模块中实现。",-1),u=s("p",null,"在 apm-toolkit-trace-activation 模块的 skywalking-plugin.def 文件中定义了四个 ClassEnhancePluginDefine 实现类：",-1),F=s("ul",null,[s("li",null,"ActiveSpanActivation"),s("li",null,"TraceAnnotationActivation"),s("li",null,"TraceContextActivation"),s("li",null,"CallableOrRunnableActivation")],-1),h=s("p",null,"这四个 ClassEnhancePluginDefine 实现类的继承关系如下图所示：",-1),v=o("",6),C=o("",5),A=s("p",null,"除了通过 RunnableWrapper 包装 Runnable 之外，我们可以通过 CallableWrapper 包装 Callable 实现 Trace 的跨线程传播。下图展示了 Trace 信息跨线程传播的核心原理：",-1),b=o("",14),D=o("",4),m=o("",4),k=o("",12),q=o("",17);function _(T,S,L,B,M,f){const n=e("Image");return t(),c("div",null,[E,l(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvL-AJxsiAALX11rEFcE040.png"}),a(),y,l(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvMeAIijwAAG4HeGpP1w020.png"}),a(),i,g,l(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvNCANNntAAF2iT3mNig327.png"}),a(),d,u,F,h,l(n,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvNmAEeMhAAHH-Xli_I8395.png"}),a(),v,l(n,{alt:"image (4).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvOSAJMFjAAIONP7amFM561.png"}),a(),C,l(n,{alt:"跨线程传播.png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvO-AEq9VAAFo-ZWXkGM186.png"}),a(),A,l(n,{alt:"image (5).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvPqAKHZ1AAFedhJrbC8809.png"}),a(),b,l(n,{alt:"image (6).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvQeAdq60AAJd-oywE_o373.png"}),a(),D,l(n,{alt:"image (7).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvRKAMCK4AAHOkonOBic764.png"}),a(),m,l(n,{alt:"image (8).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/Ciqc1F6zvRqAVReiAAEEjIqgllA872.png"}),a(),k,l(n,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/04/26/CgqCHl6zvSWAA-ZRAAB1DP_LB58112.png"}),a(),q])}const P=p(r,[["render",_]]);export{x as __pageData,P as default};
