import{_ as p,j as o,o as e,g as t,k as l,h as n,s,Q as c}from"./chunks/framework.a0d18f64.js";const U=JSON.parse('{"title":"14红点组件：如何将红点设计做成Flutter组件","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3531) 14  红点组件：如何将红点设计做成 Flutter 组件.md","filePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3531) 14  红点组件：如何将红点设计做成 Flutter 组件.md","lastUpdated":1696682708000}'),r={name:"posts/frontEnd/101-Flutter快学快用24讲文档/(3531) 14  红点组件：如何将红点设计做成 Flutter 组件.md"},E=s("h1",{id:"_14红点组件-如何将红点设计做成flutter组件",tabindex:"-1"},[n("14红点组件：如何将红点设计做成Flutter组件 "),s("a",{class:"header-anchor",href:"#_14红点组件-如何将红点设计做成flutter组件","aria-label":'Permalink to "14红点组件：如何将红点设计做成Flutter组件"'},"​")],-1),y=s("p",null,"上一课时我们完善了首页推荐功能，本课时将完善个人页面。个人页面涉及红点组件的知识点，因此本课时在完善个人页面的同时，会着重介绍下该功能的实现。",-1),i=s("h3",{id:"实现效果",tabindex:"-1"},[n("实现效果 "),s("a",{class:"header-anchor",href:"#实现效果","aria-label":'Permalink to "实现效果"'},"​")],-1),d=s("p",null,"我们先来看下本课时要完成的一个界面效果，如图 1 动画所示。",-1),F=s("p",null,"图 1 本课时目标效果",-1),g=s("p",null,"首先在最底部导航栏增加了消息未读数提示，当有新的未读消息时候，会有红点提示。个人界面展示了个人信息以及个人相关的操作栏（我的好友、我的消息和系统设置）。",-1),C=s("p",null,"接下来我们来看下实现该效果需要做哪些前期准备工作。",-1),u=s("h3",{id:"前期准备",tabindex:"-1"},[n("前期准备 "),s("a",{class:"header-anchor",href:"#前期准备","aria-label":'Permalink to "前期准备"'},"​")],-1),h=s("p",null,"基于图 1 的效果，我们首先要实现个人页面。个人页面是一个新页面，对于新页面我们按照第 7 课时的知识去设计页面。由于新增了红点功能，首先在 App 启动时 ，需要一个新的接口拉取服务器未读消息数，然后新增 API 来拉取该数据。其次这个数据状态，需要在多个组件中共享，因此要新增 Model 来管理该状态 。",-1),m=s("h4",{id:"组件设计",tabindex:"-1"},[n("组件设计 "),s("a",{class:"header-anchor",href:"#组件设计","aria-label":'Permalink to "组件设计"'},"​")],-1),A=s("p",null,"根据图 2 的界面效果，我们将页面拆分图 3 组件树。",-1),B=s("p",null,"图 2 个人页面效果",-1),D=c("",44),M=s("p",null,"图 4 红点效果图",-1),_=s("p",null,"以上就实现了红点组件的设计，并应用红点组件完善了 Two You Friend 的个人页面功能。",-1),v=s("h3",{id:"总结",tabindex:"-1"},[n("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),f=s("p",null,"本课时在实现 App 个人页面的过程中，着重介绍了红点组件的设计和应用，同时介绍到了 Provider 多状态管理的方法。学习完本课时后，你要熟练应用红点组件，并且掌握其业务组件设计的方法，其次需要掌握 Provider 的多状态管理方法 。",-1),b=s("p",null,"在本课时之前，所有的 API 接口都是一个假接口数据，下一课时我们将介绍如何进行网络请求，来完善 API 部分功能。谢谢大家。",-1),w=s("p",null,[s("a",{href:"https://github.com/love-flutter/flutter-column",target:"_blank",rel:"noreferrer"},"点击此链接查看本课时源码")],-1);function k(N,x,I,P,T,W){const a=o("Image");return e(),t("div",null,[E,y,i,d,l(a,{alt:"20200712_160246.gif",src:"https://s0.lgstatic.com/i/image/M00/37/AD/Ciqc1F8aewCAIDGrAAocYK2ZqIo350.gif"}),n(),F,g,C,u,h,m,A,l(a,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/37/B9/CgqCHl8aeySAO1UTAAIF-lgAvBA674.png"}),n(),B,l(a,{alt:"image (10).png",src:"https://s0.lgstatic.com/i/image/M00/37/AD/Ciqc1F8aezCAA5btAACFxGz_UhM158.png"}),n(),D,l(a,{alt:"20200712_160246 (1).gif",src:"https://s0.lgstatic.com/i/image/M00/37/AE/Ciqc1F8ae4WASR5LAAocYK2ZqIo031.gif"}),n(),M,_,v,f,b,w])}const S=p(r,[["render",k]]);export{U as __pageData,S as default};
