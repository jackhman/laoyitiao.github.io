import{_ as o,j as p,o as s,g as n,k as t,h as a,s as l,Q as e}from"./chunks/framework.4e7d56ce.js";const L=JSON.parse('{"title":"第03讲：深入浅出JVM","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/036_32个Java面试必考点/(5) 第03讲：深入浅出JVM.md","filePath":"posts/backEnd/036_32个Java面试必考点/(5) 第03讲：深入浅出JVM.md","lastUpdated":1696417798000}'),_={name:"posts/backEnd/036_32个Java面试必考点/(5) 第03讲：深入浅出JVM.md"},r=l("h1",{id:"第03讲-深入浅出jvm",tabindex:"-1"},[a("第03讲：深入浅出JVM "),l("a",{class:"header-anchor",href:"#第03讲-深入浅出jvm","aria-label":'Permalink to "第03讲：深入浅出JVM"'},"​")],-1),h=l("p",null,"本课时的主题是 JVM 原理。JVM 是 Java 程序运行基础，面试时一定会遇到 JVM 相关的题。本课时会先对面试中 JVM 的考察点进行汇总介绍。然后对 JVM 内存模型、Java 的类加载机制、常用的 GC 算法这三个知识点进行详细讲解。最后汇总 JVM 考察点和加分项，以及这部分知识的面试真题。",-1),c=l("h6",{id:"jvm-知识点汇总",tabindex:"-1"},[a("JVM 知识点汇总 "),l("a",{class:"header-anchor",href:"#jvm-知识点汇总","aria-label":'Permalink to "JVM 知识点汇总"'},"​")],-1),d=l("p",null,"首先看看 JVM 的知识点汇总。",-1),u=l("br",null,null,-1),C=e("",6),m=e("",7),M=l("p",null,"在多线程进行数据交互时，例如线程 A 给一个共享变量赋值后，由线程 B 来读取这个值，A 修改完变量是修改在自己的工作区内存中，B 是不可见的，只有从 A 的工作区写回主内存，B 再从主内存读取自己的工作区才能进行进一步的操作。由于指令重排序的存在，这个写---读的顺序有可能被打乱。因此 JMM 需要提供原子性、可见性、有序性的保证。",-1),A=l("h6",{id:"详解-jmm-保证",tabindex:"-1"},[a("详解 JMM 保证 "),l("a",{class:"header-anchor",href:"#详解-jmm-保证","aria-label":'Permalink to "详解 JMM 保证"'},"​")],-1),J=l("p",null,"如下图所示，来看 JMM 如何保证原子性、可见性，有序性。",-1),g=l("br",null,null,-1),G=e("",11),b=e("",4),T=l("p",null,"如上图所示，Java 自带的三种类加载器分别是：BootStrap 启动类加载器、扩展类加载器和应用加载器（也叫系统加载器）。图右边的桔黄色文字表示各类加载器对应的加载目录。启动类加载器加载 java home 中 lib 目录下的类，扩展加载器负责加载 ext 目录下的类，应用加载器加载 classpath 指定目录下的类。除此之外，可以自定义类加载器。",-1),V=l("p",null,"Java 的类加载使用双亲委派模式，即一个类加载器在加载类时，先把这个请求委托给自己的父类加载器去执行，如果父类加载器还存在父类加载器，就继续向上委托，直到顶层的启动类加载器，如上图中蓝色向上的箭头。如果父类加载器能够完成类加载，就成功返回，如果父类加载器无法完成加载，那么子加载器才会尝试自己去加载。如图中的桔黄色向下的箭头。",-1),S=l("p",null,"这种双亲委派模式的好处，可以避免类的重复加载，另外也避免了 Java 的核心 API 被篡改。",-1),v=l("h5",{id:"详解分代回收",tabindex:"-1"},[a("详解分代回收 "),l("a",{class:"header-anchor",href:"#详解分代回收","aria-label":'Permalink to "详解分代回收"'},"​")],-1),B=l("p",null,"Java 的堆内存被分代管理，为什么要分代管理呢？分代管理主要是为了方便垃圾回收，这样做基于2个事实，第一，大部分对象很快就不再使用；第二，还有一部分不会立即无用，但也不会持续很长时间。",-1),q=l("p",null,"虚拟机划分为年轻代、老年代、和永久代，如下图所示。",-1),P=l("br",null,null,-1),f=e("",8),k=e("",6),x=e("",15),Z=e("",16),I=l("p",null,"解题思路如下所示。",-1),R=l("ul",null,[l("li",null,[l("p",null,"第 1 题 Java 内存模型前面讲过，面试时回答这个问题时记得和面试官确认是希望回答 JVM 的内存模型，还是 Java 对内存访问的模型，不要答跑偏。")]),l("li",null,[l("p",null,"第 2 题要复习一下什么场景下会触发 FullGC，例如年轻代晋升时老年代空间不足，例如永久代空间不足等。")]),l("li",null,[l("p",null,"第 3～6 题前面已经有过讲解，因此不再重复。")])],-1),j=l("br",null,null,-1),D=l("p",null,"第二部分真题如下所示。",-1),N=l("p",null,"解题思路如下所示。",-1),E=l("ul",null,[l("li",null,[l("p",null,"第 7 题 volatile 要重点回答强制主内存读写同步以及防止指令重排序两点。")]),l("li",null,[l("p",null,"第 8、9 题前面已经讲过。")]),l("li",null,[l("p",null,"第 10 题重点介绍出强、弱、软、虚四种引用，以及在 GC 中的处理方式。")]),l("li",null,[l("p",null,"第 11 题可以了解一下 Java 自带的几种工具的功能，例如 JMC 中的飞行记录器，堆分析工具 MAT，线程分析工具 jstack 和获取堆信息的 jmap 等。")])],-1),z=l("p",null,"本课时内容至此结束，下一课时讲解 Java 另一个非常重要的内容：多线程。",-1),O=l("br",null,null,-1);function W(w,F,K,Q,U,y){const i=p("Image");return s(),n("div",null,[r,h,c,d,u,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/DB/CgotOV14lumAJ5mOAAOz7eKZQb8955.png"}),a(),C,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14lumAchYcAAB51w2Hj9Y736.png"}),a(),m,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/DB/CgotOV14lumATjNyAAB-0Ie_3x8688.png"}),a(),M,A,J,g,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14lumAex05AAB83iBktjQ024.png"}),a(),G,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/DB/CgotOV14lumAWI3bAACVhLcSULk171.png"}),a(),b,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14luqAA8NAAABwXhjZrug069.png"}),a(),T,V,S,v,B,q,P,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14luqAFGZHAABEqvU94zM441.png"}),a(),f,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/DB/CgotOV14luqAB61oAABezTrv-gg961.png"}),a(),k,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14luqAR5suAAB5tOFWo20859.png"}),a(),x,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14luqAauqUAAB6N4rQvYU477.png"}),a(),Z,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/DB/CgotOV14luqALq0IAACqj_5S_nw868.png"}),a(),I,R,j,D,t(i,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/8A/BB/CgoB5l14luuAJqWRAACFJ6QM8Tg783.png"}),a(),N,E,z,O])}const Y=o(_,[["render",W]]);export{L as __pageData,Y as default};
