import{_ as o,j as a,o as t,g as s,k as n,Q as e}from"./chunks/framework.4e7d56ce.js";const f=JSON.parse('{"title":"练习题详解 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/重学操作系统_文档/(4653) 加餐  练习题详解（八）.md","filePath":"posts/backEnd/重学操作系统_文档/(4653) 加餐  练习题详解（八）.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/重学操作系统_文档/(4653) 加餐  练习题详解（八）.md"},p=e('<p>今天我会带你把《模块八：虚拟化和其他》中涉及的课后练习题，逐一讲解，并给出每一讲练习题的解题思路和答案。</p><h3 id="练习题详解" tabindex="-1">练习题详解 <a class="header-anchor" href="#练习题详解" aria-label="Permalink to &quot;练习题详解&quot;">​</a></h3><h4 id="_37-虚拟化技术介绍-vmware-和-docker-的区别" tabindex="-1">37 | 虚拟化技术介绍：VMware 和 Docker 的区别？ <a class="header-anchor" href="#_37-虚拟化技术介绍-vmware-和-docker-的区别" aria-label="Permalink to &quot;37 \\| 虚拟化技术介绍：VMware 和 Docker 的区别？&quot;">​</a></h4><p><strong>【问题】自己尝试用 Docker 执行一个自己方向的 Web 程序：比如 Spring/Django/Express 等？</strong></p><p>【<strong>解析</strong> 】关于如何安装 Docker，你可以参考<a href="https://docs.docker.com/get-docker/" target="_blank" rel="noreferrer">这篇文档</a>。然后这里还有一个不错的 SpringBoot+MySQL+Redis 例子，你可以参考<a href="https://github.com/tomoyane/springboot-bestpractice" target="_blank" rel="noreferrer">这篇内容</a>。</p><p>其他方向可以参考上面例子中的 Compose.yml 去定义自己的环境。 一般开发环境喜欢把所有工具链用 Compose 放到一起，上线的环境数据库一般不会用 Docker 容器。 Docker-Compose 是一个专门用来定义多容器任务的工具，你可以<a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">在这里</a>得到。</p><p>国内镜像可以用 Aliyun 的，具体你可以参考<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noreferrer">这篇文档</a>。</p><p>（注：需要一个账号并且登录）</p><h4 id="_38-容器编排技术-如何利用-k8s-和-docker-swarm-管理微服务" tabindex="-1">38 | 容器编排技术：如何利用 K8s 和 Docker Swarm 管理微服务？ <a class="header-anchor" href="#_38-容器编排技术-如何利用-k8s-和-docker-swarm-管理微服务" aria-label="Permalink to &quot;38 \\| 容器编排技术：如何利用 K8s 和 Docker Swarm 管理微服务？&quot;">​</a></h4><p><strong>【问题</strong> 】<strong>为什么会有多个容器共用一个 Pod 的需求</strong>？</p><p>【<strong>解析</strong>】Pod 内部的容器共用一个网络空间，可以通过 localhost 进行通信。另外多个容器，还可以共享一个存储空间。</p><p>比如一个 Web 服务容器，可以将日志、监控数据不断写入共享的磁盘空间，然后由日志服务、监控服务处理将日志上传。</p><p>再比如说一些跨语言的场景，比如一个 Java 服务接收到了视频文件传给一 个 OpenCV 容器进行处理。</p><p>以上这种设计模式，我们称为<strong>边车模式</strong>（Sidecar），边车模式将数个容器放入一个分组内（例如 K8s 的 Pod），让它们可以分配到相同的节点上。这样它们彼此间可以共用磁盘、网络等。</p><p>在边车模式中，有一类容器，被称为<strong>Ambassador Container</strong>，翻译过来是使节容器。对于一个主容器（Main Container）上的服务，可以通过 Ambassador Container 来连接外部服务。如下图所示：</p>',15),_=e('<p>我们在开发的时候经常会配置不同的环境。如果每个 Web 应用都要实现一套环境探测程序，比如判断是开发、测试还是线上环境，从而连接不同的 MySQL、Redis 等服务，那么每个项目都需要引入一个公用的库，或者实现一套逻辑。这样我们可以使用一个边车容器，专门提供数据库连接的服务。让连接服务可以自动探测环境，并且从远程读取全局配置，这样每个项目的开发者不需要再关心数据库有多少套环境、如何配置了。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>&quot;<a href="https://kaiwu.lagou.com/course/courseInfo.htm?courseId=478#/detail/pc?id=4651" target="_blank" rel="noreferrer">39 | Linux 架构优秀在哪里?</a> &quot;和 &quot;<a href="https://kaiwu.lagou.com/course/courseInfo.htm?courseId=478#/detail/pc?id=4652" target="_blank" rel="noreferrer">40 | 商业操作系统：电商操作系统是不是一个噱头？</a>&quot;因为这两讲内容人文色彩较重，我没有给你设置课后习题。但是如果你对这两讲的内容感兴趣，可以在留言区和我交流。</p><p>到这里，《重学操作系统》专栏的全部知识都已经讲解结束了。在这 40 讲中，我试图用通俗易懂的语言帮助你建立整个《操作系统》的知识体系，并且最大程度地帮助你将这些基础知识发散到实战场景中去。</p><p>在我看来，基础知识是相通的，学习是为了思考和解决问题。《操作系统》和《计算机组成原理》可以作为入门编程领域的前两门课，后续我会继续努力写出更多帮助你提升基础技能、开阔视野、加深认知的专栏课程。</p><p>我的目标是&quot;<strong>开放源头，回归本质</strong> &quot;，<strong>引发你的思考------通过长期的学习和积累，让你的职业生涯可以稳步向前</strong> 。发现求知的乐趣，我是林䭽。感谢你学习我的《重学操作系统》专栏。如果你觉得我的课程可以帮助到你，请你继续关注我今后在拉勾教育推出的其他课程。敬请期待将在招聘季来临前上线的《<strong>计算机网络</strong>》专栏！我们下个专栏见！</p><p>最后，我邀请你为本专栏课程进行结课评价，因为你的每一个观点都是我和拉勾教育最关注的点。<a href="https://wj.qq.com/s2/8016796/2a80/" target="_blank" rel="noreferrer">点击链接，既可参与课程评价</a>。编辑会随机抽 5 位同学送精美礼品喔。</p>',7);function i(d,l,h,g,m,k){const r=a("Image");return t(),s("div",null,[p,n(r,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M01/04/2F/CioPOWAjdxiATdfKAADv_hHJszc514.png"}),_])}const b=o(c,[["render",i]]);export{f as __pageData,b as default};
