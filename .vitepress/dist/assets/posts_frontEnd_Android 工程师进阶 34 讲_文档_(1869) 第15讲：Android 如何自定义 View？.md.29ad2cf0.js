import{_ as o,j as e,o as t,g as c,k as a,s,h as l,Q as p}from"./chunks/framework.4e7d56ce.js";const gs=JSON.parse('{"title":"继承现有控件 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1869) 第15讲：Android 如何自定义 View？.md","filePath":"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1869) 第15讲：Android 如何自定义 View？.md","lastUpdated":1696417798000}'),r={name:"posts/frontEnd/Android 工程师进阶 34 讲_文档/(1869) 第15讲：Android 如何自定义 View？.md"},i=s("p",null,"本课时我们主要学习 Android 是如何自定义 View 的。",-1),E=s("p",null,"当 Android SDK 中提供的系统 UI 控件无法满足业务需求时，我们就需要考虑自己实现 UI 控件。另外掌握自定义控件，也是理解整套 Android 渲染体系的基础，它能够很好地体现一个 Android 工程师对操作系统的理解深度，因此这部分知识也是面试时经常被问到的知识点。关于 UI 渲染的详细流程将在第 21 课时详细介绍。",-1),y=s("p",null,"自定义 UI 控件有 2 种方式：",-1),h=s("ol",null,[s("li",null,"继承系统提供的成熟控件（比如 LinearLayout、RelativeLayout、ImageView 等）；"),s("li",null,"直接继承自系统 View 或者 ViewGroup，并自绘显示内容。")],-1),d=s("h3",{id:"继承现有控件",tabindex:"-1"},[l("继承现有控件 "),s("a",{class:"header-anchor",href:"#继承现有控件","aria-label":'Permalink to "继承现有控件"'},"​")],-1),g=s("p",null,"相对而言，这是一种较简单的实现方式。因为大部分核心工作，比如关于控件大小的测量、控件位置的摆放等相关的计算，在系统中都已经实现并封装好，开发人员只要在其基础上进行一些扩展，并按照自己的意图显示相应的 UI 元素。比如以下代码：",-1),A=s("p",null,"CustomToolBar 继承自 RelativeLayout，在构造函数中通过 addView 方式分别添加了 2 个 ImageView 和 1 个 TextView。显示效果如下：",-1),F=s("h3",{id:"自定义属性",tabindex:"-1"},[l("自定义属性 "),s("a",{class:"header-anchor",href:"#自定义属性","aria-label":'Permalink to "自定义属性"'},"​")],-1),u=s("p",null,"有时候我们想在 XML 布局文件中使用 CustomToolBar 时，希望能在 XML 文件中直接指定 title 的显示内容、字体颜色，leftImage 和 rightImage 的显示图片等。这就需要使用自定义属性。",-1),w=s("p",null,"自定义属性具体步骤分为以下几步：",-1),D=s("h4",{id:"attrs-xml-中声明自定义属性",tabindex:"-1"},[l("attrs.xml 中声明自定义属性 "),s("a",{class:"header-anchor",href:"#attrs-xml-中声明自定义属性","aria-label":'Permalink to "attrs.xml 中声明自定义属性"'},"​")],-1),m=s("p",null,"在 res 的 values 目录下的 attrs.xml 文件中（没有就自己新建一个），使用 标签自定义属性，如下所示：",-1),M=s("p",null,"解释说明：",-1),V=s("ul",null,[s("li",null,"标签代表定义一个自定义属性集合，一般会与自定义控件结合使用；"),s("li",null,"标签则是某一条具体的属性，name 是属性名称，format 代表属性的格式。")],-1),C=s("h4",{id:"在-xml-布局文件中使用自定义属性",tabindex:"-1"},[l("在 XML 布局文件中使用自定义属性 "),s("a",{class:"header-anchor",href:"#在-xml-布局文件中使用自定义属性","aria-label":'Permalink to "在 XML 布局文件中使用自定义属性"'},"​")],-1),_=s("p",null,"需要先添加命名空间 xmlns:app，然后通过命名空间 app 引用自定义属性，并传入相应的图片资源和字符串内容。",-1),L=s("h4",{id:"在-customtoolbar-中-获取自定义属性的引用值",tabindex:"-1"},[l("在 CustomToolBar 中，获取自定义属性的引用值 "),s("a",{class:"header-anchor",href:"#在-customtoolbar-中-获取自定义属性的引用值","aria-label":'Permalink to "在 CustomToolBar 中，获取自定义属性的引用值"'},"​")],-1),H=p('<p>如上图所示，主要是通过 Context.obtainStyleAttributes 方法获取到自定义属性的集合，然后从这个集合中取出相应的自定义属性。</p><p>完整代码参考：<a href="https://github.com/McoyJiang/LagouAndroidShare/tree/master/course15_%E8%87%AA%E5%AE%9A%E4%B9%89View/LagouCustomizedView" target="_blank" rel="noreferrer">拉勾课程代码仓库 课时15</a></p><h3 id="直接继承自-view-或者-viewgroup" tabindex="-1">直接继承自 View 或者 ViewGroup <a class="header-anchor" href="#直接继承自-view-或者-viewgroup" aria-label="Permalink to &quot;直接继承自 View 或者 ViewGroup&quot;">​</a></h3><p>这种方式相比第一种麻烦一些，但是更加灵活，也能实现更加复杂的 UI 界面。一般情况下使用这种实现方式需要解决以下几个问题：</p><ol><li>如何根据相应的属性将 UI 元素绘制到界面；</li><li>自定义控件的大小，也就是宽和高分别设置多少；</li><li>如果是 ViewGroup，如何合理安排其内部子 View 的摆放位置。</li></ol><p>以上 3 个问题依次在如下 3 个方法中得到解决：</p><ol><li>onDraw</li><li>onMeasure</li><li>onLayout</li></ol><p>因此自定义 View 的重点工作其实就是复写并合理的实现这 3 个方法。注意：并不是每个自定义 View 都需要实现这 3 个方法，大多数情况下只需要实现其中 2 个甚至 1 个方法也能满足需求。</p><h4 id="ondraw" tabindex="-1">onDraw <a class="header-anchor" href="#ondraw" aria-label="Permalink to &quot;onDraw&quot;">​</a></h4><p>onDraw 方法接收一个 Canvas 类型的参数。Canvas 可以理解为一个画布，在这块画布上可以绘制各种类型的 UI 元素。</p><p>系统提供了一系列 Canvas 操作方法，如下：</p>',11),S=s("p",null,"从上图中可以看出，Canvas 中每一个绘制操作都需要传入一个 Paint 对象。Paint 就相当于一个画笔，我们可以通过设置画笔的各种属性，来实现不同绘制效果：",-1),b=s("p",null,"比如如下代码，定义 PieImageView 继承自 View，然后在 onDraw 方法中，分别使用 Canvas 的 drawArc 和 drawCircle 方法来绘制弧度和圆形。这两个形状组合在一起就能表示一个简易的圆形进度条控件。",-1),B=s("p",null,"在布局文件中直接使用上述的 PieImageView，设置宽高为 300dp，并在 Activity 中设置 PieImageView 的进度为 45，如下所示：",-1),x=s("p",null,"最终运行显示效果如下：",-1),f=s("p",null,"如果在上面代码中的布局文件中，将 PieImageView 的宽高设置为 wrap_content（也就是自适应），重新运行则显示效果如下：",-1),P=s("p",null,"很显然，PieImageView 并没有正常显示。问题的主要原因就是在 PieImageView 中并没有在 onMeasure 方法中进行重新测量，并重新设置宽高。",-1),v=s("h4",{id:"onmeasure",tabindex:"-1"},[l("onMeasure "),s("a",{class:"header-anchor",href:"#onmeasure","aria-label":'Permalink to "onMeasure"'},"​")],-1),T=s("p",null,[l("首先我们需要弄清楚，自定义 View 为什么需要重新测量。正常情况下，我们直接在 XML 布局文件中定义好 View 的宽高，然后让自定义 View 在此宽高的区域内显示即可。但是为了更好地兼容不同尺寸的屏幕，Android 系统提供了 wrap_contetn 和 match_parent 属性来规范控件的显示规则。它们分别代表"),s("strong",null,"自适应大小"),l(" 和"),s("strong",null,"填充父视图"),l(" 的"),s("strong",null,"大小"),l("，但是这两个属性并没有指定具体的大小，因此我们需要在 onMeasure 方法中过滤出这两种情况，真正的测量出自定义 View 应该显示的宽高大小。")],-1),W=s("p",null,"所有工作都是在 onMeasure 方法中完成，方法定义如下：",-1),I=s("p",null,[l("可以看出，方法会传入 2 个参数 widthMeasureSpec 和 heightMeasureSpec。这两个参数是从父视图传递给子 View 的两个参数，看起来很像宽、高，但是它们所表示的不仅仅是宽和高，还有一个非常重要的"),s("strong",null,"测量模式"),l("。")],-1),q=s("p",null,"一共有 3 种测量模式。",-1),z=s("ol",null,[s("li",null,"EXACTLY：表示在 XML 布局文件中宽高使用 match_parent 或者固定大小的宽高；"),s("li",null,"AT_MOST：表示在 XML 布局文件中宽高使用 wrap_content；"),s("li",null,"UNSPECIFIED：父容器没有对当前 View 有任何限制，当前 View 可以取任意尺寸，比如 ListView 中的 item。")],-1),k=s("p",null,"具体值和测量模式都可以通过 Android SDK 中提供的 MeasureSpec.java 类获取：",-1),U=s("p",null,"为什么 1 个 int 值可以代表 2 种意义呢？ 实际上 widthMeasureSpec 和 heightMeasureSpec 都是使用二进制高 2 位表示测量模式，低 30 位表示宽高具体大小。",-1),j=s("p",null,[s("strong",null,"重新回到 PieImageView")],-1),G=s("p",null,"在 PieImageView 中并没有复写 onMeasure 方法，因此默认使用父类也就是 View 中的实现，View 中的 onMeasure 默认实现如下：",-1),N=s("p",null,[l("蓝色框中的 "),s("strong",null,"setMeasuredDimension"),l(" 是一个非常重要的方法，这个方法传入的值直接决定 View 的宽高，也就是说如果调用 setMeasuredDimension(100,200)，最终 View 就显示宽 100 * 高 200 的矩形范围。红色下划线标识的 getDefaultSize 返回的是默认大小，默认为父视图的剩余可用空间。")],-1),X=s("blockquote",null,[s("p",null,"这也是为什么 PieImageView 显示异常的原因，虽然我们在 XML 中指定的是 wrap_content，但是实际使用的宽高值却是父视图的剩余可用空间，从代码中可以看出是整个屏幕的宽高。")],-1),Y=s("p",null,"问题的原因找到，解决方法只要复写 onMeasure，过滤出 wrap_content 的情况，并主动调用 setMeasuredDimension 方法设置正确的宽高即可：",-1),K=s("p",null,[s("strong",null,"ViewGroup 中的 onMeasure")],-1),Q=s("p",null,"如果我们自定义的控件是一个容器，onMeasure 方法会更加复杂一些。因为 ViewGroup 在测量自己的宽高之前，需要先确定其内部子 View 的所占大小，然后才能确定自己的大小。比如如下一段代码：",-1),R=s("p",null,"LinearLayout 的宽高为 wrap_content 表示由子控件的大小决定，而 3 个子控件的宽度分别为300、200、100，那最终 LinearLayout 的宽度显示多少呢？ 运行结果如下：",-1),J=s("p",null,"可以看出 LinearLayout 的最终宽度由其内部最大的子 View 宽度决定。",-1),O=s("p",null,"当我们自己定义一个 ViewGroup 的时候，也需要在 onMeasure 方法中综合考虑子 View 的宽度。比如如果要实现一个流式布局 FlowLayout，效果如下：",-1),Z=p(`<p>在大多数 App 的搜索界面经常会使用 FlowLayout 来展示历史搜索记录或者热门搜索项。</p><p>FlowLayout 的每一行上的 item 个数不一定，当每行的 item 累计宽度超过可用总宽度，则需要重启一行摆放 item 项。因此我们需要在 onMeasure 方法中主动的分行计算出 FlowLayout 的最终高度，如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//测量控件的宽和高</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onMeasure</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> widthMeasureSpec, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> heightMeasureSpec) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onMeasure</span><span style="color:#E1E4E8;">(widthMeasureSpec, heightMeasureSpec);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//获得宽高的测量模式和测量值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> widthMode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MeasureSpec.</span><span style="color:#B392F0;">getMode</span><span style="color:#E1E4E8;">(widthMeasureSpec);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> widthSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MeasureSpec.</span><span style="color:#B392F0;">getSize</span><span style="color:#E1E4E8;">(widthMeasureSpec);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> heightSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MeasureSpec.</span><span style="color:#B392F0;">getSize</span><span style="color:#E1E4E8;">(heightMeasureSpec);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> heightMode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MeasureSpec.</span><span style="color:#B392F0;">getMode</span><span style="color:#E1E4E8;">(heightMeasureSpec);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//获得容器中子View的个数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getChildCount</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录每一行View的总宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> totalLineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录每一行最高View的高度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> perLineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录当前ViewGroup的总高度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> totalHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> childCount; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            View childView </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getChildAt</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//对子View进行测量</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">measureChild</span><span style="color:#E1E4E8;">(childView, widthMeasureSpec, heightMeasureSpec);</span></span>
<span class="line"><span style="color:#E1E4E8;">            MarginLayoutParams lp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (MarginLayoutParams) childView.</span><span style="color:#B392F0;">getLayoutParams</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//获得子View的测量宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredWidth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.leftMargin </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//获得子View的测量高度</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredHeight</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.topMargin </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.bottomMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (totalLineWidth </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> childWidth </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> widthSize) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//统计总高度</span></span>
<span class="line"><span style="color:#E1E4E8;">                totalHeight </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> perLineMaxHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//开启新的一行</span></span>
<span class="line"><span style="color:#E1E4E8;">                totalLineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childWidth;</span></span>
<span class="line"><span style="color:#E1E4E8;">                perLineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//记录每一行的总宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">                totalLineWidth </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> childWidth;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//比较每一行最高的View</span></span>
<span class="line"><span style="color:#E1E4E8;">                perLineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(perLineMaxHeight, childHeight);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//当该View已是最后一个View时，将该行最大高度添加到totalHeight中</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> childCount </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                totalHeight </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> perLineMaxHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//如果高度的测量模式是EXACTLY，则高度用测量值，否则用计算出来的总高度（这时高度的设置为wrap_content）</span></span>
<span class="line"><span style="color:#E1E4E8;">        heightSize </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> heightMode </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> MeasureSpec.EXACTLY </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> heightSize </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> totalHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">setMeasuredDimension</span><span style="color:#E1E4E8;">(widthSize, heightSize);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//测量控件的宽和高</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onMeasure</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> widthMeasureSpec, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> heightMeasureSpec) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onMeasure</span><span style="color:#24292E;">(widthMeasureSpec, heightMeasureSpec);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//获得宽高的测量模式和测量值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> widthMode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MeasureSpec.</span><span style="color:#6F42C1;">getMode</span><span style="color:#24292E;">(widthMeasureSpec);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> widthSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MeasureSpec.</span><span style="color:#6F42C1;">getSize</span><span style="color:#24292E;">(widthMeasureSpec);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> heightSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MeasureSpec.</span><span style="color:#6F42C1;">getSize</span><span style="color:#24292E;">(heightMeasureSpec);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> heightMode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MeasureSpec.</span><span style="color:#6F42C1;">getMode</span><span style="color:#24292E;">(heightMeasureSpec);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//获得容器中子View的个数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getChildCount</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录每一行View的总宽度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> totalLineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录每一行最高View的高度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> perLineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录当前ViewGroup的总高度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> totalHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> childCount; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            View childView </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getChildAt</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//对子View进行测量</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">measureChild</span><span style="color:#24292E;">(childView, widthMeasureSpec, heightMeasureSpec);</span></span>
<span class="line"><span style="color:#24292E;">            MarginLayoutParams lp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (MarginLayoutParams) childView.</span><span style="color:#6F42C1;">getLayoutParams</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//获得子View的测量宽度</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredWidth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.leftMargin </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//获得子View的测量高度</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredHeight</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.topMargin </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.bottomMargin;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (totalLineWidth </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> childWidth </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> widthSize) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//统计总高度</span></span>
<span class="line"><span style="color:#24292E;">                totalHeight </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> perLineMaxHeight;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//开启新的一行</span></span>
<span class="line"><span style="color:#24292E;">                totalLineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childWidth;</span></span>
<span class="line"><span style="color:#24292E;">                perLineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childHeight;</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//记录每一行的总宽度</span></span>
<span class="line"><span style="color:#24292E;">                totalLineWidth </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> childWidth;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//比较每一行最高的View</span></span>
<span class="line"><span style="color:#24292E;">                perLineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(perLineMaxHeight, childHeight);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//当该View已是最后一个View时，将该行最大高度添加到totalHeight中</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> childCount </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                totalHeight </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> perLineMaxHeight;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//如果高度的测量模式是EXACTLY，则高度用测量值，否则用计算出来的总高度（这时高度的设置为wrap_content）</span></span>
<span class="line"><span style="color:#24292E;">        heightSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> heightMode </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> MeasureSpec.EXACTLY </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> heightSize </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> totalHeight;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">setMeasuredDimension</span><span style="color:#24292E;">(widthSize, heightSize);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><p>上述 onMeasure 方法的主要目的有 2 个：</p><ul><li>调用 measureChild 方法递归测量子 View；</li><li>通过叠加每一行的高度，计算出最终 FlowLayout 的最终高度 totalHeight。</li></ul><h4 id="onlayout" tabindex="-1">onLayout <a class="header-anchor" href="#onlayout" aria-label="Permalink to &quot;onLayout&quot;">​</a></h4><p>上面的 FlowLayout 中的 onMeasure 方法只是计算出 ViewGroup 的最终显示宽高，但是并没有规定某一个子 View 应该显示在何处位置。要定义 ViewGroup 内部子 View 的显示规则，则需要复写并实现 onLayout 方法。</p><p>ViewGroup 中的 onLayout 方法声明如下：</p>`,8),$=p(`<p>它是一个抽象方法，也就是说每一个自定义 ViewGroup 都必须主动实现如何排布子 View，具体就是遍历每一个子 View，调用 child.(l, t, r, b) 方法来为每个子 View 设置具体的布局位置。四个参数分别代表左上右下的坐标位置，一个简易的 FlowLayout 实现如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onLayout</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> changed, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> l, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> t, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> r, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> b) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        mAllViews.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        mPerLineMaxHeight.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//存放每一行的子View</span></span>
<span class="line"><span style="color:#E1E4E8;">        List&lt;</span><span style="color:#F97583;">View</span><span style="color:#E1E4E8;">&gt; lineViews </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录每一行已存放View的总宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> totalLineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//记录每一行最高View的高度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> lineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">/****遍历所有View，将View添加到List&lt;List&lt;View&gt;&gt;集合中**********/</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//获得子View的总个数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getChildCount</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> childCount; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            View childView </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getChildAt</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">            MarginLayoutParams lp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (MarginLayoutParams) childView.</span><span style="color:#B392F0;">getLayoutParams</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredWidth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.leftMargin </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> childHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredHeight</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.topMargin </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.bottomMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (totalLineWidth </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> childWidth </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getWidth</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                mAllViews.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(lineViews);</span></span>
<span class="line"><span style="color:#E1E4E8;">                mPerLineMaxHeight.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(lineMaxHeight);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//开启新的一行</span></span>
<span class="line"><span style="color:#E1E4E8;">                totalLineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                lineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                lineViews </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            totalLineWidth </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> childWidth;</span></span>
<span class="line"><span style="color:#E1E4E8;">            lineViews.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(childView);</span></span>
<span class="line"><span style="color:#E1E4E8;">            lineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;">(lineMaxHeight, childHeight);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//单独处理最后一行</span></span>
<span class="line"><span style="color:#E1E4E8;">        mAllViews.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(lineViews);</span></span>
<span class="line"><span style="color:#E1E4E8;">        mPerLineMaxHeight.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(lineMaxHeight);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">/************遍历集合中的所有View并显示出来************/</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//表示一个View和父容器左边的距离</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> mLeft </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//表示View和父容器顶部的距离</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> mTop </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> mAllViews.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">(); i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//获得每一行的所有View</span></span>
<span class="line"><span style="color:#E1E4E8;">            lineViews </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mAllViews.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">            lineMaxHeight </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mPerLineMaxHeight.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> j </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; j </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> lineViews.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">(); j</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                View childView </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> lineViews.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(j);</span></span>
<span class="line"><span style="color:#E1E4E8;">                MarginLayoutParams lp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (MarginLayoutParams) childView.</span><span style="color:#B392F0;">getLayoutParams</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> leftChild </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mLeft </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.leftMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> topChild </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mTop </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.topMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> rightChild </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> leftChild </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredWidth</span><span style="color:#E1E4E8;">()；</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> bottomChild </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> topChild </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredHeight</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//四个参数分别表示View的左上角和右下角</span></span>
<span class="line"><span style="color:#E1E4E8;">                childView.</span><span style="color:#B392F0;">layout</span><span style="color:#E1E4E8;">(leftChild, topChild, rightChild, bottomChild);</span></span>
<span class="line"><span style="color:#E1E4E8;">                mLeft </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> lp.leftMargin </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> childView.</span><span style="color:#B392F0;">getMeasuredWidth</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            mLeft </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            mTop </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> lineMaxHeight;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onLayout</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> changed, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> l, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> t, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> r, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> b) {</span></span>
<span class="line"><span style="color:#24292E;">        mAllViews.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        mPerLineMaxHeight.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//存放每一行的子View</span></span>
<span class="line"><span style="color:#24292E;">        List&lt;</span><span style="color:#D73A49;">View</span><span style="color:#24292E;">&gt; lineViews </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录每一行已存放View的总宽度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> totalLineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//记录每一行最高View的高度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">/****遍历所有View，将View添加到List&lt;List&lt;View&gt;&gt;集合中**********/</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//获得子View的总个数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getChildCount</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> childCount; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            View childView </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getChildAt</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">            MarginLayoutParams lp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (MarginLayoutParams) childView.</span><span style="color:#6F42C1;">getLayoutParams</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredWidth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.leftMargin </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> childHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredHeight</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.topMargin </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.bottomMargin;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (totalLineWidth </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> childWidth </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getWidth</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                mAllViews.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(lineViews);</span></span>
<span class="line"><span style="color:#24292E;">                mPerLineMaxHeight.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(lineMaxHeight);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//开启新的一行</span></span>
<span class="line"><span style="color:#24292E;">                totalLineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                lineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                lineViews </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            totalLineWidth </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> childWidth;</span></span>
<span class="line"><span style="color:#24292E;">            lineViews.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(childView);</span></span>
<span class="line"><span style="color:#24292E;">            lineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(lineMaxHeight, childHeight);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//单独处理最后一行</span></span>
<span class="line"><span style="color:#24292E;">        mAllViews.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(lineViews);</span></span>
<span class="line"><span style="color:#24292E;">        mPerLineMaxHeight.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(lineMaxHeight);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">/************遍历集合中的所有View并显示出来************/</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//表示一个View和父容器左边的距离</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> mLeft </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//表示View和父容器顶部的距离</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> mTop </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> mAllViews.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(); i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//获得每一行的所有View</span></span>
<span class="line"><span style="color:#24292E;">            lineViews </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mAllViews.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">            lineMaxHeight </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mPerLineMaxHeight.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(i);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> lineViews.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(); j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                View childView </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lineViews.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(j);</span></span>
<span class="line"><span style="color:#24292E;">                MarginLayoutParams lp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (MarginLayoutParams) childView.</span><span style="color:#6F42C1;">getLayoutParams</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> leftChild </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mLeft </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.leftMargin;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> topChild </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mTop </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.topMargin;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> rightChild </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftChild </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredWidth</span><span style="color:#24292E;">()；</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> bottomChild </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> topChild </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredHeight</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//四个参数分别表示View的左上角和右下角</span></span>
<span class="line"><span style="color:#24292E;">                childView.</span><span style="color:#6F42C1;">layout</span><span style="color:#24292E;">(leftChild, topChild, rightChild, bottomChild);</span></span>
<span class="line"><span style="color:#24292E;">                mLeft </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> lp.leftMargin </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> childView.</span><span style="color:#6F42C1;">getMeasuredWidth</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> lp.rightMargin;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            mLeft </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            mTop </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> lineMaxHeight;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><p>最终我们可以在 XML 中使用此自定义控件：</p>`,3),ss=s("p",null,"一个简易的 FlowLayout 运行效果如下所示，剩下的就是和 UI 同事合作，修改 FlowLayout 内部 TextView 的样式，将界面调整到最佳显示状态。",-1),ns=s("h3",{id:"总结",tabindex:"-1"},[l("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),as=s("p",null,"本课时介绍了自定义 View 的几个知识点，要自定义一个控件主要包含几个方法。",-1),ls=s("p",null,"onDraw：主要负责绘制 UI 元素；",-1),ps=s("p",null,"onMeasure：主要负责测量自定义控件具体显示的宽高；",-1),os=s("p",null,"onLayout：主要是在自定义 ViewGroup 中复写，并实现子 View 的显示位置，并在其中介绍了自定义属性的使用方法。",-1),es=s("p",null,[l("所有代码都已经提交到："),s("a",{href:"https://github.com/McoyJiang/LagouAndroidShare/tree/master/course15_%E8%87%AA%E5%AE%9A%E4%B9%89View/LagouCustomizedView",target:"_blank",rel:"noreferrer"},"拉勾课程代码仓库 课时15")],-1);function ts(cs,rs,is,Es,ys,hs){const n=e("Image");return t(),c("div",null,[i,E,y,h,d,g,a(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/08/47/Ciqc1F66bomAdFbwAALM9ajQIC8076.png"}),A,a(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bpKAIlBcAAA0F5H64pY243.png"}),F,u,w,D,m,a(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/Ciqc1F66bpuAIr0aAAFqNwcLsJ0889.png"}),M,V,C,a(n,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bqWAFxZfAAKl9XNB380067.png"}),_,L,a(n,{alt:"image (4).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bq6AU-oEAAIh3vx_5eM610.png"}),H,a(n,{alt:"image (5).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/Ciqc1F66brqANYwaAAFgenmfG7o790.png"}),S,a(n,{alt:"image (6).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bsKAC3aYAAEfignRLSI590.png"}),b,a(n,{alt:"image (7).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/Ciqc1F66bs2AS0zEAAQY2ssC74o325.png"}),B,a(n,{alt:"image (8).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66btSAYWPrAAH9B9MVFqA640.png"}),x,a(n,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/Ciqc1F66btyAc0PJAAIpVraUjo0218.png"}),f,a(n,{alt:"image (10).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66buWAP4coAAG7qEuu7jo510.png"}),P,v,T,W,a(n,{alt:"image (11).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bvCAUiTLAACDybKUm44275.png"}),I,q,z,k,a(n,{alt:"image (12).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bvqADG9BAADvBFUSQJk100.png"}),U,j,G,a(n,{alt:"image (13).png",src:"https://s0.lgstatic.com/i/image/M00/08/47/CgqCHl66bw-ADT0MAADKTPdZQ1c840.png"}),N,X,Y,a(n,{alt:"image (14).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/CgqCHl66bxmAZbnFAAH8BgmvD9Q604.png"}),K,Q,a(n,{alt:"image (15).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/Ciqc1F66byKARzSmAAc9fHTIEMg900.png"}),R,a(n,{alt:"image (16).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/CgqCHl66byqAFve6AAAqPxvb9sA095.png"}),J,O,a(n,{alt:"image (17).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/Ciqc1F66b0uANdyTAASLs9Xvo14469.png"}),Z,a(n,{alt:"image (18).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/Ciqc1F66b1eAeNsoAABs2Q0QRN0512.png"}),$,a(n,{alt:"image (19).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/Ciqc1F66b3CAEEa5AAUEZe6Z528059.png"}),ss,a(n,{alt:"image (20).png",src:"https://s0.lgstatic.com/i/image/M00/08/48/CgqCHl66b4SAPQ8iAADyh9KR7Ng588.png"}),ns,as,ls,ps,os,es])}const As=o(r,[["render",ts]]);export{gs as __pageData,As as default};
