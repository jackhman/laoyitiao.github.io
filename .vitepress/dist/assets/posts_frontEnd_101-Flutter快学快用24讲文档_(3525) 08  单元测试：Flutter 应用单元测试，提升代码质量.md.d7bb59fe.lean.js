import{_ as l,j as p,o,g as e,k as t,h as a,s,Q as c}from"./chunks/framework.e0c66c3f.js";const v=JSON.parse('{"title":"单元测试 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3525) 08  单元测试：Flutter 应用单元测试，提升代码质量.md","filePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3525) 08  单元测试：Flutter 应用单元测试，提升代码质量.md","lastUpdated":1696338709000}'),r={name:"posts/frontEnd/101-Flutter快学快用24讲文档/(3525) 08  单元测试：Flutter 应用单元测试，提升代码质量.md"},E=s("p",null,"之前已经讲解了 Flutter 所有基础的知识点，本课时介绍如何保证组件代码的质量，以此来确保我们在代码开发过程中或者在重构过程中的代码质量。",-1),y=s("h3",{id:"单元测试",tabindex:"-1"},[a("单元测试 "),s("a",{class:"header-anchor",href:"#单元测试","aria-label":'Permalink to "单元测试"'},"​")],-1),i=s("p",null,"单元测试的概念是针对程序中最小单位来进行校验的工作，在 Flutter 中最小的单位是组件。由于我们扩展了一些模块比如 Model（Provider）、Struct（数据结构部分），因此这里也需要介绍下这两部分的单元测试。",-1),d=s("h4",{id:"目录结构",tabindex:"-1"},[a("目录结构 "),s("a",{class:"header-anchor",href:"#目录结构","aria-label":'Permalink to "目录结构"'},"​")],-1),F=s("p",null,"为了保持一致性，我们在 test 单元测试目录，创建与项目结构目录一致的结构，如图 1 所示。",-1),u=c("",46);function m(g,C,h,_,f,k){const n=p("Image");return o(),e("div",null,[E,y,i,d,F,t(n,{alt:"image (9).png",src:"https://s0.lgstatic.com/i/image/M00/2B/C9/Ciqc1F7_AHGAJ8__AABUPoaGi10666.png"}),a(),u])}const A=l(r,[["render",m]]);export{v as __pageData,A as default};
