import{_ as l,j as s,o as i,g as k,k as t,Q as o,s as e,h as n}from"./chunks/framework.4e7d56ce.js";const M=JSON.parse('{"title":"Hot key ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/300分钟吃透分布式缓存_文档/(165) 第06讲：Hot Key和Big Key引发的问题怎么应对？.md","filePath":"posts/backEnd/300分钟吃透分布式缓存_文档/(165) 第06讲：Hot Key和Big Key引发的问题怎么应对？.md","lastUpdated":1696417798000}'),h={name:"posts/backEnd/300分钟吃透分布式缓存_文档/(165) 第06讲：Hot Key和Big Key引发的问题怎么应对？.md"},r=o("",11),c=o("",10),_=e("h6",{id:"解决方案-1",tabindex:"-1"},[n("解决方案 "),e("a",{class:"header-anchor",href:"#解决方案-1","aria-label":'Permalink to "解决方案"'},"​")],-1),y=e("p",null,"对于大 key，给出 3 种解决方案。",-1),d=e("ul",null,[e("li",null,"第一种方案，如果数据存在 Mc 中，可以设计一个缓存阀值，当 value 的长度超过阀值，则对内容启用压缩，让 KV 尽量保持小的 size，其次评估大 key 所占的比例，在 Mc 启动之初，就立即预写足够数据的大 key，让 Mc 预先分配足够多的 trunk size 较大的 slab。确保后面系统运行时，大 key 有足够的空间来进行缓存。")],-1),p=e("ul",null,[e("li",null,"第二种方案，如果数据存在 Redis 中，比如业务数据存 set 格式，大 key 对应的 set 结构有几千几万个元素，这种写入 Redis 时会消耗很长的时间，导致 Redis 卡顿。此时，可以扩展新的数据结构，同时让 client 在这些大 key 写缓存之前，进行序列化构建，然后通过 restore 一次性写入，如下图所示。")],-1),u=e("ul",null,[e("li",null,"第三种方案时，如下图所示，将大 key 分拆为多个 key，尽量减少大 key 的存在。同时由于大 key 一旦穿透到 DB，加载耗时很大，所以可以对这些大 key 进行特殊照顾，比如设置较长的过期时间，比如缓存内部在淘汰 key 时，同等条件下，尽量不淘汰这些大 key。")],-1),m=e("p",null,"至此，本课时缓存的 7 大经典问题全部讲完。",-1),g=e("br",null,null,-1),b=e("p",null,"我们要认识到，对于互联网系统，由于实际业务场景复杂，数据量、访问量巨大，需要提前规避缓存使用中的各种坑。你可以通过提前熟悉 Cache 的经典问题，提前构建防御措施， 避免大量 key 同时失效，避免不存在 key 访问的穿透，减少大 key、热 key 的缓存失效，对热 key 进行分流。你可以采取一系列措施，让访问尽量命中缓存，同时保持数据的一致性。另外，你还可以结合业务模型，提前规划 cache 系统的 SLA，如 QPS、响应分布、平均耗时等，实施监控，以方便运维及时应对。在遇到部分节点异常，或者遇到突发流量、极端事件时，也能通过分池分层策略、key 分拆等策略，避免故障发生。",-1),A=e("p",null,"最终，你能在各种复杂场景下，面对高并发、海量访问，面对突发事件和洪峰流量，面对各种网络或机器硬件故障，都能保持服务的高性能和高可用。",-1),f=e("br",null,null,-1),q=e("p",null,'OK，这节课就讲到这里，下一课时我会分享"Memcached 的原理及特性"，记得按时来听课哈。好，下节课见，拜拜！',-1);function P(S,B,x,C,H,T){const a=s("Image");return i(),k("div",null,[r,t(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/99/72/CgoB5l2kSmaALnx3AADSQZPFHOM649.png"}),c,t(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/99/92/CgotOV2kSmaAPcVbAAB3WSWtgpo221.png"}),_,y,d,t(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/99/72/CgoB5l2kSmaAMET9AACrkN0JqFc011.png"}),p,t(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/99/92/CgotOV2kSmaAXnFGAAC1hm9Qofg743.png"}),u,t(a,{alt:"",src:"http://s0.lgstatic.com/i/image2/M01/99/72/CgoB5l2kSmeAeayMAAD0DTkVh1k994.png"}),m,g,b,A,f,q])}const K=l(h,[["render",P]]);export{M as __pageData,K as default};
