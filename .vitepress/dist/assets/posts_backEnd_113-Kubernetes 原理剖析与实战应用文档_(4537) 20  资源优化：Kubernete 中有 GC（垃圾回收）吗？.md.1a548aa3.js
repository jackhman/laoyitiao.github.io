import{_ as s,o as n,g as a,Q as p}from"./chunks/framework.cfb14fe0.js";const F=JSON.parse('{"title":"20资源优化：Kubernete中有GC（垃圾回收）吗？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4537) 20  资源优化：Kubernete 中有 GC（垃圾回收）吗？.md","filePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4537) 20  资源优化：Kubernete 中有 GC（垃圾回收）吗？.md","lastUpdated":1696682708000}'),o={name:"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4537) 20  资源优化：Kubernete 中有 GC（垃圾回收）吗？.md"},l=p(`<h1 id="_20资源优化-kubernete中有gc-垃圾回收-吗" tabindex="-1">20资源优化：Kubernete中有GC（垃圾回收）吗？ <a class="header-anchor" href="#_20资源优化-kubernete中有gc-垃圾回收-吗" aria-label="Permalink to &quot;20资源优化：Kubernete中有GC（垃圾回收）吗？&quot;">​</a></h1><p>你好，我是正范。</p><p>Garbage Collector 即垃圾回收，通常简称 GC，和你之前在其他编程语言中了解到的 GC 基本上是一样的，用来清理一些不用的资源。Kubernetes 中有各种各样的资源，当然需要 GC啦，今天我们就一起来了解下 Kubernetes 中的 GC。</p><p>你可能最先想到的就是容器的清理，即 Kubelet 侧的 GC，清理许多处于退出（Exited）状态的容器，那么就先来了解一下吧。</p><h3 id="kubelet-gc" tabindex="-1">Kubelet GC <a class="header-anchor" href="#kubelet-gc" aria-label="Permalink to &quot;Kubelet GC&quot;">​</a></h3><p>GC 在 Kubelet 中非常重要，它不仅可以清理无用的容器，还可以清理未使用的镜像以达到节省空间的目的。当然 Kubelet 清理的这些容器都是 Kubernetes 自己创建的容器，你通过 Docker 手动创建的容器均不在 GC 的范围内，所以不必过于担心。</p><p>Kubelet 会对容器每分钟执行一次 GC 操作，对容器镜像每 5 分钟执行一次 GC 操作，这样可以保障 Kubelet 节点的稳定性，避免节点出现资源紧缺的情况。Kubelet 刚启动时并不会立即执行 GC 操作，而是在启动 1 分钟后开始执行第一次对容器的 GC 操作，启动 5 分钟后开始执行第一次对容器镜像的回收操作。这里建议你最好不用使用其他外部的 GC 工具，有可能会破坏 Kubelet 的 GC 逻辑。</p><p>目前 Kubelet 提供了 3 个参数，可以方便你调整容器镜像的 GC 参数：</p><ul><li><p><code>--minimum-image-ttl-duration</code>表示一个镜像在清理前的最小存活时间；</p></li><li><p><code>--image-gc-high-threshold</code>表示磁盘使用率的上限阈值，默认值是 90%，即当磁盘使用率达到 90% 的时候会触发对镜像的 GC 操作；</p></li><li><p><code>--image-gc-low-threshold</code>表示磁盘使用率的下限阈值，默认值是 80%，即当磁盘使用率降到 80% 的时候，GC 操作结束。</p></li></ul><p>对镜像的 GC 操作，就是逐个删除最久最少使用（Least Recently Used）的镜像。</p><p>对于容器的 GC 操作，Kubelet 也提供了 3 个参数供你使用调整：</p><ul><li><p><code>--minimum-container-ttl-duration</code>表示已停止的容器在被清理之前最小的存活时间，默认值是 1 分钟，即容器停止超过 1 分钟才会被标记可被 GC 清理；</p></li><li><p><code>--maximum-dead-containers-per-container</code>表示一个 Pod 内可以保留的已停止的容器数量，默认值是 2。Kubernetes 是以 Pod 为单位进行容器管理的。有时候 Pod 内运行失败的容器，比如容器自身的问题，或者健康检查失败，会被 kubelet 自动重启，这将产生一些停止的容器；</p></li><li><p><code>--maximum-dead-containers</code>表示在本节点上可以保留的已停止容器的最大数量，默认值是240。毕竟这些容器也会消耗额外的磁盘空间，所以超过这个上限阈值后，就会触发 Kubelet 的 GC 操作，来帮你自动清理这些已停止的容器，释放磁盘空间。</p></li></ul><p>当然，如果你想要关闭容器的 GC 操作，只需要将<code>--minimun-container-ttl-duration</code>设置为0，把<code>--maximum-dead-containers-per-container</code>和<code>--maximum-dead-containers</code>都设置为负数即可。</p><p>在有些场景中，容器的日志需要保留在本地，如果直接清理掉这些容器会丢失日志。所以这里我强烈建议你将<code>--maximum-dead-containers-per-container</code>设置为一个足够大的值，以便每个容器至少有一个退出的实例。这里，你就可以根据自己的场景进行配置。</p><p>提到的这些 flag，目前仍能继续使用，在未来的版本中，Kubernetes 会用新的 flag 进行替换，详见<a href="https://kubernetes.io/zh/docs/concepts/cluster-administration/kubelet-garbage-collection/#deprecation" target="_blank" rel="noreferrer">官方文档</a>。我们会在下一节课中，介绍这个新的 flag 的用法。</p><p>除了这些基本的 GC 以外，Kubernetes 内部也有很多操作对象，而且这些对象之间还存在着一定的&quot;从属关系&quot;，比如 Deployment 管理着 ReplicaSet。下面我们就来了解下 Kubernetes 内部对象的 GC。</p><h3 id="kubernetes-内部对象的-gc" tabindex="-1">Kubernetes 内部对象的 GC <a class="header-anchor" href="#kubernetes-内部对象的-gc" aria-label="Permalink to &quot;Kubernetes 内部对象的 GC&quot;">​</a></h3><p>通过之前的学习，我们已经知道创建好一个 Deployment 以后，kube-controller-manager 会帮助我们创建对应的 ReplicaSet。这些 ReplicaSet 会自动跟我们创建的 Deployment 进行关联，那 Kubernetes 是怎么样维护这种从属关系的呢？</p><p>在 Kubernetes 中，每个对象都可以设置多个 OwnerReference，即该对象从属于谁。</p><p>我们先来看看 OwnerReference 的定义：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// OwnerReference contains enough information to let you identify an owning</span></span>
<span class="line"><span style="color:#6A737D;">// object. An owning object must be in the same namespace as the dependent, or</span></span>
<span class="line"><span style="color:#6A737D;">// be cluster-scoped, so there is no namespace field.</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OwnerReference</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// API version of the referent.</span></span>
<span class="line"><span style="color:#E1E4E8;">    APIVersion </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`json:&quot;apiVersion&quot; protobuf:&quot;bytes,5,opt,name=apiVersion&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Kind of the referent.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</span></span>
<span class="line"><span style="color:#E1E4E8;">    Kind </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`json:&quot;kind&quot; protobuf:&quot;bytes,1,opt,name=kind&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Name of the referent.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// More info: http://kubernetes.io/docs/user-guide/identifiers#names</span></span>
<span class="line"><span style="color:#E1E4E8;">    Name </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`json:&quot;name&quot; protobuf:&quot;bytes,3,opt,name=name&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// UID of the referent.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// More info: http://kubernetes.io/docs/user-guide/identifiers#uids</span></span>
<span class="line"><span style="color:#E1E4E8;">    UID types.UID </span><span style="color:#9ECBFF;">\`json:&quot;uid&quot; protobuf:&quot;bytes,4,opt,name=uid,casttype=k8s.io/apimachinery/pkg/types.UID&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If true, this reference points to the managing controller.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// +optional</span></span>
<span class="line"><span style="color:#E1E4E8;">    Controller </span><span style="color:#F97583;">*bool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`json:&quot;controller,omitempty&quot; protobuf:&quot;varint,6,opt,name=controller&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the owner cannot be deleted from the key-value store until this</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// reference is removed.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Defaults to false.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// To set this field, a user needs &quot;delete&quot; permission of the owner,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// otherwise 422 (Unprocessable Entity) will be returned.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// +optional</span></span>
<span class="line"><span style="color:#E1E4E8;">    BlockOwnerDeletion </span><span style="color:#F97583;">*bool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`json:&quot;blockOwnerDeletion,omitempty&quot; protobuf:&quot;varint,7,opt,name=blockOwnerDeletion&quot;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// OwnerReference contains enough information to let you identify an owning</span></span>
<span class="line"><span style="color:#6A737D;">// object. An owning object must be in the same namespace as the dependent, or</span></span>
<span class="line"><span style="color:#6A737D;">// be cluster-scoped, so there is no namespace field.</span></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OwnerReference</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// API version of the referent.</span></span>
<span class="line"><span style="color:#24292E;">    APIVersion </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`json:&quot;apiVersion&quot; protobuf:&quot;bytes,5,opt,name=apiVersion&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Kind of the referent.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds</span></span>
<span class="line"><span style="color:#24292E;">    Kind </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`json:&quot;kind&quot; protobuf:&quot;bytes,1,opt,name=kind&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Name of the referent.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// More info: http://kubernetes.io/docs/user-guide/identifiers#names</span></span>
<span class="line"><span style="color:#24292E;">    Name </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`json:&quot;name&quot; protobuf:&quot;bytes,3,opt,name=name&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// UID of the referent.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// More info: http://kubernetes.io/docs/user-guide/identifiers#uids</span></span>
<span class="line"><span style="color:#24292E;">    UID types.UID </span><span style="color:#032F62;">\`json:&quot;uid&quot; protobuf:&quot;bytes,4,opt,name=uid,casttype=k8s.io/apimachinery/pkg/types.UID&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If true, this reference points to the managing controller.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// +optional</span></span>
<span class="line"><span style="color:#24292E;">    Controller </span><span style="color:#D73A49;">*bool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`json:&quot;controller,omitempty&quot; protobuf:&quot;varint,6,opt,name=controller&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If true, AND if the owner has the &quot;foregroundDeletion&quot; finalizer, then</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// the owner cannot be deleted from the key-value store until this</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// reference is removed.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Defaults to false.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// To set this field, a user needs &quot;delete&quot; permission of the owner,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// otherwise 422 (Unprocessable Entity) will be returned.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// +optional</span></span>
<span class="line"><span style="color:#24292E;">    BlockOwnerDeletion </span><span style="color:#D73A49;">*bool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`json:&quot;blockOwnerDeletion,omitempty&quot; protobuf:&quot;varint,7,opt,name=blockOwnerDeletion&quot;\`</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在 OwnerReference 中，我们可以确定该对象所&quot;从属于&quot;的对象，从而建立两者之间的从属关系。我们通过一个例子，直观了解下这个&quot;从属&quot;关系：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ReplicaSet</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">deployment.kubernetes.io/desired-replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">deployment.kubernetes.io/max-replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">deployment.kubernetes.io/revision</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">creationTimestamp</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2020-09-03T07:22:35Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">generation</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">k8s-app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-dns</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pod-template-hash</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5644d7b6d9</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-system</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ownerReferences</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">blockOwnerDeletion</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">controller</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coredns</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">uid</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">37ae660a-dba8-4ff9-a152-7d6f420e624d</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">resourceVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1542272&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selfLink</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/apis/apps/v1/namespaces/kube-system/replicasets/coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">uid</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">fa3d9859-43d4-484b-9716-7536243acd0f</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#85E89D;">status</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ReplicaSet</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">deployment.kubernetes.io/desired-replicas</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">deployment.kubernetes.io/max-replicas</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;3&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">deployment.kubernetes.io/revision</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">creationTimestamp</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2020-09-03T07:22:35Z&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">generation</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">k8s-app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-dns</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pod-template-hash</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5644d7b6d9</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-system</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ownerReferences</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">blockOwnerDeletion</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">controller</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deployment</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coredns</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">uid</span><span style="color:#24292E;">: </span><span style="color:#032F62;">37ae660a-dba8-4ff9-a152-7d6f420e624d</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">resourceVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1542272&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selfLink</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/apis/apps/v1/namespaces/kube-system/replicasets/coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">uid</span><span style="color:#24292E;">: </span><span style="color:#032F62;">fa3d9859-43d4-484b-9716-7536243acd0f</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#22863A;">status</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">...</span></span></code></pre></div><p>这里我截取了一个 ReplicaSet 中的 metadata 的部分。注意看这个 ReplicaSet 的ownerReferences字段标识了一个名为 coredns 的 Deployment 对象。</p><p>同样，我们来看看该 ReplicaSet 管理的 Pod。这里 ReplicaSet 的副本数是 2，我们任意选择其中一个 Pod：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">creationTimestamp</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2020-09-03T07:22:35Z&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">generateName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coredns-5644d7b6d9-</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">k8s-app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-dns</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pod-template-hash</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5644d7b6d9</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coredns-5644d7b6d9-sz4qj</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-system</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ownerReferences</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">blockOwnerDeletion</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">controller</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ReplicaSet</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">uid</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">fa3d9859-43d4-484b-9716-7536243acd0f</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">resourceVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1542270&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selfLink</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/api/v1/namespaces/kube-system/pods/coredns-5644d7b6d9-sz4qj</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">uid</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">c52d630b-1840-4502-88d1-b67bed2dd625</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">creationTimestamp</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2020-09-03T07:22:35Z&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">generateName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coredns-5644d7b6d9-</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">k8s-app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-dns</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pod-template-hash</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5644d7b6d9</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coredns-5644d7b6d9-sz4qj</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-system</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ownerReferences</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">blockOwnerDeletion</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">controller</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ReplicaSet</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">coredns-5644d7b6d9</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">uid</span><span style="color:#24292E;">: </span><span style="color:#032F62;">fa3d9859-43d4-484b-9716-7536243acd0f</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">resourceVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1542270&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selfLink</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/api/v1/namespaces/kube-system/pods/coredns-5644d7b6d9-sz4qj</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">uid</span><span style="color:#24292E;">: </span><span style="color:#032F62;">c52d630b-1840-4502-88d1-b67bed2dd625</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">...</span></span></code></pre></div><p>可以看到该 Pod 的ownerReferences指向刚才的 ReplicaSet，名字和 UID 都与之相对应。</p><p>至此通过观察这几个对象中的ownerReferences的信息，我们可以建立起如下的&quot;从属关系&quot;，即：</p><ul><li><p>Deployment（owner）---&gt; ReplicaSet (dependent)；</p></li><li><p>ReplicaSet (owner) ---&gt; Pod (dependent)。</p></li></ul><p>了解了如上从属关系，我们后续就可以进行 GC 了。比如当你想彻底删除一个 Deployment 的时候，这时候 Kubernetes 会自动帮你把相关联的 ReplicaSet、Pod 等也一并删除掉，那么这种删除行为也称之为级联删除（Cascading Deletion），这也是 Kubernetes 默认的删除行为。</p><p>对于级联删除，Kubernetes 提供了两种模式，分别为后台（Background）模式和前台（Foreground）模式。</p><p>我们以后台级联删除 Deployment 为例。直观的体验就是，当你使用后台模式删除时，发送完请求，Kuberentes 会立即删除主对象，比如 Deployment，之后 Kubernetes 会在后台 GC 其附属的对象，比如 ReplicaSet。</p><p>而对于<a href="https://kubernetes.io/zh/docs/concepts/workloads/controllers/garbage-collection/#%E5%89%8D%E5%8F%B0%E7%BA%A7%E8%81%94%E5%88%A0%E9%99%A4" target="_blank" rel="noreferrer">前台级联删除</a>，会先删除其所属的对象，然后再删除主对象。依然以 Deployment 为例，这时候主对象 Deployment 首先进入&quot;删除中&quot;的状态，虽然你依然能够通过 REST API 看到该 Deployment，但是该对象的deletionTimestamp字段被设置非空即&quot;删除中&quot;。</p><p>同时该对象的 metadata.finalizers 字段为 foregroundDeletion，有了这个 fianlizer 的存在，该对象就不会被删除，并会一直处于&quot;删除中&quot;的状态。</p><p>然后开始删除 ReplicaSet。关联的 ReplicaSet 都被删除以后，主对象 Deployment 中metadata.finalizers 字段会移除 foregroundDeletion 这个 finalizer。这时候主对象就可以被删除掉了。你也许注意到了 ownerReference 字段中的 blockOwnerDeletion，只有这个字段设置为了 true，才会组织删除主对象。</p><p>当然如果你删除对象的时候，并不想自动删除其附属对象，那么这些附属对象就&quot;孤立&quot;存在了，即孤立对象（Orphaned）。比如删除 Deployment 的时候，并不想删除其关联的 ReplicaSet。</p><p>我们可以通过 deleteOptions.propagationPolicy 这个字段，来控制删除的策略，取值包括上面提到的三种方式，即 Orphan、Foreground 或者 Background。</p><p>如果我们使用 kubectl 进行后台删除的时候，可以通过如下命令进行操作：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">proxy</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--port=8080</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DELETE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-replicaset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Background&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proxy</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port=8080</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DELETE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-replicaset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Background&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span></span></code></pre></div><p>当然如果你使用的是 client-go 这类的库，也可以通过库中提供的函数，通过设置 DeleteOption 进行后台删除。</p><p>同样，我们也可以通过如下命令进行前台级联删除：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">proxy</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--port=8080</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DELETE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-replicaset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Foreground&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proxy</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port=8080</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DELETE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-replicaset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Foreground&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span></span></code></pre></div><p>这里如果你只想删除 ReplicaSet，但是并不像删除其关联的 Pod，你可以这么操作：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">proxy</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--port=8080</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DELETE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Orphan&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">proxy</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--port=8080</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DELETE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">localhost:8080/apis/apps/v1/namespaces/default/replicasets/my-repset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;kind&quot;:&quot;DeleteOptions&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;propagationPolicy&quot;:&quot;Orphan&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span></span></code></pre></div><p>kubectl 命令行在删除操作的时候，默认是进行级联删除的，如果你不想级联删除，可以这么操作：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">delete</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">replicaset</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-repset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--cascade=false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">delete</span><span style="color:#24292E;"> </span><span style="color:#032F62;">replicaset</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-repset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--cascade=false</span></span></code></pre></div><h3 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h3><p>Kubernetes 默认开启了 GC 的能力，不管是对于内部的各种 API 对象，还是对于 kubelet 节点上的冗余镜像以及退出的容器。这些默认的配置，已经基本上满足我们绝大多数的使用需要，不需要额外配置。当然你也可以通过调整一些参数和策略，实现自己的业务场景和逻辑。</p><p>到这里这节课就结束了，如果你对本节课有什么想法或者疑问，欢迎你在留言区留言，我们一起讨论。</p>`,49),e=[l];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const b=s(o,[["render",t]]);export{F as __pageData,b as default};
