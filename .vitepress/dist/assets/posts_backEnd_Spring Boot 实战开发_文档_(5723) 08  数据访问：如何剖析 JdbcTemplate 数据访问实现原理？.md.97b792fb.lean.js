import{_ as p,j as o,o as e,g as t,k as l,h as n,s,Q as c}from"./chunks/framework.4e7d56ce.js";const _=JSON.parse('{"title":"从模板方法模式和回调机制说起 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5723) 08  数据访问：如何剖析 JdbcTemplate 数据访问实现原理？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5723) 08  数据访问：如何剖析 JdbcTemplate 数据访问实现原理？.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/Spring Boot 实战开发_文档/(5723) 08  数据访问：如何剖析 JdbcTemplate 数据访问实现原理？.md"},E=s("p",null,"07 讲中，我们介绍了使用 JdbcTemplate 模板工具类完成关系型数据库访问的详细实现过程，通过 JdbcTemplate 不仅简化了数据库操作，还避免了使用原生 JDBC 带来的代码复杂度和冗余性问题。",-1),y=s("p",null,"那么，JdbcTemplate 在 JDBC 基础上如何实现封装的呢？今天，我将带领大家从设计思想出发，讨论 JDBC API 到 JdbcTemplate 的演进过程，并剖析 JdbcTemplate 的部分核心源码。",-1),i=s("h3",{id:"从模板方法模式和回调机制说起",tabindex:"-1"},[n("从模板方法模式和回调机制说起 "),s("a",{class:"header-anchor",href:"#从模板方法模式和回调机制说起","aria-label":'Permalink to "从模板方法模式和回调机制说起"'},"​")],-1),d=s("p",null,"从命名上 JdbcTemplate 显然是一种模板类，这就让我们联想起设计模式中的模板方法模式。为了让你更好地理解 JdbcTemplate 的实现原理，我们先对这一设计模式进行简单说明。",-1),F=s("h4",{id:"模板方法设计模式",tabindex:"-1"},[n("模板方法设计模式 "),s("a",{class:"header-anchor",href:"#模板方法设计模式","aria-label":'Permalink to "模板方法设计模式"'},"​")],-1),u=s("p",null,"模板方法模式的原理非常简单，它主要是利用了面向对象中类的继承机制，目前应用非常广泛的，且在实现上往往与抽象类一起使用，比如 Spring 框架中也大量应用了模板方法实现基类和子类之间的职责分离和协作。",-1),b=s("p",null,"按照定义，完成一系列步骤时，这些步骤需要遵循统一的工作流程，个别步骤的实现细节除外，这时我们就需要考虑使用模板方法模式处理了。模板方法模式的结构示意图如下所示：",-1),m=s("p",null,"模板方法设计模式结构示意图",-1),C=s("p",null,"上图中，抽象模板类 AbstractClass 定义了一套工作流程，而具体实现类 ConcreteClassA 和 ConcreteClassB 对工作流程中的某些特定步骤进行了实现。",-1),S=s("h4",{id:"回调机制",tabindex:"-1"},[n("回调机制 "),s("a",{class:"header-anchor",href:"#回调机制","aria-label":'Permalink to "回调机制"'},"​")],-1),A=s("p",null,"在软件开发过程中，回调（Callback）是一种常见的实现技巧，回调的含义如下图所示：",-1),g=c("",52);function D(h,B,k,q,v,x){const a=o("Image");return e(),t("div",null,[E,y,i,d,F,u,b,l(a,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image/M00/84/15/Ciqc1F_THuiASLZ8AACi3dbo9Ww445.png"}),n(),m,C,S,A,l(a,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image/M00/84/15/Ciqc1F_THviAWcz1AABn8HsEEZA924.png"}),n(),g])}const J=p(r,[["render",D]]);export{_ as __pageData,J as default};
