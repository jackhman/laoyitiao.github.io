import{_ as o,j as e,o as t,g as c,k as a,h as p,Q as l,s}from"./chunks/framework.a0d18f64.js";const $=JSON.parse('{"title":"12反序列化漏洞：数据转换下的欺骗","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md","filePath":"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md","lastUpdated":1696682708000}'),r={name:"posts/devops/Web 安全攻防之道_文档/(5980) 12  反序列化漏洞：数据转换下的欺骗.md"},y=l("",49),E=l("",14),i=s("p",null,"图 2 调用链",-1),F=s("p",null,[s("strong",null,"3. 寻找可控制第 1 步方法的参数的其他类方法函数。")],-1),u=s("p",null,"这里需要控制的是 file_get_contents($value) 中的参数 $value，依次往上追溯，发现其来自数组中的一个元素值，得到如下传播路径：",-1),h=s("p",null,"图 3 参数传播路径",-1),C=s("p",null,"为了对应 Show::__toString() 中的 $this->str['str']->source ，我们可以通过array('source'=>'可控内容') 来控制 $value，即打算读取的文件路径。进一步优化下传播路径：",-1),d=l("",51);function g(A,D,_,B,b,q){const n=e("Image");return t(),c("div",null,[y,a(n,{alt:"Lark20210121-180531.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUtSAOq4oAAFC9pGx2M8332.png"}),p(),E,a(n,{alt:"Lark20210121-180537.png",src:"https://s0.lgstatic.com/i/image/M00/8F/EC/CgqCHmAJUuyAZXQKAAB855K4LBk536.png"}),p(),i,F,u,a(n,{alt:"Lark20210121-180540.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUvSAaqlFAAB9jR92PEM612.png"}),p(),h,C,a(n,{alt:"Lark20210121-180543.png",src:"https://s0.lgstatic.com/i/image/M00/8F/E1/Ciqc1GAJUvuASTMYAAB-HQ644z0682.png"}),p(),d])}const m=o(r,[["render",g]]);export{$ as __pageData,m as default};
