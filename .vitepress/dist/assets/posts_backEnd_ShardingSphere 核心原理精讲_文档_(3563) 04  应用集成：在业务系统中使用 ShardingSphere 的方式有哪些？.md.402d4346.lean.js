import{_ as o,j as e,o as t,g as r,k as p,h as a,s,Q as l}from"./chunks/framework.cfb14fe0.js";const m=JSON.parse('{"title":"04应用集成：在业务系统中使用ShardingSphere的方式有哪些？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3563) 04  应用集成：在业务系统中使用 ShardingSphere 的方式有哪些？.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3563) 04  应用集成：在业务系统中使用 ShardingSphere 的方式有哪些？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3563) 04  应用集成：在业务系统中使用 ShardingSphere 的方式有哪些？.md"},E=s("h1",{id:"_04应用集成-在业务系统中使用shardingsphere的方式有哪些",tabindex:"-1"},[a("04应用集成：在业务系统中使用ShardingSphere的方式有哪些？ "),s("a",{class:"header-anchor",href:"#_04应用集成-在业务系统中使用shardingsphere的方式有哪些","aria-label":'Permalink to "04应用集成：在业务系统中使用ShardingSphere的方式有哪些？"'},"​")],-1),y=s("p",null,"在上一课时中，我详细介绍了 ShardingSphere 与 JDBC 规范之间的兼容性关系，我们知道 ShardingSphere 对 JDBC 规范进行了重写，并嵌入了分片机制。基于这种兼容性，开发人员使用 ShardingSphere 时就像在使用 JDBC 规范所暴露的各个接口一样。这一课时，我们将讨论如何在业务系统中使用 ShardingSphere 的具体方式。",-1),i=s("h3",{id:"如何抽象开源框架的应用方式",tabindex:"-1"},[a("如何抽象开源框架的应用方式？ "),s("a",{class:"header-anchor",href:"#如何抽象开源框架的应用方式","aria-label":'Permalink to "如何抽象开源框架的应用方式？"'},"​")],-1),d=s("p",null,[a("当我们自己在设计和实现一款开源框架时，如何规划它的应用方式呢？作为一款与数据库访问相关的开源框架，ShardingSphere 提供了多个维度的应用方式，我们可以对这些应用方式进行抽象，从而提炼出一种模版。这个模版由四个维度组成，分别是"),s("strong",null,"底层工具、基础规范、开发框架和领域框架"),a("，如下图所示：")],-1),u=l("",28),g=l("",55);function F(h,D,C,q,b,S){const n=e("Image");return t(),r("div",null,[E,y,i,d,p(n,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/28/F7/CgqCHl75qv-AFbZvAACz7F_yXRM280.png"}),a(),u,p(n,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/28/EB/Ciqc1F75qxSADY5yAADgZQ5r488284.png"}),a(),g])}const B=o(c,[["render",F]]);export{m as __pageData,B as default};
