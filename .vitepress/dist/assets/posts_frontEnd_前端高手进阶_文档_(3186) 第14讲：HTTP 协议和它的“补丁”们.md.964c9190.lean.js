import{_ as e,j as r,o as T,g as p,k as a,h as s,s as t,Q as n}from"./chunks/framework.b3d8e22e.js";const j=JSON.parse('{"title":"HTTP/0.9 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/前端高手进阶_文档/(3186) 第14讲：HTTP 协议和它的“补丁”们.md","filePath":"posts/frontEnd/前端高手进阶_文档/(3186) 第14讲：HTTP 协议和它的“补丁”们.md","lastUpdated":1696417798000}'),_={name:"posts/frontEnd/前端高手进阶_文档/(3186) 第14讲：HTTP 协议和它的“补丁”们.md"},l=t("p",null,"HTTP（HyperText Transfer Protocol，超文本传输协议）是浏览器与服务端之间最主要的通信协议，这一课时主要分析 HTTP 及其相关协议的特点。",-1),i=t("h3",{id:"http-0-9",tabindex:"-1"},[s("HTTP/0.9 "),t("a",{class:"header-anchor",href:"#http-0-9","aria-label":'Permalink to "HTTP/0.9"'},"​")],-1),h=t("p",null,"1991 年 HTTP 正式诞生，当时的版本是 0.9，从名字可以看出，该协议的作用是传输超文本内容 HTML。",-1),c=t("p",null,"协议定义了客户端发起请求、服务端响应请求的通信模式。请求报文内容只有 1 行，为 GET 加上请求的文件路径。服务端收到请求后返回一个以 ASCII 字符流编码的 HTML 文档。",-1),d=t("p",null,"HTTP/0.9 通信示意图",-1),g=t("h3",{id:"http-1-0",tabindex:"-1"},[s("HTTP/1.0 "),t("a",{class:"header-anchor",href:"#http-1-0","aria-label":'Permalink to "HTTP/1.0"'},"​")],-1),P=t("p",null,"随着互联网的发展以及浏览器的出现，单纯的文本内容已经无法满足用户需求了，浏览器希望通过 HTTP 来传输脚本、样式、图片、音频和视频等不同类型的文件。",-1),A=t("p",null,"所以在 1996 年 HTTP 更新的 1.0 版本中，针对上述问题，作出了重大改变。",-1),u=t("p",null,"其中最核心的改变是增加了头部设定，头部内容以键值对的形式设置。请求头部通过 Accept 字段来告诉服务端可以接收的文件类型，响应头部再通过 Content-Type 字段来告诉浏览器返回文件的类型。",-1),C=t("p",null,"这同时也是一个相当具有前瞻性的设计，因为头部字段不仅用于解决不同类型文件传输的问题，而且其他很多功能也可以依靠头部字段实现，比如缓存、认证信息。",-1),H=t("p",null,"HTTP/1.0 通信示意图",-1),m=t("h3",{id:"http-1-1",tabindex:"-1"},[s("HTTP/1.1 "),t("a",{class:"header-anchor",href:"#http-1-1","aria-label":'Permalink to "HTTP/1.1"'},"​")],-1),S=t("p",null,[s("随着互联网的迅速发展，HTTP/1.0 也已经无法满足需求，最核心的就是连接问题。具体来说就是 HTTP/1.0 每进行一次通信，都需要经历"),t("strong",null,"建立连接"),s(" 、"),t("strong",null,"传输数据"),s(" 和"),t("strong",null,"断开连接"),s("三个阶段。当一个页面引用了较多的外部文件时，这个建立连接和断开连接的过程就会增加大量网络开销。")],-1),f=t("p",null,"为了解决这个问题，1999 年推出的 HTTP/1.1 版本增加了一个创建持久连接的方法。主要实现是当一个连接传输完成时，并不是马上进行关闭，而是继续复用它传输其他请求的数据，这个连接保持到浏览器或者服务器要求断开连接为止。",-1),b=n("",9),q=t("p",null,"TCP 三次握手",-1),E=t("p",null,[t("strong",null,"为什么建立连接的时候需要进行三次握手呢？")],-1),I=t("p",null,"分别看看每次握手的目的就能知道了。第一次握手成功让服务端知道了客户端具有发送能力，第二次握手成功让客户端知道了服务端具有接收和发送能力，但此时服务端并不知道客户端是否接收到了自己发送的消息，所以第三次握手就起到了这个作用。经过三次通信后，服务端和客户端都确认了双方的接收和发送能力。",-1),N=n("",8),D=t("p",null,"TCP 四次挥手",-1),F=t("p",null,[t("strong",null,"为什么建立连接只通信了三次，而断开连接却用了四次？")],-1),M=t("p",null,"因为当服务端收到客户端的 FIN 报文后，发送的 ACK 报文只是用来应答的，并不表示服务端也希望立即关闭连接。",-1),x=t("p",null,"当只有服务端把所有的报文都发送完了，才会发送 FIN 报文，告诉客户端可以断开连接了，因此在断开连接时需要四次挥手。",-1),k=n("",8),V=t("p",null,"HTTP/2 通信示意图",-1),K=t("p",null,[s("HTTP/2 也增加了一些其他的功能，比如通过压缩头部信息来减少传输体积，以及通过服务推送来减少客户端请求。相对而言，二进制分帧属于核心功能，所以其他功能就不做详细介绍了，有兴趣的话可以查看"),t("a",{href:"https://http2.github.io/http2-spec/",target:"_blank",rel:"noreferrer"},"具体规范"),s("。")],-1),L=n("",18),Y=t("p",null,"通过浏览器查看证书链",-1),y=t("p",null,"上面所述的颁发证书与加密机制就是 HTTPS 的实现原理。",-1),B=t("h3",{id:"http-3",tabindex:"-1"},[s("HTTP/3 "),t("a",{class:"header-anchor",href:"#http-3","aria-label":'Permalink to "HTTP/3"'},"​")],-1),W=t("p",null,"当然 HTTP/2 也并非完美，考虑一种情况，如果客户端或服务端在通信时出现数据包丢失，或者任何一方的网络出现中断，那么整个 TCP 连接就会暂停。",-1),w=t("p",null,"HTTP/2 由于采用二进制分帧进行多路复用，通常只使用一个 TCP 连接进行传输，在丢包或网络中断的情况下后面的所有数据都被阻塞。但对于 HTTP/1.1 来说，可以开启多个 TCP 连接，任何一个 TCP 出现问题都不会影响其他 TCP 连接，剩余的 TCP 连接还可以正常传输数据。这种情况下 HTTP/2 的表现就不如 HTTP/1 了。",-1),R=t("p",null,"2018 年 HTTP/3 将底层依赖的 TCP 改成 UDP，从而彻底解决了这个问题。UDP 相对于 TCP 而言最大的特点是传输数据时不需要建立连接，可以同时发送多个数据包，所以传输效率很高，缺点就是没有确认机制来保证对方一定能收到数据。",-1),v=n("",6);function O(U,z,G,Q,Z,$){const o=r("Image");return T(),p("div",null,[l,i,h,c,a(o,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image/M00/2E/A9/Ciqc1F8FftOAWBxcAACoZAHJqyU111.png"}),s(),d,g,P,A,u,C,a(o,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image/M00/2E/B5/CgqCHl8FfuCAR4ehAADNwxuGzBg401.png"}),s(),H,m,S,f,a(o,{alt:"2.png",src:"https://s0.lgstatic.com/i/image6/M00/25/12/CioPOWBZVcaAHzMkAAGcRfuscWM964.png"}),s(),b,a(o,{alt:"图片11.png",src:"https://s0.lgstatic.com/i/image/M00/2E/A9/Ciqc1F8FfwaAMcTJAAEFwffjRvg679.png"}),s(),q,E,I,a(o,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/2E/A9/Ciqc1F8FfxaAbZfdAAAuYHUcVFM254.png"}),s(),N,a(o,{alt:"图片12.png",src:"https://s0.lgstatic.com/i/image/M00/2E/AA/Ciqc1F8Ffy6AEYs9AAD7_LezsQ8385.png"}),s(),D,F,M,x,a(o,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/2E/AA/Ciqc1F8FfzmAf1ibAAAv1vDF2ZY462.png"}),s(),k,a(o,{alt:"图片13.png",src:"https://s0.lgstatic.com/i/image/M00/2E/AA/Ciqc1F8Ff1uAD_hhAAEr7fn4_eQ069.png"}),s(),V,K,a(o,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/2E/AA/Ciqc1F8Ff6yAGpFsAAAXSbtvgbA286.png"}),s(),L,a(o,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/2E/B6/CgqCHl8Ff72AcQ98AAATc_aysHY208.png"}),s(),Y,y,B,W,w,R,a(o,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/2E/AA/Ciqc1F8Ff8yAANPvAAAhx24WzK4455.png"}),s(),v])}const X=e(_,[["render",O]]);export{j as __pageData,X as default};
