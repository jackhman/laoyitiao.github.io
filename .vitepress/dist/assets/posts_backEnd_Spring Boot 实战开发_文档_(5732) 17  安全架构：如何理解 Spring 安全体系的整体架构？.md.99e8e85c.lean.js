import{_ as e,j as o,o as t,g as r,k as a,h as p,Q as l,s}from"./chunks/framework.cfb14fe0.js";const I=JSON.parse('{"title":"17安全架构：如何理解Spring安全体系的整体架构？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5732) 17  安全架构：如何理解 Spring 安全体系的整体架构？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5732) 17  安全架构：如何理解 Spring 安全体系的整体架构？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/Spring Boot 实战开发_文档/(5732) 17  安全架构：如何理解 Spring 安全体系的整体架构？.md"},i=l("",10),E=s("p",null,"基于认证和授权机制的资源访问安全性示意图",-1),y=s("p",null,"上图就是一种通用方案，而在不同的应用场景及技术体系下，系统可以衍生出很多具体的实现策略，比如 Web 应用系统中的认证和授权模型虽然与上图类似，但是在具体设计和实现过程中有其特殊性。",-1),u=s("p",null,"在 Web 应用体系中，因为认证这部分的需求相对比较明确，所以我们需要构建一套完整的存储体系来保存和维护用户信息，并且确保这些用户信息在处理请求的过程中能够得到合理利用。",-1),_=s("p",null,"而授权的情况相对来说复杂些，比如对某个特定的 Web 应用程序而言，我们面临的第一个问题是如何判断一个 HTTP 请求具备访问自己的权限。解决完这个第一个问题后，就算这个请求具备访问该应用程序的权限，并不意味着它能够访问其所具有的所有 HTTP 端点，比如业务上的某些核心功能还是需要具备较高的权限才能访问，这就涉及我们需要解决的第二个问题------如何对访问的权限进行精细化管理？如下图所示：",-1),g=s("p",null,"Web 应用程序访问授权效果示意图",-1),h=s("p",null,"在上图中，假设该请求具备对 Web 应用程序的访问权限，但不具备访问应用程序中端点 1 的权限，如果想实现这种效果，一般我们的做法是引入角色体系：首先对不同的用户设置不同等级的角色（即角色等级不同对应的访问权限也不同），再把每个请求绑定到某个角色（即该请求具备了访问权限）。",-1),S=s("p",null,"接下来我们把认证和授权进行结合，梳理出了 Web 应用程序访问场景下的安全性实现方案，如下图所示：",-1),d=s("p",null,"认证和授权整合示意图",-1),A=s("p",null,"从上图我们可以看到，用户首先通过请求传递用户凭证完成用户认证，然后根据该用户信息中所具备的角色信息获取访问权限，最终完成对 HTTP 端点的访问授权。",-1),F=s("p",null,"对一个 Web 应用程序进行安全性设计时，我们首先需要考虑认证和授权，因为它们是核心考虑点。在技术实现场景中，只要涉及用户认证，势必会涉及用户密码等敏感信息的加密。针对用户密码的场景，我们主要使用单向散列加密算法对敏感信息进行加密。",-1),m=s("p",null,'关于单向散列加密算法，它常用于生成消息摘要（Message Digest），主要特点为单向不可逆和密文长度固定，同时具备"碰撞"少的优点，即明文的微小差异会导致生成的密文完全不同。其中，常见的单向散列加密实现算法为 MD5（Message Digest 5）和 SHA（Secure Hash Algorithm）。而在 JDK 自带的 MessageDigest 类中，因为它已经包含了这些算法的默认实现，所以我们直接调用方法即可。',-1),q=s("p",null,"在日常开发过程中，对于密码进行加密的典型操作时序图如下所示：",-1),C=l("",9),D=s("p",null,"管道-过滤器架构模式示意图",-1),b=s("p",null,"在上图中我们可以看到，处理业务逻辑的组件称为过滤器，而处理结果的相邻过滤器之间的连接件称为管道，它们构成了一组过滤器链，即 Spring Security 的核心。",-1),T=s("p",null,"项目一旦启动，过滤器链将会实现自动配置，如下图所示：",-1),P=l("",9),B=l("",12);function w(M,v,f,k,x,R){const n=o("Image");return t(),r("div",null,[i,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image2/M01/05/35/Cip5yF_9eRGAaOFAAACdJ5DTEOU093.png"}),p(),E,y,u,_,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/8D/50/Ciqc1F_9eRqANunuAAB5IYtX-6s596.png"}),p(),g,h,S,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/8D/5B/CgqCHl_9eSOANBbmAACWXd-B08c635.png"}),p(),d,A,F,m,q,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image2/M01/04/DE/CgpVE1_24-6ACO9pAABbleIQe14786.png"}),p(),C,a(n,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/8D/5B/CgqCHl_9eTCACoPnAACF6H2W2KI357.png"}),p(),D,b,T,a(n,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/8D/50/Ciqc1F_9eTmAM6OYAAD0pSOc1Xg188.png"}),p(),P,a(n,{alt:"Lark20210112-182830.png",src:"https://s0.lgstatic.com/i/image2/M01/05/35/Cip5yF_9edmAN_FuAAD0M-rwB1I928.png"}),p(),B])}const W=e(c,[["render",w]]);export{I as __pageData,W as default};
