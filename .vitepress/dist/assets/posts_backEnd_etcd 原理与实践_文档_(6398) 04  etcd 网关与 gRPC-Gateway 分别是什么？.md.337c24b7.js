import{_ as n,j as p,o as l,g as t,k as o,Q as a,s as e}from"./chunks/framework.e0c66c3f.js";const _=JSON.parse('{"title":"etcd 网关模式：构建 etcd 集群的门户 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/etcd 原理与实践_文档/(6398) 04  etcd 网关与 gRPC-Gateway 分别是什么？.md","filePath":"posts/backEnd/etcd 原理与实践_文档/(6398) 04  etcd 网关与 gRPC-Gateway 分别是什么？.md","lastUpdated":1696338709000}'),c={name:"posts/backEnd/etcd 原理与实践_文档/(6398) 04  etcd 网关与 gRPC-Gateway 分别是什么？.md"},r=a('<p>etcd 中有 etcd 网关与 gRPC-Gateway 两种类型的网关，很多同学会迷糊：这两种网关有什么区别，各自的用途是什么？这一讲我将通过介绍这两种网关以及相关实践，来解答你的困惑。</p><h3 id="etcd-网关模式-构建-etcd-集群的门户" tabindex="-1">etcd 网关模式：构建 etcd 集群的门户 <a class="header-anchor" href="#etcd-网关模式-构建-etcd-集群的门户" aria-label="Permalink to &quot;etcd 网关模式：构建 etcd 集群的门户&quot;">​</a></h3><p>etcd 网关是一个简单的<strong>TCP 代理</strong> ，可将网络数据转发到 etcd 集群。网关是无状态且透明的，它<strong>既不会检查客户端请求，也不会干扰集群响应</strong>，支持多个 etcd 服务器实例，并采用简单的循环策略。etcd 网关将请求路由到可用端点，并向客户端隐藏故障，使得客户端感知不到服务端的故障。后期可能会支持其他访问策略，例如加权轮询。</p><h4 id="什么时候使用-etcd-网关模式" tabindex="-1">什么时候使用 etcd 网关模式 <a class="header-anchor" href="#什么时候使用-etcd-网关模式" aria-label="Permalink to &quot;什么时候使用 etcd 网关模式&quot;">​</a></h4><p>我们使用客户端连接到 etcd 服务器时，每个访问 etcd 的应用程序<strong>必须知道所要访问的 etcd 集群实例的地址</strong>，即用来提供客户端服务的地址：ETCD_LISTEN_CLIENT_URLS。</p><p>如果同一服务器上的<strong>多个应用程序访问相同的 etcd 集群</strong> ，每个应用程序<strong>仍需要知道 etcd 集群的广播的客户端端点地址</strong>。如果将 etcd 集群重新配置，拥有不同的端点，那么每个应用程序还需要更新其端点列表。在大规模集群环境下，重新配置的操作既造成了重复又容易出错。</p><p>以上问题，都可以通过 etcd 网关来解决：使用 etcd 网关作为稳定的本地端点，对于<strong>客户端应用程序</strong> 来说，<strong>不会感知到集群实例的变化</strong>。典型的 etcd 网关配置是使每台运行网关的计算机在本地地址上侦听，并且每个 etcd 应用程序都连接对应的本地网关，发生 etcd 集群实例的变更时，只需要网关更新其端点，而不需要更新每个客户端应用程序的代码实现。</p><p>当然也不是所有的场景都适用 etcd 网关，比如下面这两个场景就不适合使用。</p><ul><li><p><strong>性能提升</strong></p><p>etcd 网关不是为提高 etcd 集群性能设计的。它不提供缓存、watch 流合并或批量处理等功能。etcd 团队目前正在开发一种缓存代理，旨在提高集群的可伸缩性。</p></li><li><p><strong>在集群上运行管理系统</strong></p><p>类似 Kubernetes 的高级集群管理系统本身支持服务发现。应用程序可以使用系统默认的 DNS 名称或虚拟 IP 地址访问 etcd 集群。例如，负责为 Service 提供 Cluster 内部的服务发现和负载均衡的 Kube-proxy 其实等效于 etcd 网关的职能。</p></li></ul><p>总而言之，为了自动传播集群端点更改，etcd 网关在每台机器上都运行，为多个应用提供访问相同的 etcd 集群服务。</p><h4 id="etcd-网关模式实践" tabindex="-1">etcd 网关模式实践 <a class="header-anchor" href="#etcd-网关模式实践" aria-label="Permalink to &quot;etcd 网关模式实践&quot;">​</a></h4><p>下面我们基于 etcd 网关模式进行实战演练，有如下的环境：</p>',12),y=a(`<p>启动 etcd 网关，以通过 etcd gateway 命令代理这些静态端点：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ etcd gateway start </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">endpoints</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//192.168.10.7:2379,http://192.168.10.8:2379,http://192.168.10.9:2379</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果如下所示：</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;level&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;info&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">1607794339.7171252</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;caller&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;tcpproxy/userspace.go:90&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;ready to proxy client requests&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;endpoints&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;192.168.10.7:2379&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;192.168.10.8:2379&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;192.168.10.9:2379&quot;</span><span style="color:#E1E4E8;">]}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ etcd gateway start </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">endpoints</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//192.168.10.7:2379,http://192.168.10.8:2379,http://192.168.10.9:2379</span></span>
<span class="line"><span style="color:#24292E;">#响应结果如下所示：</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;level&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;info&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1607794339.7171252</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;caller&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;tcpproxy/userspace.go:90&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;ready to proxy client requests&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;endpoints&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;192.168.10.7:2379&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;192.168.10.8:2379&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;192.168.10.9:2379&quot;</span><span style="color:#24292E;">]}</span></span></code></pre></div><p>注意的是，<code>---endpoints</code>是以逗号分隔的、用于转发客户端连接的 etcd 服务器目标列表。默认值为<code>127.0.0.1:2379</code>，不能使用类似如下的配置：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">endpoints</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">https</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//127.0.0.1:2379</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">endpoints</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//127.0.0.1:2379</span></span></code></pre></div><p>因为<strong>网关并不能决定 TLS</strong>。</p><p>其他常用配置如下：</p><ul><li><p>--listen-addr 绑定的接口和端口，用于接受客户端请求，默认配置为 127.0.0.1:23790；</p></li><li><p>--retry-delay 重试连接到失败的端点延迟时间。默认为 1m0s。<strong>需要注意的是，值的后面标注单位，类似</strong> <code>123</code>的设置不合法，<strong>命令行会出现参数不合法</strong>。</p></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">invalid argument </span><span style="color:#9ECBFF;">&quot;123&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;--retry-delay&quot;</span><span style="color:#E1E4E8;"> flag</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> time</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> missing unit in duration </span><span style="color:#79B8FF;">123</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">invalid argument </span><span style="color:#032F62;">&quot;123&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;--retry-delay&quot;</span><span style="color:#24292E;"> flag</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> time</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> missing unit in duration </span><span style="color:#005CC5;">123</span></span></code></pre></div><ul><li><p>--insecure-discovery 接受不安全或容易受到中间人攻击的 SRV 记录。默认为 false。</p></li><li><p>--trusted-ca-file 是 etcd 集群的客户端 TLS CA 文件的路径，用于认证端点。</p></li></ul><p>除了使用静态指定 endpoint 的方式，还可以使用 DNS 进行服务发现，进行 DNS SRV 条目设置。你可以基于我们前面讲解的 DNS 发现模式的集群自行尝试。</p><h3 id="grpc-gateway-为非-grpc-的客户端提供-http-接口" tabindex="-1">gRPC-Gateway：为非 gRPC 的客户端提供 HTTP 接口 <a class="header-anchor" href="#grpc-gateway-为非-grpc-的客户端提供-http-接口" aria-label="Permalink to &quot;gRPC-Gateway：为非 gRPC 的客户端提供 HTTP 接口&quot;">​</a></h3><p>etcd v3 使用 gRPC 作为消息传输协议。etcd 项目中包括了基于 gRPC 的 Go client 和命令行工具 etcdctl，客户端通过 gRPC 框架与 etcd 集群通讯。对于不支持 gRPC 的客户端语言，etcd 提供 JSON 的 gRPC-Gateway，通过 gRPC-Gateway 提供 RESTful 代理，转换 HTTP/JSON 请求为 gRPC 的 Protocol Buffer 格式的消息。</p><p>这里你需要注意的是，在 HTTP 请求体中的 JSON 对象，其包含的 key 和 value 字段都被定义成了 byte 数组，因此<strong>必须在 JSON 对象中，使用 base64 编码对内容进行处理</strong>。为了方便，我在下面例子将会使用 curl 发起 HTTP 请求，其他的 HTTP/JSON 客户端（如浏览器、Postman 等）都可以进行这些操作。</p><h4 id="etcd-版本与-grpc-gateway-接口对应的关系" tabindex="-1">etcd 版本与 gRPC-Gateway 接口对应的关系 <a class="header-anchor" href="#etcd-版本与-grpc-gateway-接口对应的关系" aria-label="Permalink to &quot;etcd 版本与 gRPC-Gateway 接口对应的关系&quot;">​</a></h4><p>gRPC-Gateway 提供的接口路径自 etcd v3.3 已经变更：</p><ul><li><p>etcd v3.2 及之前的版本只能使用 [CLIENT-URL]/v3alpha/* 接口；</p></li><li><p>etcd v3.3 使用 CLIENT-URL/v3alpha/*；</p></li><li><p>etcd v3.4 使用 CLIENT-URL/v3beta/，且废弃了[CLIENT-URL]/v3alpha/；</p></li><li><p>etcd v3.5 只使用 CLIENT-URL/v3beta/。</p></li></ul><p>通过上面的接口与 etcd 版本的对应关系，你可以看到，即使是 v3 版本下的 API，gRPC-Gateway 提供的接口路径在内部细分的版本下也有不同，所以需要注意当前正在使用的 etcd 版本。</p><p>下面我们将基于 etcd 提供的 gRPC-Gateway 接口进行键值对读写、watch、事务和安全认证的实践。</p><h4 id="键值对读写操作" tabindex="-1">键值对读写操作 <a class="header-anchor" href="#键值对读写操作" aria-label="Permalink to &quot;键值对读写操作&quot;">​</a></h4><p>我们先来看看键值对的读写，分别使用接口 /v3/kv/range 和 /v3/kv/put 进行读写 keys。我们将键值对象写入 etcd：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span></code></pre></div><p>可以看到，我们通过 HTTP 请求成功写入了一对键值对，其中键为 Zm9v，值为 YmFy。键值对经过了 base64 编码，实际写入的键值对为 foo:bar。</p><p>接着，我们通过 /v3/kv/range 接口，来读取刚刚写入的键值对：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;kvs&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;key&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;Zm9v&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;create_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;13&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;mod_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;4&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;YmFy&quot;</span><span style="color:#E1E4E8;">}],</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;kvs&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;key&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Zm9v&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;create_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;13&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;mod_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;4&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;YmFy&quot;</span><span style="color:#24292E;">}],</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>通过 range 接口，获取 &quot;Zm9v&quot; 对应的值，完全符合我们的预期。</p><p>当我们想要获取前缀为指定值的键值对时，可以使用如下请求：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;range_end&quot;: &quot;Zm9w&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;kvs&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;key&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;Zm9v&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;create_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;13&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;mod_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;16&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;4&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;YmFy&quot;</span><span style="color:#E1E4E8;">}],</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;range_end&quot;: &quot;Zm9w&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;kvs&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;key&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Zm9v&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;create_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;13&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;mod_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;16&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;4&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;YmFy&quot;</span><span style="color:#24292E;">}],</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>我们在请求中指定了 key 的范围为 Zm9v-Zm9w。结果只返回一个键值对，符合预期。通过接口 /v3/kv/range 和 /v3/kv/put，我们可以方便地读写键值对。</p><h4 id="watch-键值" tabindex="-1">watch 键值 <a class="header-anchor" href="#watch-键值" aria-label="Permalink to &quot;watch 键值&quot;">​</a></h4><p>键值对的 watch 也是 etcd 中经常用到的功能。etcd 中提供了 /v3/watch 接口来监测 keys，我们来 watch 刚刚写入的 &quot;Zm9v&quot;，请求如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">N http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/watch \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;create_request&quot;: {&quot;key&quot;:&quot;Zm9v&quot;} }&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;result&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;12585971608760269493&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;13847567121247652255&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;2&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;created&quot;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">N http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/watch \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;create_request&quot;: {&quot;key&quot;:&quot;Zm9v&quot;} }&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span></span>
<span class="line"><span style="color:#24292E;"># 输出结果如下：</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;result&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;12585971608760269493&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;13847567121247652255&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;created&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">}}</span></span></code></pre></div><p>我们创建了一个监视 key 为 Zm9v 的请求，etcd 服务端返回了创建成功的结果。</p><p>另外发起一个请求，用以更新该键值，请求如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;/</span><span style="color:#E1E4E8;">dev</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">&gt;&amp;</span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;/</span><span style="color:#24292E;">dev</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">&gt;&amp;</span><span style="color:#005CC5;">1</span></span></code></pre></div><p>我们在 watch 请求的执行页面，可以看到如下结果：</p>`,35),u=a(`<p>当写入键值后，触发了监测事件的发生，控制台输出了时间的细节。HTTP 请求客户端与 etcd 服务端建立长连接，当监听的键值对发生变更时，便会将事件通知给客户端。</p><h4 id="etcd-事务的实现" tabindex="-1">etcd 事务的实现 <a class="header-anchor" href="#etcd-事务的实现" aria-label="Permalink to &quot;etcd 事务的实现&quot;">​</a></h4><p>事务用于完成一组操作，通过对比指定的条件，成功的情况下执行相应的操作，否则回滚。在 gRPC-Gateway 中提供了 API接口，通过 /v3/kv/txn 接口发起一个事务。</p><p>我们先来对比指定键值对的创建版本，如果成功则执行更新操作。</p><p>为了获取创建版本，我们在执行前，先查询该键值对的信息：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 查询键值对的版本</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range   -X POST -d &#39;{&quot;key&quot;: &quot;Zm9v&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;kvs&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;key&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;Zm9v&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;create_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;13&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;mod_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;8&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;YmFy&quot;</span><span style="color:#E1E4E8;">}],</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"># 事务，对比指定键值对的创建版本</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/txn \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;compare&quot;:[{&quot;target&quot;:&quot;CREATE&quot;,&quot;key&quot;:&quot;Zm9v&quot;,&quot;createRevision&quot;:&quot;13&quot;}],&quot;success&quot;:[{&quot;requestPut&quot;:{&quot;key&quot;:&quot;Zm9v&quot;,&quot;value&quot;:&quot;YmFy&quot;}}]}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> #响应结果</span></span>
<span class="line"><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;succeeded&quot;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;responses&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;response_put&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">}}}]}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 查询键值对的版本</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/range   -X POST -d &#39;{&quot;key&quot;: &quot;Zm9v&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;kvs&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;key&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Zm9v&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;create_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;13&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;mod_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;8&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;YmFy&quot;</span><span style="color:#24292E;">}],</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"># 事务，对比指定键值对的创建版本</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/txn \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;compare&quot;:[{&quot;target&quot;:&quot;CREATE&quot;,&quot;key&quot;:&quot;Zm9v&quot;,&quot;createRevision&quot;:&quot;13&quot;}],&quot;success&quot;:[{&quot;requestPut&quot;:{&quot;key&quot;:&quot;Zm9v&quot;,&quot;value&quot;:&quot;YmFy&quot;}}]}&#39;</span></span>
<span class="line"><span style="color:#24292E;"> #响应结果</span></span>
<span class="line"><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;succeeded&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;responses&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;response_put&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">}}}]}</span></span></code></pre></div><p>接着发起事务，用以设置键值，compare 是断言列表，拥有多个联合的条件，这里的条件是当 createRevision 的值为 13 时（我们在上面请求查询到该键值的创建版本为 13），表示符合条件，因此事务可以成功执行。</p><p>下面是一个对比指定键值对版本的事务，HTTP 请求实现如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 事务，对比指定键值对的版本</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/txn \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;compare&quot;:[{&quot;version&quot;:&quot;8&quot;,&quot;result&quot;:&quot;EQUAL&quot;,&quot;target&quot;:&quot;VERSION&quot;,&quot;key&quot;:&quot;Zm9v&quot;}],&quot;success&quot;:[{&quot;requestRange&quot;:{&quot;key&quot;:&quot;Zm9v&quot;}}]}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> #响应结果</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;6&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;3&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;succeeded&quot;</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;responses&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;response_range&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;6&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;kvs&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">[{</span><span style="color:#9ECBFF;">&quot;key&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;Zm9v&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;create_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;2&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;mod_revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;6&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;4&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;YmF6&quot;</span><span style="color:#E1E4E8;">}],</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">}}]}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 事务，对比指定键值对的版本</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/txn \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;compare&quot;:[{&quot;version&quot;:&quot;8&quot;,&quot;result&quot;:&quot;EQUAL&quot;,&quot;target&quot;:&quot;VERSION&quot;,&quot;key&quot;:&quot;Zm9v&quot;}],&quot;success&quot;:[{&quot;requestRange&quot;:{&quot;key&quot;:&quot;Zm9v&quot;}}]}&#39;</span></span>
<span class="line"><span style="color:#24292E;"> #响应结果</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;6&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;3&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;succeeded&quot;</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;responses&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;response_range&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;6&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;kvs&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">[{</span><span style="color:#032F62;">&quot;key&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;Zm9v&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;create_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;2&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;mod_revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;6&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;4&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;YmF6&quot;</span><span style="color:#24292E;">}],</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">}}]}</span></span></code></pre></div><p>上述命令获取指定版本的键值，可以看到 compare 中 target 的枚举值为 VERSION。通过比较，发现键 Zm9v 对应的 version 确实是 8，因此执行查询结果，返回 Zm9v 对应的正确值 YmF6。</p><h4 id="http-请求的安全认证" tabindex="-1">HTTP 请求的安全认证 <a class="header-anchor" href="#http-请求的安全认证" aria-label="Permalink to &quot;HTTP 请求的安全认证&quot;">​</a></h4><p>HTTP 的方式访问 etcd 服务端，需要考虑安全的问题，gRPC-Gateway 中提供的 API 接口支持开启安全认证。通过 /v3/auth 接口设置认证，实现认证的流程如下图所示：</p>`,12),E=a(`<div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 创建 root 用户</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/user/add \\</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;name&quot;: &quot;root&quot;, &quot;password&quot;: &quot;123456&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span>
<span class="line"><span style="color:#E1E4E8;"># 创建 root 角色</span></span>
<span class="line"><span style="color:#E1E4E8;">curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/role/add \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;name&quot;: &quot;root&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果	{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span>
<span class="line"><span style="color:#E1E4E8;"># 为 root 用户授予角色</span></span>
<span class="line"><span style="color:#E1E4E8;">curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/user/grant \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;user&quot;: &quot;root&quot;, &quot;role&quot;: &quot;root&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span>
<span class="line"><span style="color:#E1E4E8;"># 开启权限</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/enable -X POST -d &#39;{}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果 {</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 创建 root 用户</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/user/add \\</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;name&quot;: &quot;root&quot;, &quot;password&quot;: &quot;123456&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;"># 创建 root 角色</span></span>
<span class="line"><span style="color:#24292E;">curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/role/add \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;name&quot;: &quot;root&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果	{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;"># 为 root 用户授予角色</span></span>
<span class="line"><span style="color:#24292E;">curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/user/grant \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;user&quot;: &quot;root&quot;, &quot;role&quot;: &quot;root&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span>
<span class="line"><span style="color:#24292E;"># 开启权限</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/enable -X POST -d &#39;{}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果 {</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span></code></pre></div><p>如上的请求中，我们首先创建了 root 用户和角色，将 root 角色赋予到 root 用户，这样就可以开启用户的权限。接下来就是进行身份验证，并进行 HTTP 访问。流程如下图所示：</p>`,2),q=a(`<p>使用 /v3/auth/authenticate API 接口对 etcd 进行身份验证以获取身份验证令牌：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 获取 root 用户的认证令牌</span></span>
<span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/authenticate \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;name&quot;: &quot;root&quot;, &quot;password&quot;: &quot;123456&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;21&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;token&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;DhRvXkWhOkINVQXI.57&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 获取 root 用户的认证令牌</span></span>
<span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/auth/authenticate \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;name&quot;: &quot;root&quot;, &quot;password&quot;: &quot;123456&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果</span></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;21&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;token&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;DhRvXkWhOkINVQXI.57&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>请求获取到 token 的值为 DhRvXkWhOkINVQXI.57。</p><p>接下来，设置请求的头部 Authorization 为刚刚获取到的身份验证令牌，以使用身份验证凭据设置 key 值：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">L http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">H </span><span style="color:#9ECBFF;">&#39;Authorization : DhRvXkWhOkINVQXI.57&#39;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">#响应结果  	{</span><span style="color:#9ECBFF;">&quot;header&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;cluster_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;14841639068965178418&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;member_id&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;10276657743932975437&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;revision&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;21&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;raft_term&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;9&quot;</span><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">L http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:2379/v3/kv/put \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&#39;Authorization : DhRvXkWhOkINVQXI.57&#39;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;key&quot;: &quot;Zm9v&quot;, &quot;value&quot;: &quot;YmFy&quot;}&#39;</span></span>
<span class="line"><span style="color:#24292E;">#响应结果  	{</span><span style="color:#032F62;">&quot;header&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;cluster_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;14841639068965178418&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;member_id&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;10276657743932975437&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;revision&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;21&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;raft_term&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;9&quot;</span><span style="color:#24292E;">}}</span></span></code></pre></div><p>可以看到，上述请求设置成功 Zm9v 对应的 YmFy。如果 token 不合法，会出现 401 的错误，如下所示：</p>`,6),F=a('<p>etcd gRPC-Gateway 中提供的 API 接口还有诸如 /v3/auth/role/delete、/v3/auth/role/get 等其他接口，限于篇幅，我只介绍了其中常用的几个，其他的接口可以参见：<a href="https://github.com/etcd-io/etcd/blob/master/Documentation/dev-guide/apispec/swagger/rpc.swagger.json" target="_blank" rel="noreferrer">rpc.swagger.json</a>。</p><h3 id="小结-etcd-网关与-grpc-gateway-的对比" tabindex="-1">小结：etcd 网关与 gRPC-Gateway 的对比 <a class="header-anchor" href="#小结-etcd-网关与-grpc-gateway-的对比" aria-label="Permalink to &quot;小结：etcd 网关与 gRPC-Gateway 的对比&quot;">​</a></h3><p>通过上面的讲解与实践，我们来总结下这两种网关的用途和使用场景：</p><ul><li><p>etcd 网关通常用于 etcd 集群的门户，是一个简单的 TCP 代理，将客户端请求转发到 etcd 集群，对外屏蔽了 etcd 集群内部的实际情况，在集群出现故障或者异常时，可以通过 etcd 网关进行切换；</p></li><li><p>gRPC-Gateway 则是对于 etcd 的 gRPC 通信协议的补充，有些语言的客户端不支持 gRPC 通信协议，此时就可以使用 gRPC-Gateway 对外提供的 HTTP API 接口。通过 HTTP 请求，实现与 gRPC 调用协议同样的功能。</p></li></ul><p>总的来说，etcd 网关与 gRPC-Gateway 是 etcd 中两个不同的功能，不能混为一谈，只有当你理解了它们各自的功能，才能在适当的场景使用。</p><p>本讲主要内容如下：</p>',6),i=e("p",null,"学完这一讲，你对 etcd 网关与 gRPC-Gateway 有什么使用方面的见解或者实践经历？欢迎在留言区和我分享。下一讲我们将会学习如何实现可伸缩的 etcd API，即 etcd gRPC 代理的模式。",-1);function d(C,v,h,A,g,D){const s=p("Image");return l(),t("div",null,[r,o(s,{alt:"202124-24610.png",src:"https://s0.lgstatic.com/i/image6/M00/01/33/Cgp9HWAbYByAfA1MAANa5H93HxQ555.png"}),y,o(s,{alt:"202124-24615.png",src:"https://s0.lgstatic.com/i/image6/M00/01/31/CioPOWAbYCuAXNCwAAUjH7emDuI276.png"}),u,o(s,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image6/M00/02/F8/CioPOWAeU_iAW1x5AABp9hsIxJk379.png"}),E,o(s,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image6/M00/02/FA/Cgp9HWAeVBOAboy4AAB4viPlbQo993.png"}),q,o(s,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image2/M01/0C/37/CgpVE2AXy1mAIoJYAAHuUqnYrC4761.png"}),F,o(s,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image2/M01/0C/35/Cip5yGAXy2aAZl7CAAGOud5RyFE332.png"}),i])}const m=n(c,[["render",d]]);export{_ as __pageData,m as default};
