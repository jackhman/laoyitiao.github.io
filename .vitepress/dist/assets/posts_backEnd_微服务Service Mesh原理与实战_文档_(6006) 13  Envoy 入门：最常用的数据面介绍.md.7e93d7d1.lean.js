import{_ as l,j as p,o as e,g as t,k as n,Q as o,s as a}from"./chunks/framework.b3d8e22e.js";const P=JSON.parse('{"title":"核心功能 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6006) 13  Envoy 入门：最常用的数据面介绍.md","filePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6006) 13  Envoy 入门：最常用的数据面介绍.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/微服务Service Mesh原理与实战_文档/(6006) 13  Envoy 入门：最常用的数据面介绍.md"},c=o("",15),E=o("",7),y=a("p",null,"如上图所示，Envoy 作为 Sidecar 使用时，需要和服务部署在同一台机器或者 Pod 中，用户访问其他服务时，流量会被自动劫持到 Envoy 中。",-1),i=a("p",null,"下面我们结合一个具体的例子来讲解。下图是 Productpage 服务通过 HTTP 协议，调用 review 服务的过程。",-1),g=o("",27),_=a("p",null,"本讲内容到这里就结束了，下一讲我会讲解最常用的 Service Mesh 解决方案------Istio 的基本知识，以及 Istio 的部署实战。",-1),d=a("p",null,"通过今天讲解的内容，如果让你设计一个 Sidecar，对于出入流量你会采用双端口还是单端口方案呢？如果要支持不同协议，你会在单端口上支持，还是在多端口上分别支持不同的协议呢? 欢迎在留言区和我分享你的观点，我们下一讲再见！",-1);function v(h,u,A,m,T,D){const s=p("Image");return e(),t("div",null,[c,n(s,{alt:"1白底.png",src:"https://s0.lgstatic.com/i/image2/M01/0C/01/CgpVE2AXJaCAFUsQAAFL99sKyE0926.png"}),E,n(s,{alt:"3.png",src:"https://s0.lgstatic.com/i/image2/M01/0B/FE/Cip5yGAXJcGAZ6mdAAMoOTjKasg148.png"}),y,i,n(s,{alt:"2白底.png",src:"https://s0.lgstatic.com/i/image2/M01/0B/FE/Cip5yGAXJd2ATQjPAAD_zYyDRqQ802.png"}),g,n(s,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/93/11/Ciqc1GATuziAP5fFAAH-wz7cloQ948.png"}),_,d])}const f=l(r,[["render",v]]);export{P as __pageData,f as default};
