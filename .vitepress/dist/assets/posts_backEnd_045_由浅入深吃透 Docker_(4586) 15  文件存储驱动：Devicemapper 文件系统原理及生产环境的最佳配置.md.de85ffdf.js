import{_ as l,j as o,o as e,g as t,k as n,h as p,Q as s}from"./chunks/framework.b3d8e22e.js";const A=JSON.parse('{"title":"什么是 Devicemapper ？ ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/045_由浅入深吃透 Docker/(4586) 15  文件存储驱动：Devicemapper 文件系统原理及生产环境的最佳配置.md","filePath":"posts/backEnd/045_由浅入深吃透 Docker/(4586) 15  文件存储驱动：Devicemapper 文件系统原理及生产环境的最佳配置.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/045_由浅入深吃透 Docker/(4586) 15  文件存储驱动：Devicemapper 文件系统原理及生产环境的最佳配置.md"},r=s('<p>上一课时我带你学习了什么是联合文件系统，以及 AUFS 的工作原理和配置。我们知道 AUFS 并不在 Linux 内核主干中，所以如果你的操作系统是 CentOS，就不推荐使用 AUFS 作为 Docker 的联合文件系统了。</p><p>那在 CentOS 系统中，我们怎么实现镜像和容器的分层结构呢？我们通常使用 Devicemapper 作为 Docker 的联合文件系统。</p><h3 id="什么是-devicemapper" tabindex="-1">什么是 Devicemapper ？ <a class="header-anchor" href="#什么是-devicemapper" aria-label="Permalink to &quot;什么是 Devicemapper ？&quot;">​</a></h3><p>Devicemapper 是 Linux 内核提供的框架，从 Linux 内核 2.6.9 版本开始引入，Devicemapper 与 AUFS 不同，AUFS 是一种文件系统，而<strong>Devicemapper 是一种映射块设备的技术框架。</strong></p><p>Devicemapper 提供了一种将物理块设备映射到虚拟块设备的机制，目前 Linux 下比较流行的 LVM （Logical Volume Manager 是 Linux 下对磁盘分区进行管理的一种机制）和软件磁盘阵列（将多个较小的磁盘整合成为一个较大的磁盘设备用于扩大磁盘存储和提供数据可用性）都是基于 Devicemapper 机制实现的。</p><p>那么 Devicemapper 究竟是如何实现的呢？下面我们首先来了解一下它的关键技术。</p><h3 id="devicemapper-的关键技术" tabindex="-1">Devicemapper 的关键技术 <a class="header-anchor" href="#devicemapper-的关键技术" aria-label="Permalink to &quot;Devicemapper 的关键技术&quot;">​</a></h3><p>Devicemapper 将主要的工作部分分为用户空间和内核空间。</p><ul><li><p>用户空间负责配置具体的设备映射策略与相关的内核空间控制逻辑，例如逻辑设备 dm-a 如何与物理设备 sda 相关联，怎么建立逻辑设备和物理设备的映射关系等。</p></li><li><p>内核空间则负责用户空间配置的关联关系实现，例如当 IO 请求到达虚拟设备 dm-a 时，内核空间负责接管 IO 请求，然后处理和过滤这些 IO 请求并转发到具体的物理设备 sda 上。</p></li></ul><p>这个架构类似于 C/S （客户端/服务区）架构的工作模式，客户端负责具体的规则定义和配置下发，服务端根据客户端配置的规则来执行具体的处理任务。</p><p>Devicemapper 的工作机制主要围绕三个核心概念。</p><ul><li><p>映射设备（mapped device）：即对外提供的逻辑设备，它是由 Devicemapper 模拟的一个虚拟设备，并不是真正存在于宿主机上的物理设备。</p></li><li><p>目标设备（target device）：目标设备是映射设备对应的物理设备或者物理设备的某一个逻辑分段，是真正存在于物理机上的设备。</p></li><li><p>映射表（map table）：映射表记录了映射设备到目标设备的映射关系，它记录了映射设备在目标设备的起始地址、范围和目标设备的类型等变量。</p></li></ul>',12),E=s('<p>图 1 Devicemapper 核心概念关系图</p><p>Devicemapper 三个核心概念之间的关系如图 1，<strong>映射设备通过映射表关联到具体的物理目标设备。事实上，映射设备不仅可以通过映射表关联到物理目标设备，也可以关联到虚拟目标设备，然后虚拟目标设备再通过映射表关联到物理目标设备。</strong></p><p>Devicemapper 在内核中通过很多模块化的映射驱动（target driver）插件实现了对真正 IO 请求的拦截、过滤和转发工作，比如 Raid、软件加密、瘦供给（Thin Provisioning）等。其中瘦供给模块是 Docker 使用 Devicemapper 技术框架中非常重要的模块，下面我们来详细了解下瘦供给（Thin Provisioning）。</p><h4 id="瘦供给-thin-provisioning" tabindex="-1">瘦供给（Thin Provisioning） <a class="header-anchor" href="#瘦供给-thin-provisioning" aria-label="Permalink to &quot;瘦供给（Thin Provisioning）&quot;">​</a></h4><p>瘦供给的意思是动态分配，这跟传统的固定分配不一样。传统的固定分配是无论我们用多少都一次性分配一个较大的空间，这样可能导致空间浪费。而瘦供给是我们需要多少磁盘空间，存储驱动就帮我们分配多少磁盘空间。</p><p>这种分配机制就好比我们一群人围着一个大锅吃饭，负责分配食物的人每次都给你一点分量，当你感觉食物不够时再去申请食物，而当你吃饱了就不需要再去申请食物了，从而避免了食物的浪费，节约的食物可以分配给更多需要的人。</p><p>那么，你知道 Docker 是如何使用瘦供给来做到像 AUFS 那样分层存储文件的吗？答案就是： Docker 使用了瘦供给的快照（snapshot）技术。</p><p>什么是快照（snapshot）技术？这是全球网络存储工业协会 SNIA（StorageNetworking Industry Association）对快照（Snapshot）的定义：</p><blockquote><p>关于指定数据集合的一个完全可用拷贝，该拷贝包括相应数据在某个时间点（拷贝开始的时间点）的映像。快照可以是其所表示的数据的一个副本，也可以是数据的一个复制品。</p></blockquote><p>简单来说，<strong>快照是数据在某一个时间点的存储状态。快照的主要作用是对数据进行备份，当存储设备发生故障时，可以使用已经备份的快照将数据恢复到某一个时间点，而 Docker 中的数据分层存储也是基于快照实现的。</strong></p><p>以上便是实现 Devicemapper 的关键技术，那 Docker 究竟是如何使用 Devicemapper 实现存储数据和镜像分层共享的呢？</p><h3 id="devicemapper-是如何数据存储的" tabindex="-1">Devicemapper 是如何数据存储的？ <a class="header-anchor" href="#devicemapper-是如何数据存储的" aria-label="Permalink to &quot;Devicemapper 是如何数据存储的？&quot;">​</a></h3><p>当 Docker 使用 Devicemapper 作为文件存储驱动时，<strong>Docker 将镜像和容器的文件存储在瘦供给池（thinpool）中，并将这些内容挂载在 /var/lib/docker/devicemapper/ 目录下。</strong></p><p>这些目录储存 Docker 的容器和镜像相关数据，目录的数据内容和功能说明如下。</p><ul><li><p>devicemapper 目录（/var/lib/docker/devicemapper/devicemapper/）：存储镜像和容器实际内容，该目录由一个或多个块设备构成。</p></li><li><p>metadata 目录（/var/lib/docker/devicemapper/metadata/）： 包含 Devicemapper 本身配置的元数据信息, 以 json 的形式配置，这些元数据记录了镜像层和容器层之间的关联信息。</p></li><li><p>mnt 目录（ /var/lib/docker/devicemapper/mnt/）：是容器的联合挂载点目录，未生成容器时，该目录为空，而容器存在时，该目录下的内容跟容器中一致。</p></li></ul><h3 id="devicemapper-如何实现镜像分层与共享" tabindex="-1">Devicemapper 如何实现镜像分层与共享？ <a class="header-anchor" href="#devicemapper-如何实现镜像分层与共享" aria-label="Permalink to &quot;Devicemapper 如何实现镜像分层与共享？&quot;">​</a></h3><p>Devicemapper 使用专用的块设备实现镜像的存储，并且像 AUFS 一样使用了写时复制的技术来保障最大程度节省存储空间，所以 Devicemapper 的镜像分层也是依赖快照来是实现的。</p><p>Devicemapper 的每一镜像层都是其下一层的快照，最底层的镜像层是我们的瘦供给池，通过这种方式实现镜像分层有以下优点。</p><ul><li><p>相同的镜像层，仅在磁盘上存储一次。例如，我有 10 个运行中的 busybox 容器，底层都使用了 busybox 镜像，那么 busybox 镜像只需要在磁盘上存储一次即可。</p></li><li><p>快照是写时复制策略的实现，也就是说，当我们需要对文件进行修改时，文件才会被复制到读写层。</p></li><li><p>相比对文件系统加锁的机制，Devicemapper 工作在块级别，因此可以实现同时修改和读写层中的多个块设备，比文件系统效率更高。</p></li></ul><p>当我们需要读取数据时，如果数据存在底层快照中，则向底层快照查询数据并读取。当我们需要写数据时，则向瘦供给池动态申请存储空间生成读写层，然后把数据复制到读写层进行修改。Devicemapper 默认每次申请的大小是 64K 或者 64K 的倍数，因此每次新生成的读写层的大小都是 64K 或者 64K 的倍数。</p><p>以下是一个运行中的 Ubuntu 容器示意图。</p>',21),y=s(`<p>图 2 Devicemapper 存储模型</p><p>这个 Ubuntu 镜像一共有四层，每一层镜像都是下一层的快照，镜像的最底层是基础设备的快照。当容器运行时，容器是基于镜像的快照。综上，Devicemapper 实现镜像分层的根本原理就是快照。</p><p>接下来，我们看下如何配置 Docker 的 Devicemapper 模式。</p><h3 id="如何在-docker-中配置-devicemapper" tabindex="-1">如何在 Docker 中配置 Devicemapper <a class="header-anchor" href="#如何在-docker-中配置-devicemapper" aria-label="Permalink to &quot;如何在 Docker 中配置 Devicemapper&quot;">​</a></h3><p>Docker 的 Devicemapper 模式有两种：第一种是 loop-lvm 模式，该模式主要用来开发和测试使用；第二种是 direct-lvm 模式，该模式推荐在生产环境中使用。</p><p>下面我们逐一配置，首先来看下如何配置 loop-lvm 模式。</p><h4 id="配置-loop-lvm-模式" tabindex="-1">配置 loop-lvm 模式 <a class="header-anchor" href="#配置-loop-lvm-模式" aria-label="Permalink to &quot;配置 loop-lvm 模式&quot;">​</a></h4><p>1.使用以下命令停止已经运行的 Docker：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><p>2.编辑 /etc/docker/daemon.json 文件，如果该文件不存在，则创建该文件，并添加以下配置：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;storage-driver&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;devicemapper&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;storage-driver&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;devicemapper&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>3.启动 Docker：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><p>4.验证 Docker 的文件驱动模式：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ docker info</span></span>
<span class="line"><span style="color:#E1E4E8;">Client</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;"> Debug Mode</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">Server</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;"> Containers</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  Running</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Paused</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Stopped</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> Images</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> Server Version</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">19.03</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">12</span></span>
<span class="line"><span style="color:#E1E4E8;"> Storage Driver</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> devicemapper</span></span>
<span class="line"><span style="color:#E1E4E8;">  Pool Name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> docker</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">253</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">423624832</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">pool</span></span>
<span class="line"><span style="color:#E1E4E8;">  Pool Blocksize</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 65.</span><span style="color:#FDAEB7;font-style:italic;">54kB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Base Device Size</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 10.</span><span style="color:#FDAEB7;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Backing Filesystem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> xfs</span></span>
<span class="line"><span style="color:#E1E4E8;">  Udev Sync Supported</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">dev</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">loop0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">dev</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">loop1</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data loop file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">data</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata loop file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">metadata</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Used</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 22.</span><span style="color:#FDAEB7;font-style:italic;">61MB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Total</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 107.</span><span style="color:#FDAEB7;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Available</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 107.</span><span style="color:#FDAEB7;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Used</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 17.</span><span style="color:#FDAEB7;font-style:italic;">37MB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Total</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 2.</span><span style="color:#FDAEB7;font-style:italic;">147GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Available</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 2.</span><span style="color:#FDAEB7;font-style:italic;">13GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Thin Pool Minimum Free Space</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 10.</span><span style="color:#FDAEB7;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Removal Enabled</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Deletion Enabled</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Deleted Device Count</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Library Version</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.02</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">164</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">RHEL7</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">2019</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">08</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">... 省略部分输出</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ docker info</span></span>
<span class="line"><span style="color:#24292E;">Client</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;"> Debug Mode</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">Server</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;"> Containers</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  Running</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Paused</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Stopped</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> Images</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> Server Version</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19.03</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">12</span></span>
<span class="line"><span style="color:#24292E;"> Storage Driver</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> devicemapper</span></span>
<span class="line"><span style="color:#24292E;">  Pool Name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> docker</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">253</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">423624832</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">pool</span></span>
<span class="line"><span style="color:#24292E;">  Pool Blocksize</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 65.</span><span style="color:#B31D28;font-style:italic;">54kB</span></span>
<span class="line"><span style="color:#24292E;">  Base Device Size</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 10.</span><span style="color:#B31D28;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#24292E;">  Backing Filesystem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> xfs</span></span>
<span class="line"><span style="color:#24292E;">  Udev Sync Supported</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Data file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">dev</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">loop0</span></span>
<span class="line"><span style="color:#24292E;">  Metadata file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">dev</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">loop1</span></span>
<span class="line"><span style="color:#24292E;">  Data loop file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">data</span></span>
<span class="line"><span style="color:#24292E;">  Metadata loop file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">metadata</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Used</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 22.</span><span style="color:#B31D28;font-style:italic;">61MB</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Total</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 107.</span><span style="color:#B31D28;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Available</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 107.</span><span style="color:#B31D28;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Used</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 17.</span><span style="color:#B31D28;font-style:italic;">37MB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Total</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 2.</span><span style="color:#B31D28;font-style:italic;">147GB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Available</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 2.</span><span style="color:#B31D28;font-style:italic;">13GB</span></span>
<span class="line"><span style="color:#24292E;">  Thin Pool Minimum Free Space</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 10.</span><span style="color:#B31D28;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Removal Enabled</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Deletion Enabled</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Deleted Device Count</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Library Version</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.02</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">164</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">RHEL7</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">2019</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">08</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">... 省略部分输出</span></span></code></pre></div><p>可以看到 Storage Driver 为 devicemapper，这表示 Docker 已经被配置为 Devicemapper 模式。</p><p>但是这里输出的 Data file 为 /dev/loop0，这表示我们目前在使用的模式为 loop-lvm。但是由于 loop-lvm 性能比较差，因此不推荐在生产环境中使用 loop-lvm 模式。下面我们看下生产环境中应该如何配置 Devicemapper 的 direct-lvm 模式。</p><h4 id="配置-direct-lvm-模式" tabindex="-1">配置 direct-lvm 模式 <a class="header-anchor" href="#配置-direct-lvm-模式" aria-label="Permalink to &quot;配置 direct-lvm 模式&quot;">​</a></h4><p>1.使用以下命令停止已经运行的 Docker：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><p>2.编辑 /etc/docker/daemon.json 文件，如果该文件不存在，则创建该文件，并添加以下配置：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;storage-driver&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;devicemapper&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;storage-opts&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.directlvm_device=/dev/xdf&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.thinp_percent=95&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.thinp_metapercent=1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.thinp_autoextend_threshold=80&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.thinp_autoextend_percent=20&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dm.directlvm_device_force=false&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;storage-driver&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;devicemapper&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;storage-opts&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.directlvm_device=/dev/xdf&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.thinp_percent=95&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.thinp_metapercent=1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.thinp_autoextend_threshold=80&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.thinp_autoextend_percent=20&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dm.directlvm_device_force=false&quot;</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>其中 directlvm_device 指定需要用作 Docker 存储的磁盘路径，Docker 会动态为我们创建对应的存储池。例如这里我想把 /dev/xdf 设备作为我的 Docker 存储盘，directlvm_device 则配置为 /dev/xdf。</p><p>3.启动 Docker：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><p>4.验证 Docker 的文件驱动模式：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ docker info</span></span>
<span class="line"><span style="color:#E1E4E8;">Client</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;"> Debug Mode</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">Server</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;"> Containers</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  Running</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Paused</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Stopped</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> Images</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> Server Version</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">19.03</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">12</span></span>
<span class="line"><span style="color:#E1E4E8;"> Storage Driver</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> devicemapper</span></span>
<span class="line"><span style="color:#E1E4E8;">  Pool Name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> docker</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">thinpool</span></span>
<span class="line"><span style="color:#E1E4E8;">  Pool Blocksize</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 65.</span><span style="color:#FDAEB7;font-style:italic;">54kB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Base Device Size</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 10.</span><span style="color:#FDAEB7;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Backing Filesystem</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> xfs</span></span>
<span class="line"><span style="color:#E1E4E8;">  Udev Sync Supported</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data file</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata file</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data loop file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">data</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata loop file</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">docker</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">devicemapper</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">metadata</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Used</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 22.</span><span style="color:#FDAEB7;font-style:italic;">61MB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Total</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 107.</span><span style="color:#FDAEB7;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Data Space Available</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 107.</span><span style="color:#FDAEB7;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Used</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 17.</span><span style="color:#FDAEB7;font-style:italic;">37MB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Total</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 2.</span><span style="color:#FDAEB7;font-style:italic;">147GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Metadata Space Available</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 2.</span><span style="color:#FDAEB7;font-style:italic;">13GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Thin Pool Minimum Free Space</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 10.</span><span style="color:#FDAEB7;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Removal Enabled</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Deletion Enabled</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  Deferred Deleted Device Count</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">  Library Version</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.02</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">164</span><span style="color:#F97583;">-</span><span style="color:#B392F0;">RHEL7</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">2019</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">08</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">... 省略部分输出</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ docker info</span></span>
<span class="line"><span style="color:#24292E;">Client</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;"> Debug Mode</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">Server</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;"> Containers</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  Running</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Paused</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Stopped</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> Images</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> Server Version</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">19.03</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">12</span></span>
<span class="line"><span style="color:#24292E;"> Storage Driver</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> devicemapper</span></span>
<span class="line"><span style="color:#24292E;">  Pool Name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> docker</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">thinpool</span></span>
<span class="line"><span style="color:#24292E;">  Pool Blocksize</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 65.</span><span style="color:#B31D28;font-style:italic;">54kB</span></span>
<span class="line"><span style="color:#24292E;">  Base Device Size</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 10.</span><span style="color:#B31D28;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#24292E;">  Backing Filesystem</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> xfs</span></span>
<span class="line"><span style="color:#24292E;">  Udev Sync Supported</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Data file</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  Metadata file</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">  Data loop file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">data</span></span>
<span class="line"><span style="color:#24292E;">  Metadata loop file</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">docker</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">devicemapper</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">metadata</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Used</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 22.</span><span style="color:#B31D28;font-style:italic;">61MB</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Total</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 107.</span><span style="color:#B31D28;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#24292E;">  Data Space Available</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 107.</span><span style="color:#B31D28;font-style:italic;">4GB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Used</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 17.</span><span style="color:#B31D28;font-style:italic;">37MB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Total</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 2.</span><span style="color:#B31D28;font-style:italic;">147GB</span></span>
<span class="line"><span style="color:#24292E;">  Metadata Space Available</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 2.</span><span style="color:#B31D28;font-style:italic;">13GB</span></span>
<span class="line"><span style="color:#24292E;">  Thin Pool Minimum Free Space</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 10.</span><span style="color:#B31D28;font-style:italic;">74GB</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Removal Enabled</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Deletion Enabled</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  Deferred Deleted Device Count</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">  Library Version</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.02</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">164</span><span style="color:#D73A49;">-</span><span style="color:#6F42C1;">RHEL7</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">2019</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">08</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">... 省略部分输出</span></span></code></pre></div><p>当我们看到 Storage Driver 为 devicemapper，并且 Pool Name 为 docker-thinpool 时，这表示 Devicemapper 的 direct-lvm 模式已经配置成功。</p><h3 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h3><p>Devicemapper 使用块设备来存储文件，运行速度会比直接操作文件系统更快，因此很长一段时间内在 Red Hat 或 CentOS 系统中，Devicemapper 一直作为 Docker 默认的联合文件系统驱动，为 Docker 在 Red Hat 或 CentOS 稳定运行提供强有力的保障。</p><p>那么你知道使用 Devicemapper 作为 Docker 联合文件系统的一种解方案是哪家公司在推动吗？ 思考后，可以把你的想法写在留言区。</p><p>下一课时，我将讲解 Docker 的另一个文件存储驱动：OverlayFS 文件系统原理及生产环境的最佳配置。</p>`,32);function i(d,F,D,v,m,u){const a=o("Image");return e(),t("div",null,[r,n(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5E/87/CgqCHl-GyFOAG6TPAACE_8cMjoQ585.png"}),p(),E,n(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5E/87/CgqCHl-GyHeAX_zKAABoNW4U26c205.png"}),p(),y])}const h=l(c,[["render",i]]);export{A as __pageData,h as default};
