import{_ as l,j as o,o as t,g as c,k as e,h as n,s,Q as p}from"./chunks/framework.4e7d56ce.js";const $=JSON.parse('{"title":"第26讲：trace-receiver插件拆解，Trace蕴含的宝贵信息（下）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1744) 第26讲：trace-receiver 插件拆解，Trace 蕴含的宝贵信息（下）.md","filePath":"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1744) 第26讲：trace-receiver 插件拆解，Trace 蕴含的宝贵信息（下）.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/098-讲带你搞懂 SkyWalking文档/(1744) 第26讲：trace-receiver 插件拆解，Trace 蕴含的宝贵信息（下）.md"},E=s("h1",{id:"第26讲-trace-receiver插件拆解-trace蕴含的宝贵信息-下",tabindex:"-1"},[n("第26讲：trace-receiver插件拆解，Trace蕴含的宝贵信息（下） "),s("a",{class:"header-anchor",href:"#第26讲-trace-receiver插件拆解-trace蕴含的宝贵信息-下","aria-label":'Permalink to "第26讲：trace-receiver插件拆解，Trace蕴含的宝贵信息（下）"'},"​")],-1),y=s("h3",{id:"multiscopesspanlistener",tabindex:"-1"},[n("MultiScopesSpanListener "),s("a",{class:"header-anchor",href:"#multiscopesspanlistener","aria-label":'Permalink to "MultiScopesSpanListener"'},"​")],-1),i=s("p",null,"接下来重点分析 MultiScopesSpanListener 这条支线对 TraceSegment 数据的处理。MultiScopesSpanListener 继承了 GlobalTraceIdsListener、ExitSpanListener、EntrySpanListener 三个接口，如下图所示：",-1),d=p("",21),u=s("p",null,"AllDispatcher 会将一个 All 对象转换成多个 AllP*Metrics 对象，如下图所示：",-1),F=s("p",null,"前文提到，Metrics 抽象类是所有监控类的父类，其中只记录了该监控数据所在的分钟级窗口（timeBucket 字段）， 前面介绍的 JVM 相关的监控类涉及 SumMetrics 和 LongAvgMetrics 两个抽象类，分别用于计算 sum 值和平均值，具体的分析不再展开。",-1),v=s("p",null,"这里的 AllP*Metrics 继承了PxxMetrics 抽象类，如下图所示，而 PxxMetrics 也继承了 Metrics 抽象类。",-1),g=p("",6),A=s("p",null,"假设此时的一个 AllP90Metrics 对象通过 combine() 方法合并另一个监控数据（latency=850ms, precision=10）时，会先进行降精度得到 index=85，然后在 detailIndex 集合中未查找到对应的元素，最后新建 IntKeyLongValue 并记录到 detailIndex 和 detailGroup 集合，如下图所示：",-1),S=s("p",null,"接下来又收到一个监控数据（latency=300ms, precision=10），在通过 combine() 方法合并时，detailIndex.get(300/10) 可以查找到对应的 IntKeyLongValue 元素，直接递增其 value 即可，如下图所示：",-1),D=p("",4),I=p("",9),C=p("",6),m=s("p",null,"ServiceP* Metrics 与前面介绍的 AllP* Metrics 类似，也继承了 PxxMetrics 抽象类，如下图所示：",-1),B=p("",5),_=p("",6),h=s("p",null,"在 PercentMetrics 中的 total 字段（long 类型）记录了请求总量，match 字段（long 类型）记录了正常请求（EntrySpan.isError = true）的总量，combine() 方法合并两个 PercentMetrics 时，实际上是累加这两个字段。 percentage 字段记录了 match *10000 / total 的结果值（即 sla 值，该运算在 calculate() 方法中完成）。",-1),M=s("p",null,"ServiceSlaMetrics 对应的 Index 名称以及其中 Document Id 的格式与前面介绍的 ServiceCpmMetrics 类似，这里不再重复。",-1),b=s("p",null,"Service 相关的最后一个监控指标是 ServiceRespTimeMetrics ，用于统计 Service 的响应时间。ServiceRespTimeMetrics 与前面介绍的 InstanceJvmOldGcTimeMetrics 基本类似，继承了 LongAvgMetrics，其中记录了一个 Service 在一个时间窗口内的总耗时（summation 字段）以及请求个数（count，即监控点的个数），并计算平均值（value = summation / count）作为 Service 响应耗时。",-1),k=s("p",null,"ServiceRespTimeMetrics 对应的 Index 名称以及其中 Document Id 的格式与前面介绍的 ServiceCpmMetrics 类似，这里不再重复。",-1),P=s("h3",{id:"serviceinstance-相关指标",tabindex:"-1"},[n("ServiceInstance 相关指标 "),s("a",{class:"header-anchor",href:"#serviceinstance-相关指标","aria-label":'Permalink to "ServiceInstance 相关指标"'},"​")],-1),f=s("p",null,"这里 ServiceInstance 相关的有 ServiceInstanceSlaMetrics、ServiceInstanceRespTimeMetrics、ServiceInstanceCpmMetrics 三个指标，它们分别从 Sla、响应时间（Response Time）以及每分钟请求数（Cpm）三个角度去衡量一个 ServiceInstance。",-1),T=s("p",null,"这三种指标的计算方式在前面的 Service 相关指标小节已经详细介绍过了，这里不再重复。需要注意的是 Index 名称的变化，以及 Document Id 的变化（由 InstanceId + timebucket 两部分构成）。",-1),x=s("h3",{id:"endpoint-相关指标",tabindex:"-1"},[n("Endpoint 相关指标 "),s("a",{class:"header-anchor",href:"#endpoint-相关指标","aria-label":'Permalink to "Endpoint 相关指标"'},"​")],-1),q=s("p",null,"这里 Endpoint 相关的有 EndpointSlaMetrics、EndpointAvgMetrics、EndpointCpmMetrics、EndpointP*Metrics 四类指标，它们分别从 Sla、平均响应时间、每分钟请求数（Cpm）以及多个分位数四个角度去衡量一个 Endpoint。",-1),R=s("p",null,"这些指标的相关实现不再展开分析，上述 Endpoint 指标对应的 Document 中，除了记录对应监控数据本身，还会记录关联的 serviceId 和 serviceInstanceId。",-1),G=s("h3",{id:"relation-指标",tabindex:"-1"},[n("Relation 指标 "),s("a",{class:"header-anchor",href:"#relation-指标","aria-label":'Permalink to "Relation 指标"'},"​")],-1),N=s("p",null,"entrySourceBuilders 中的 SourceBuilder 对象会生成三个 Relation 类型的 Source 对象，Relation 表示的某种调用关系，例如：一个 ServiceRelation 对象记录了某两个 Service 之间的调用关系，一个 ServiceInstanceRelation 对象记录了某两个 ServiceInstance 之间的调用关系，一个 EndpointRelation 对象记录了某两个 Endpoint 之间的调用关系。",-1),V=s("p",null,"本课时将以 ServiceRelation 为例介绍 Relation 相关的指标，下图按照指标生成的位置分成了 Server 端和 Client 端两类：",-1),L=s("p",null,"其中，Server 类型指标产生的位置对应被调用系统（接收请求者）的 EntrySpan，而 Client 类型指标产生位置对应调用系统（发起请求者）的 ExitSpan，大致如下图所示：",-1),K=p("",9),w=p("",4);function j(O,H,W,U,Q,J){const a=o("Image");return t(),c("div",null,[E,y,i,e(a,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C8/Ciqc1F7fR2GAbKuNAABGmRcouQo855.png"}),n(),d,e(a,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR4CAWJP2AAQ7w0mOVog425.png"}),n(),u,e(a,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR4eAUSGvAAIzGoF5axs249.png"}),n(),F,v,e(a,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D4/CgqCHl7fR5KAF9wYAAI4moSl37k284.png"}),n(),g,e(a,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D4/CgqCHl7fR5yAewjnAADQAPU9JCQ196.png"}),n(),A,e(a,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR6aAcH_jAALKBr8ccz8545.png"}),n(),S,e(a,{alt:"Drawing 12.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR62ANtWZAAJLuUbjfPw407.png"}),n(),D,e(a,{alt:"Drawing 13.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR8GARLdiAAEbWCXQjI0237.png"}),n(),I,e(a,{alt:"Drawing 14.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D5/CgqCHl7fR8uAUZkXAAAyr8M-ZaI851.png"}),n(),C,e(a,{alt:"Drawing 15.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR9aAdAr3AAIOl5wa4Bo103.png"}),n(),e(a,{alt:"Drawing 16.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR92AfwMGAAAARmu_22A208.png"}),n(),m,e(a,{alt:"Drawing 17.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR-eAO-uWAAJvFQm4-p0823.png"}),n(),B,e(a,{alt:"Drawing 18.png",src:"https://s0.lgstatic.com/i/image/M00/1B/C9/Ciqc1F7fR_WAHPZxAAB7CBwbRyA669.png"}),n(),_,e(a,{alt:"Drawing 19.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D5/CgqCHl7fSACAK908AAAARmu_22A884.png"}),n(),e(a,{alt:"Drawing 20.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D5/CgqCHl7fSAqAI_LVAAE9CtYG6Z8919.png"}),n(),h,M,b,k,P,f,e(a,{alt:"Drawing 21.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D5/CgqCHl7fSBSADOVYAADp1oyXZNI781.png"}),n(),T,x,q,e(a,{alt:"Drawing 22.png",src:"https://s0.lgstatic.com/i/image/M00/1B/CA/Ciqc1F7fSCeAeOOCAADZWpkOhmE460.png"}),n(),R,G,N,V,e(a,{alt:"Drawing 23.png",src:"https://s0.lgstatic.com/i/image/M00/1B/CA/Ciqc1F7fSDCAdW4GAAKBRnkhCFc134.png"}),n(),L,e(a,{alt:"Drawing 24.png",src:"https://s0.lgstatic.com/i/image/M00/1B/CA/Ciqc1F7fSDeAAHV4AAAARmu_22A770.png"}),n(),e(a,{alt:"Drawing 25.png",src:"https://s0.lgstatic.com/i/image/M00/1B/CA/Ciqc1F7fSD6AbkzBAAEoxUOvcbE477.png"}),n(),K,e(a,{alt:"Drawing 26.png",src:"https://s0.lgstatic.com/i/image/M00/1B/D5/CgqCHl7fSEeAUq1LAAB7wN6gSQQ910.png"}),n(),w])}const z=l(r,[["render",j]]);export{$ as __pageData,z as default};
