import{_ as s,j as i,o as r,g as e,k as p,h as n,Q as a,s as t}from"./chunks/framework.a0d18f64.js";const k=JSON.parse('{"title":"02组合思维：Unix哲学到底给现代编程带来哪些重要启示？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6863) 02  组合思维：Unix 哲学到底给现代编程带来哪些重要启示？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6863) 02  组合思维：Unix 哲学到底给现代编程带来哪些重要启示？.md","lastUpdated":1696682708000}'),_={name:"posts/backEnd/趣学设计模式_文档/(6863) 02  组合思维：Unix 哲学到底给现代编程带来哪些重要启示？.md"},l=a("",13),g=a("",18),u=a("",30),x=t("p",null,"总体来说，Unix 哲学对今天的软件编程依然很有意义，它不只是为我们总结了几个原则，而且还发展出了一套完整的思想体系，影响着一代又一代的开发人员。",-1),c=t("h3",{id:"课后思考",tabindex:"-1"},[n("课后思考 "),t("a",{class:"header-anchor",href:"#课后思考","aria-label":'Permalink to "课后思考"'},"​")],-1),h=t("p",null,"Unix 刚诞生时，便决定舍弃高效率而选择可移植性，那你知道还有哪些技术选择了兼容性而牺牲了性能，最后却在如今这个时代里大放异彩的吗？欢迎你在留言区与我分享。",-1),d=t("p",null,"在下一讲，我会接着和你分享代码分层架构相关的内容，这是分层思维很好的一个实践，记得按时来听课。",-1);function q(U,m,b,P,A,C){const o=i("Image");return r(),e("div",null,[l,p(o,{alt:"设计模式02--金句1.png",src:"https://s0.lgstatic.com/i/image6/M01/1E/00/Cgp9HWBQSM-APnNuAAXveH1cdCo784.png"}),n(),g,p(o,{alt:"设计模式02--金句2.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/00/Cgp9HWBQSOGAFV3nAAX-MyKrlN0182.png"}),n(),u,p(o,{alt:"设计模式02--金句3.png",src:"https://s0.lgstatic.com/i/image6/M00/1E/00/Cgp9HWBQSPKAdZGeAAXzS7kcR0Y570.png"}),n(),x,c,h,d])}const S=s(_,[["render",q]]);export{k as __pageData,S as default};
