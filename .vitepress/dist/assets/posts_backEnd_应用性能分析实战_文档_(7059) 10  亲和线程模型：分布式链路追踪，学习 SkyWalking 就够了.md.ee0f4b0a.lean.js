import{_ as p,j as e,o as t,g as r,k as o,h as a,Q as l,s}from"./chunks/framework.4e7d56ce.js";const W=JSON.parse('{"title":"10亲和线程模型：分布式链路追踪，学习SkyWalking就够了","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/应用性能分析实战_文档/(7059) 10  亲和线程模型：分布式链路追踪，学习 SkyWalking 就够了.md","filePath":"posts/backEnd/应用性能分析实战_文档/(7059) 10  亲和线程模型：分布式链路追踪，学习 SkyWalking 就够了.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/应用性能分析实战_文档/(7059) 10  亲和线程模型：分布式链路追踪，学习 SkyWalking 就够了.md"},i=l("",12),g=l("",33),y=l("",16),k=s("p",null,[a("因为任务线程才是真正执行业务代码的载体，所以 SkyWalking 的"),s("strong",null,"线程监控模型就是监控任务线程的生命周期"),a("。")],-1),E=s("p",null,"之后我们讲述了 1.任务线程生命周期中的开始监控 2.任务线程执行中的监控 3.结束监控。以及在这三个重要监控环节中，SkyWalking 是如何实现无侵入监控的。最后我们又结合了一个线程池监控实例，认识到线程监控模型并正确配置监控的重要性。",-1),u=s("p",null,"那么你在工作中使用 SkyWalking 时，遇到过内存泄漏问题吗？你又是怎么解决的？欢迎你在评论区分享你的案例故事，期待与你讨论。",-1);function _(d,h,T,b,S,m){const n=e("Image");return t(),r("div",null,[i,o(n,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M00/3B/17/CioPOWCCfBaAax6SAAKau0ImkMw950.png"}),a(),g,o(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/3B/0F/Cgp9HWCCfCmAQ6J-AAKau0ImkMw629.png"}),a(),y,o(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/3B/0F/Cgp9HWCCfDaAEbuYAAKau0ImkMw690.png"}),a(),k,E,u])}const A=p(c,[["render",_]]);export{W as __pageData,A as default};
