import{_ as o,j as t,o as e,g as c,k as p,h as a,s,Q as l}from"./chunks/framework.b3d8e22e.js";const _=JSON.parse('{"title":"JDBC 规范与 Spring Data ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring 响应式编程实战_文档/(6999) 17  R2DBC：关系型数据库能具备响应式数据访问特性吗？.md","filePath":"posts/backEnd/Spring 响应式编程实战_文档/(6999) 17  R2DBC：关系型数据库能具备响应式数据访问特性吗？.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/Spring 响应式编程实战_文档/(6999) 17  R2DBC：关系型数据库能具备响应式数据访问特性吗？.md"},E=s("p",null,'在"14 | 响应式全栈：响应式编程能为数据访问过程带来什么样的变化"中我们提到了全栈响应式编程的概念，知道了数据访问层同样需要处理响应式场景。而在日常开发过程中被广泛采用的关系型数据库，采用的都是非响应式的数据访问机制。那么，关系型数据库能否具备响应式数据访问特性呢？这就是这一讲将要探讨的话题。',-1),y=s("h3",{id:"jdbc-规范与-spring-data",tabindex:"-1"},[a("JDBC 规范与 Spring Data "),s("a",{class:"header-anchor",href:"#jdbc-规范与-spring-data","aria-label":'Permalink to "JDBC 规范与 Spring Data"'},"​")],-1),i=s("p",null,"在讨论如何让关系型数据访问也能具备响应式特性之前，我们有必要回顾一下 Java 领域中使用最广泛的 JDBC 规范，以及 Spring Data 中包含的实现方案。",-1),d=s("h4",{id:"阻塞式-jdbc",tabindex:"-1"},[a("阻塞式 JDBC "),s("a",{class:"header-anchor",href:"#阻塞式-jdbc","aria-label":'Permalink to "阻塞式 JDBC"'},"​")],-1),g=s("p",null,"JDBC 是 Java DataBase Connectivity 的全称，它的设计初衷是提供一套能够应用于各种数据库的统一标准。而不同的数据库厂家共同遵守这套标准，并提供各自的实现方案供应用程序调用。作为统一标准，JDBC 规范具有完整的架构体系，如下所示。",-1),u=l("",12),A=l("",7),D=l("",33);function C(F,b,B,R,h,v){const n=t("Image");return e(),c("div",null,[E,y,i,d,g,p(n,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M00/3A/92/CioPOWB_7m6ATPDOAAC6qJ6NFjY094.png"}),a(),u,p(n,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M00/3A/89/Cgp9HWB_7mKABH4JAACvK4xBoeQ240.png"}),a(),A,p(n,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image6/M00/3A/92/CioPOWB_7leAU1vHAADmOWkELiQ045.png"}),a(),D])}const m=o(r,[["render",C]]);export{_ as __pageData,m as default};
