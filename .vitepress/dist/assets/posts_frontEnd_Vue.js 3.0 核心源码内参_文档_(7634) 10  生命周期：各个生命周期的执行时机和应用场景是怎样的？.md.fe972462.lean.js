import{_ as a,D as p,o as l,g as o,J as e,h as t,Q as c,m as s}from"./chunks/framework.f67d7268.js";const k=JSON.parse('{"title":"10生命周期：各个生命周期的执行时机和应用场景是怎样的？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7634) 10  生命周期：各个生命周期的执行时机和应用场景是怎样的？.md","filePath":"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7634) 10  生命周期：各个生命周期的执行时机和应用场景是怎样的？.md","lastUpdated":1696682708000}'),r={name:"posts/frontEnd/Vue.js 3.0 核心源码内参_文档/(7634) 10  生命周期：各个生命周期的执行时机和应用场景是怎样的？.md"},E=c("",91),y=s("p",null,"Vue.js 3.0 还有 2 个生命周期 API，分别是 onActivated 和 onDeactivated，我们将会在介绍 KeepAlive 组件时详细分析。",-1),i=s("p",null,"最后，给你留一道思考题目，如果你想在路由组件切换的时候，取消组件正在发送的异步 Ajax 请求，那你应该在哪个生命周期写这个逻辑呢？欢迎你在留言区与我分享。",-1),d=s("blockquote",null,[s("p",null,[s("strong",null,"本节课的相关代码在源代码中的位置如下：")]),s("p",null,"packages/runtime-core/src/apiLifecycle.ts"),s("p",null,"packages/runtime-core/src/renderer.ts"),s("p",null,"packages/reactivity/src/effect.ts")],-1);function u(F,f,g,D,A,h){const n=p("Image");return l(),o("div",null,[E,e(n,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/40/C1/Ciqc1F8zkvmAR_QpAAJxUtKU_4s942.png"}),t(),y,i,d])}const m=a(r,[["render",u]]);export{k as __pageData,m as default};
