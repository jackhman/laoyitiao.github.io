import{_ as o,j as e,o as t,h as r,k as l,f as a,s,Q as p}from"./chunks/framework.d3daa342.js";const A=JSON.parse('{"title":"12HelmChart：如何在生产环境中释放部署生产力？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4529) 12  Helm Chart：如何在生产环境中释放部署生产力？.md","filePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4529) 12  Helm Chart：如何在生产环境中释放部署生产力？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4529) 12  Helm Chart：如何在生产环境中释放部署生产力？.md"},y=s("h1",{id:"_12helmchart-如何在生产环境中释放部署生产力",tabindex:"-1"},[a("12HelmChart：如何在生产环境中释放部署生产力？ "),s("a",{class:"header-anchor",href:"#_12helmchart-如何在生产环境中释放部署生产力","aria-label":'Permalink to "12HelmChart：如何在生产环境中释放部署生产力？"'},"​")],-1),E=s("p",null,"通过前面的课程，相信你对 Kubernetes 中的对象有了很多了解。Kubernetes 是一个强大的容器调度系统，你可以通过一些声明式的定义，很方便地在 Kubernetes 中部署业务。",-1),i=s("p",null,"现在你一定很想尝试在 Kubernetes 中部署一个稍微复杂的系统，比如下面这个典型的三层架构：前端、后端和数据层。",-1),F=p(`<p>（<a href="https://docs.bitnami.com/tutorials/_next/static/images/three-tier-kubernetes-architecture-28861dab09dbb6c2dd6ddb986f3a42d4.png.webp" target="_blank" rel="noreferrer">https://docs.bitnami.com/tutorials/_next/static/images/three-tier-kubernetes-architecture-28861dab09dbb6c2dd6ddb986f3a42d4.png.webp</a>）</p><p>也许你内心里已经开始跃跃欲试，但是转念一想，事情好像没那么简单啊。你感觉到这里面要写一堆的 YAML 文件，每一层架构都至少要写 2 个 YAML 文件，写的时候还需要理解各种对象、注意各种缩进的层级关系、还要设置一堆配置参数等。这对于刚接触 Kubernetes 的人来说是一个很高的门槛，简直无法跨越。同时，对于业务交付的同学，也将是一个大灾难，因为如果缺少任何一个 YAML 文件，都会导致整个系统无法正常工作。</p><p>看到这里，你也许会想到能不能通过一种包的方式进行管理呢，类似于 Node.js 通过 npm 来管理包，Debian 系统通过 dpkg 来管理包，而 Python 通过 pip 来管理包。</p><p>那么在 Kubernetes 中， 这个答案就是<strong>Helm</strong>。</p><p>Helm 降低了使用 Kubernetes 的门槛，你无须从头开始编写应用部署文件，甚至都不需要了解 Kubernetes 中的各个对象以及相应的 YAML 语义。直接通过 Helm 就可以在自己的 Kubernetes 中一键部署需要的应用。</p><p>对于开发者而言，通过 Helm 进行打包，管理应用内部的各种依赖关系，极其方便。并且可以借助于版本化的概念，方便自身的迭代和分发。除此之外，Helm 还有一些其他强大的功能，请跟我一起开始今天 Helm 的学习之旅。</p><p>作为 CNCF 社区官方的项目，Helm 在今年四月份已经宣布毕业，这进一步彰显了 Helm 的市场接受度、生产环境采用率以及技术影响力。</p><p>我们先来理解下 Helm 中几个重要的概念。</p><h3 id="helm-中的几个概念" tabindex="-1">Helm 中的几个概念 <a class="header-anchor" href="#helm-中的几个概念" aria-label="Permalink to &quot;Helm 中的几个概念&quot;">​</a></h3><p>在 Helm 中，有三个非常核心的概念------ Chart、Config 和 Release。</p><p><strong>Chart 可以理解成应用的安装包</strong> ，<strong>通常包含了一组我们在 Kubernetes 要部署的 YAML 文件</strong>。一个 Chart 就是一个目录，我们可以将这个目录进行压缩打包，比如打包成 some-chart-version.tgz 类型的压缩文件，方便传输和存储。</p><p>每个这样的 Chart 包内都必须有一个 Chart.yaml 文件，类似这样：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">redis</span></span>
<span class="line"><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">11.0.0</span></span>
<span class="line"><span style="color:#85E89D;">appVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">6.0.8</span></span>
<span class="line"><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.</span></span>
<span class="line"><span style="color:#85E89D;">keywords</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">redis</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">keyvalue</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">database</span></span>
<span class="line"><span style="color:#85E89D;">home</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">https://github.com/bitnami/charts/tree/master/bitnami/redis</span></span>
<span class="line"><span style="color:#85E89D;">icon</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png</span></span>
<span class="line"><span style="color:#85E89D;">sources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">https://github.com/bitnami/bitnami-docker-redis</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">http://redis.io/</span></span>
<span class="line"><span style="color:#85E89D;">maintainers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Bitnami</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">email</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">containers@bitnami.com</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">desaintmartin</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">email</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">cedric@desaintmartin.fr</span></span>
<span class="line"><span style="color:#85E89D;">engine</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gotpl</span></span>
<span class="line"><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">category</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Database</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">redis</span></span>
<span class="line"><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">11.0.0</span></span>
<span class="line"><span style="color:#22863A;">appVersion</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">6.0.8</span></span>
<span class="line"><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.</span></span>
<span class="line"><span style="color:#22863A;">keywords</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">redis</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">keyvalue</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">database</span></span>
<span class="line"><span style="color:#22863A;">home</span><span style="color:#24292E;">: </span><span style="color:#032F62;">https://github.com/bitnami/charts/tree/master/bitnami/redis</span></span>
<span class="line"><span style="color:#22863A;">icon</span><span style="color:#24292E;">: </span><span style="color:#032F62;">https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png</span></span>
<span class="line"><span style="color:#22863A;">sources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">https://github.com/bitnami/bitnami-docker-redis</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">http://redis.io/</span></span>
<span class="line"><span style="color:#22863A;">maintainers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Bitnami</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">email</span><span style="color:#24292E;">: </span><span style="color:#032F62;">containers@bitnami.com</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">desaintmartin</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">email</span><span style="color:#24292E;">: </span><span style="color:#032F62;">cedric@desaintmartin.fr</span></span>
<span class="line"><span style="color:#22863A;">engine</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gotpl</span></span>
<span class="line"><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">category</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Database</span></span></code></pre></div><p>这个 Chart.yaml 主要用来描述该 Chart 的名字、版本号，以及关键字等信息。</p><p>有了这个 Chart，我们就可以在 Kubernetes集群中部署了。每一次的安装部署，我们称为一个 Release。在同一个 Kubernetes 集群中，可以有多个 Release。你可以将 Release 理解成是 Chart 包部署后的一个 Chart（应用）实例。</p><blockquote><p>注： 这个 Release 和我们通常概念中理解的&quot;版本&quot;有些差异。</p></blockquote><p>同时，为了能够让 Chart 实现参数可配置，即 Config，<strong>我们在每个 Chart 包内还有一个 values.yaml 文件</strong> ，<strong>用来记录可配置的参数和其默认值</strong>。在每个 Release 中，我们也可以指定自己的 values.yaml 文件用来覆盖默认的配置。</p><p>此外，我们还需要统一存放这些 Chart，即 Repository（仓库）。这个概念和我们以前的 yum repo 是一样的。本质上来说，<strong>Repository 就是一个 Web 服务器</strong> ，<strong>不仅保存了一系列的 Chart 软件包让用户下载安装使用</strong> ，<strong>还有对应的清单文件以供查询</strong>。</p><p>通过 Helm，我们可以同时使用和管理多个不同的 Repository，就像我们可以给 yum 配置多个源一样</p><p>掌握了这些概念，我们现在再拉远视角，整体来看一下。</p><h3 id="helm-的安装及架构组成" tabindex="-1">Helm 的安装及架构组成 <a class="header-anchor" href="#helm-的安装及架构组成" aria-label="Permalink to &quot;Helm 的安装及架构组成&quot;">​</a></h3><p>首先，Helm 的安装非常简单，你可以通过如下的命令安装最新版本的 Helm 可执行文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">bash</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Total</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Received</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Xferd</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Average</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Speed</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Time</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">Time</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Time</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Current</span></span>
<span class="line"><span style="color:#E1E4E8;">                                 </span><span style="color:#B392F0;">Dload</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Upload</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Total</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Spent</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">Left</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Speed</span></span>
<span class="line"><span style="color:#B392F0;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11213</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11213</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">12109</span><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--:--:--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--:--:--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--:--:--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12096</span></span>
<span class="line"><span style="color:#B392F0;">Downloading</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://get.helm.sh/helm-v3.3.1-darwin-amd64.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">Verifying</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checksum...</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Done.</span></span>
<span class="line"><span style="color:#B392F0;">Preparing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">into</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/bin</span></span>
<span class="line"><span style="color:#B392F0;">Password:</span></span>
<span class="line"><span style="color:#B392F0;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">installed</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">into</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/bin/helm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">bash</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Total</span><span style="color:#24292E;">    </span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Received</span><span style="color:#24292E;"> </span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Xferd</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Average</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Speed</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Time</span><span style="color:#24292E;">    </span><span style="color:#032F62;">Time</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Time</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Current</span></span>
<span class="line"><span style="color:#24292E;">                                 </span><span style="color:#6F42C1;">Dload</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Upload</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Total</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Spent</span><span style="color:#24292E;">    </span><span style="color:#032F62;">Left</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Speed</span></span>
<span class="line"><span style="color:#6F42C1;">100</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11213</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11213</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">12109</span><span style="color:#24292E;">      </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--:--:--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--:--:--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--:--:--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12096</span></span>
<span class="line"><span style="color:#6F42C1;">Downloading</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://get.helm.sh/helm-v3.3.1-darwin-amd64.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">Verifying</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checksum...</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Done.</span></span>
<span class="line"><span style="color:#6F42C1;">Preparing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">into</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin</span></span>
<span class="line"><span style="color:#6F42C1;">Password:</span></span>
<span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">installed</span><span style="color:#24292E;"> </span><span style="color:#032F62;">into</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin/helm</span></span></code></pre></div><p>当然你也可以去<a href="https://helm.sh/docs/intro/install/" target="_blank" rel="noreferrer">官方的文档</a>里选择合适自己的安装方式。</p><p>安装完成后，我们来查看下 Helm 的版本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version</span></span>
<span class="line"><span style="color:#B392F0;">version.BuildInfo</span><span style="color:#E1E4E8;">{Version:</span><span style="color:#B392F0;">&quot;v3.3.1&quot;</span><span style="color:#B392F0;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GitCommit:&quot;249e5215cde0c3fa72e27eb7a30e8d55c9696144&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GitTreeState:&quot;clean&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GoVersion:&quot;go1.14.7&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version</span></span>
<span class="line"><span style="color:#6F42C1;">version.BuildInfo</span><span style="color:#24292E;">{Version:</span><span style="color:#6F42C1;">&quot;v3.3.1&quot;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GitCommit:&quot;249e5215cde0c3fa72e27eb7a30e8d55c9696144&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GitTreeState:&quot;clean&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GoVersion:&quot;go1.14.7&quot;}</span></span></code></pre></div><p>可以看到目前我们安装的版本是<code>v3.3.1</code>，这是 Helm 3 的一个版本。</p><p>其实在 Helm 3 之前，还有 Helm 2，目前还有不少人在继续使用 Helm 2 的版本。现在我们来简单了解下 Helm 2 和 Helm 3 。</p><h4 id="helm-2" tabindex="-1">Helm 2 <a class="header-anchor" href="#helm-2" aria-label="Permalink to &quot;Helm 2&quot;">​</a></h4><p>Helm 2 于 2015 年在 KubeCon 上亮相。其架构如下图所示，是个常见的 CS 架构，由 Helm Client 和 Tiller 两部分组成。</p>`,30),h=p(`<p>（<a href="https://medium.com/dwarves-foundation/kubernetes-helm-101-78f70eeb0d1" target="_blank" rel="noreferrer">https://medium.com/dwarves-foundation/kubernetes-helm-101-78f70eeb0d1</a>）</p><p>Tiller 是 Helm 的服务端， 用于接收来自 Helm Client 的请求，主要负责部署 Helm Chart、管理 Release（比如升级、删除、回滚等操作），以及在 Kubernetes 集群中创建应用。TIller 通常部署在 Kubernetes 中，直接通过<code>helm init</code>就可以在 Kuberentes 集群中拉起服务。</p><p>Helm Client 主要负责跟用户进行交互，通过命令行就可以完成 Chart 的安装、升级、删除等操作。Helm Client 可以从公有或者私有的 Helm 仓库中拉取 Chart 包，通过用户指定的 Config，就可以直接传给后端的 Tiller 服务，使之在集群内进行部署。</p><p>这里，我们可以看到 Tiller 在 Helm 2 和 Kubernetes 集群中间其实起到了一个中转的作用，因此 Tiller 实际上是代替用户在 Kubernetes 集群中执行操作，所以 Tiller 在运行中往往需要一个很高的权限。这里 Tiller 存在着两大安全风险：</p><ol><li><p>要对外暴露自身的端口；</p></li><li><p>自身运行过程中，跟 Kubernetes 交互需要很高的权限，这样才可以在 Kuberentes 中创建、删除各种各样的资源。</p></li></ol><p>当然了，之所以有这种架构设计是由于在 Helm 2 开发的时候，Kubernetes 的 RBAC 体系还没有建立完成。Kubernetes 社区直到 2017 年 10 月份 v1.8 版本才默认采用了 RBAC 权限体系。随着 Kubernetes 的各项功能日益完善，主要是 RBAC 能力，Tiller 这个组件存在的必要性进一步降低，社区也在一直想着怎么去解决 TIller 的安全问题。</p><p>我们再来看看 Helm 3。</p><h4 id="helm-3" tabindex="-1">Helm 3 <a class="header-anchor" href="#helm-3" aria-label="Permalink to &quot;Helm 3&quot;">​</a></h4><p>Helm 3 是在 Helm 2 之上的一次大更改，于 2019 年 11 月份正式推出。相比较于 Helm 2， Helm 3 简单了很多，移除了 Tiller，只剩下一个 Helm Client。在使用中，你只需要这一个二进制可执行文件即可，使用你当前用的 kubeconfig 文件，即可在 Kubernetes 集群中部署 Chart、管理 Release。</p><p>至此，Helm 2 开始要退出历史的舞台了。目前 Helm 社区官方也逐步开始暂停维护 Helm 2，最终的 Bugfix 修复截止到今年的 8 月份，版本号是 v2.16.10，而安全相关的 patch 会继续支持，直到 今年的 11 月份。</p><p>如果你还在使用 Helm 2，建议你尽快切换到 Helm 3 上来。Helm 社区也提供了相关的插件，帮助你从 Helm 2 迁移到 Helm 3 中，可以参考这篇 Helm 的<a href="https://helm.sh/docs/topics/v2_v3_migration/" target="_blank" rel="noreferrer">官方迁移文档</a>，这里我就不再赘述了。</p><p>通过这个版本迭代的过程，你应该也清楚了 Helm 的原理，对它更加熟悉了，接下来我们一起动手实践看看。</p><h3 id="如何创建和部署-helm-chart" tabindex="-1">如何创建和部署 Helm Chart <a class="header-anchor" href="#如何创建和部署-helm-chart" aria-label="Permalink to &quot;如何创建和部署 Helm Chart&quot;">​</a></h3><p>创建一个 Chart 很简单，通过<code>helm create</code>的命令就可以创建一个 Chart 模板出来：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello-world</span></span>
<span class="line"><span style="color:#B392F0;">Creating</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello-world</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello-world</span></span>
<span class="line"><span style="color:#6F42C1;">Creating</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello-world</span></span></code></pre></div><p>我们现在来看看这个 Chart 的目录里面有什么：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tree</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./hello-world</span></span>
<span class="line"><span style="color:#B392F0;">./hello-world</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Chart.yaml</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">charts</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">templates</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NOTES.txt</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_helpers.tpl</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deployment.yaml</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hpa.yaml</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ingress.yaml</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">service.yaml</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">serviceaccount.yaml</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">└──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tests</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">└──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-connection.yaml</span></span>
<span class="line"><span style="color:#B392F0;">└──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">values.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">directories,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">files</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tree</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./hello-world</span></span>
<span class="line"><span style="color:#6F42C1;">./hello-world</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Chart.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">charts</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">templates</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NOTES.txt</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_helpers.tpl</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deployment.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hpa.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ingress.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">service.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">serviceaccount.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">└──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tests</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">       </span><span style="color:#032F62;">└──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-connection.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">└──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">values.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">directories,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#032F62;">files</span></span></code></pre></div><p>这里面包含了我们上面讲的 Chart.yaml 和 values.yaml。</p><p>先看看这里 Chart.yaml 的内容：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v2</span></span>
<span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">hello-world</span></span>
<span class="line"><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">A Helm chart for Kubernetes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># A chart can be either an &#39;application&#39; or a &#39;library&#39; chart.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;"># Application charts are a collection of templates that can be packaged into versioned archives</span></span>
<span class="line"><span style="color:#6A737D;"># to be deployed.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;"># Library charts provide useful utilities or functions for the chart developer. They&#39;re included as</span></span>
<span class="line"><span style="color:#6A737D;"># a dependency of application charts to inject those utilities and functions into the rendering</span></span>
<span class="line"><span style="color:#6A737D;"># pipeline. Library charts do not define any templates and therefore cannot be deployed.</span></span>
<span class="line"><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">application</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># This is the chart version. This version number should be incremented each time you make changes</span></span>
<span class="line"><span style="color:#6A737D;"># to the chart and its templates, including the app version.</span></span>
<span class="line"><span style="color:#6A737D;"># Versions are expected to follow Semantic Versioning (https://semver.org/)</span></span>
<span class="line"><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0.1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># This is the version number of the application being deployed. This version number should be</span></span>
<span class="line"><span style="color:#6A737D;"># incremented each time you make changes to the application. Versions are not expected to</span></span>
<span class="line"><span style="color:#6A737D;"># follow Semantic Versioning. They should reflect the version the application is using.</span></span>
<span class="line"><span style="color:#85E89D;">appVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1.16.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v2</span></span>
<span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">hello-world</span></span>
<span class="line"><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">A Helm chart for Kubernetes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># A chart can be either an &#39;application&#39; or a &#39;library&#39; chart.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;"># Application charts are a collection of templates that can be packaged into versioned archives</span></span>
<span class="line"><span style="color:#6A737D;"># to be deployed.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;"># Library charts provide useful utilities or functions for the chart developer. They&#39;re included as</span></span>
<span class="line"><span style="color:#6A737D;"># a dependency of application charts to inject those utilities and functions into the rendering</span></span>
<span class="line"><span style="color:#6A737D;"># pipeline. Library charts do not define any templates and therefore cannot be deployed.</span></span>
<span class="line"><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">application</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># This is the chart version. This version number should be incremented each time you make changes</span></span>
<span class="line"><span style="color:#6A737D;"># to the chart and its templates, including the app version.</span></span>
<span class="line"><span style="color:#6A737D;"># Versions are expected to follow Semantic Versioning (https://semver.org/)</span></span>
<span class="line"><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0.1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># This is the version number of the application being deployed. This version number should be</span></span>
<span class="line"><span style="color:#6A737D;"># incremented each time you make changes to the application. Versions are not expected to</span></span>
<span class="line"><span style="color:#6A737D;"># follow Semantic Versioning. They should reflect the version the application is using.</span></span>
<span class="line"><span style="color:#22863A;">appVersion</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1.16.0</span></span></code></pre></div><p>可以看到，这里 Chart 的名字就是我们 Chart 所在目录的名字。你在使用的时候，就可以在这个文件里面添加 keyword，以及 annotation，方便后续查找和分类。</p><p>values.yaml 里面包含了一些可配置的参数，你可以根据自己的需要进行添加，或者修改默认值等。</p><p>这个目录下面有个<code>charts</code>文件夹，主要用来放置一些子 Chart 包，也可以是 tar 包、 Chart 目录。你可以根据自己的场景，决定需不需要放置子 Chart 包。</p><p>这个目录里面还有个<code>templates</code>文件夹，这个文件夹里面的文件是一些模板文件，Helm 会根据<code>values.yaml</code>的参数进行渲染，然后在 Kubernetes 集群中创建出来。</p><p>你可以根据自己的需要，在这个<code>templates</code>目录下，添加和更改 yaml 文件。</p><p>你这样创建好了一个 Chart 包后，如果想要更改其中一些参数，可以将它们放到其他的文件里面，比如 myvalues.yaml 文件。</p><p>然后通过<code>helm install</code>命令，你就可以在 Kubernetes 集群里面部署 hello-world 这个 Chart 包：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvalues.yaml</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello-world</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./hello-world</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvalues.yaml</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello-world</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./hello-world</span></span></code></pre></div><p>或者，你可以通过添加 Repository 直接使用别人的 Chart，使用<code>helm search</code>来查找自己想要的 Chart：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">repo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">brigade</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://brigadecore.github.io/charts</span></span>
<span class="line"><span style="color:#B392F0;">&quot;brigade&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">has</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">been</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">added</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">your</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">repositories</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">search</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">repo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">brigade</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">                          </span><span style="color:#9ECBFF;">CHART</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">VERSION</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">APP</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">VERSION</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DESCRIPTION</span></span>
<span class="line"><span style="color:#B392F0;">brigade/brigade</span><span style="color:#E1E4E8;">               </span><span style="color:#79B8FF;">1.3</span><span style="color:#9ECBFF;">.2</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">v1.2.1</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Brigade</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">provides</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">event-driven</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scripting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Kube...</span></span>
<span class="line"><span style="color:#B392F0;">brigade/brigade-github-app</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0.4</span><span style="color:#9ECBFF;">.1</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">v0.2.1</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Brigade</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GitHub</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">App,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">an</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">advanced</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gateway</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for...</span></span>
<span class="line"><span style="color:#B392F0;">brigade/brigade-github-oauth</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0.2</span><span style="color:#9ECBFF;">.0</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">v0.20.0</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">legacy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">OAuth</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GitHub</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Gateway</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Brigade</span></span>
<span class="line"><span style="color:#B392F0;">brigade/brigade-k8s-gateway</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0.1</span><span style="color:#9ECBFF;">.0</span><span style="color:#E1E4E8;">                     </span><span style="color:#9ECBFF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Kubernetes</span></span>
<span class="line"><span style="color:#B392F0;">brigade/brigade-project</span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">1.0</span><span style="color:#9ECBFF;">.0</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">v1.0.0</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Brigade</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">project</span></span>
<span class="line"><span style="color:#B392F0;">brigade/kashti</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">0.4</span><span style="color:#9ECBFF;">.0</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">v0.4.0</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Kubernetes</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">brigade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://brigadecore.github.io/charts</span></span>
<span class="line"><span style="color:#6F42C1;">&quot;brigade&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">has</span><span style="color:#24292E;"> </span><span style="color:#032F62;">been</span><span style="color:#24292E;"> </span><span style="color:#032F62;">added</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">your</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repositories</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">search</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">brigade</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">                          </span><span style="color:#032F62;">CHART</span><span style="color:#24292E;"> </span><span style="color:#032F62;">VERSION</span><span style="color:#24292E;"> </span><span style="color:#032F62;">APP</span><span style="color:#24292E;"> </span><span style="color:#032F62;">VERSION</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DESCRIPTION</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/brigade</span><span style="color:#24292E;">               </span><span style="color:#005CC5;">1.3</span><span style="color:#032F62;">.2</span><span style="color:#24292E;">         </span><span style="color:#032F62;">v1.2.1</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Brigade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">provides</span><span style="color:#24292E;"> </span><span style="color:#032F62;">event-driven</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scripting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Kube...</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/brigade-github-app</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">0.4</span><span style="color:#032F62;">.1</span><span style="color:#24292E;">         </span><span style="color:#032F62;">v0.2.1</span><span style="color:#24292E;">      </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Brigade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GitHub</span><span style="color:#24292E;"> </span><span style="color:#032F62;">App,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">an</span><span style="color:#24292E;"> </span><span style="color:#032F62;">advanced</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gateway</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for...</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/brigade-github-oauth</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.2</span><span style="color:#032F62;">.0</span><span style="color:#24292E;">         </span><span style="color:#032F62;">v0.20.0</span><span style="color:#24292E;">     </span><span style="color:#032F62;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">legacy</span><span style="color:#24292E;"> </span><span style="color:#032F62;">OAuth</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GitHub</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Gateway</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Brigade</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/brigade-k8s-gateway</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0.1</span><span style="color:#032F62;">.0</span><span style="color:#24292E;">                     </span><span style="color:#032F62;">A</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">chart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Kubernetes</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/brigade-project</span><span style="color:#24292E;">       </span><span style="color:#005CC5;">1.0</span><span style="color:#032F62;">.0</span><span style="color:#24292E;">         </span><span style="color:#032F62;">v1.0.0</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Brigade</span><span style="color:#24292E;"> </span><span style="color:#032F62;">project</span></span>
<span class="line"><span style="color:#6F42C1;">brigade/kashti</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">0.4</span><span style="color:#032F62;">.0</span><span style="color:#24292E;">         </span><span style="color:#032F62;">v0.4.0</span><span style="color:#24292E;">      </span><span style="color:#032F62;">A</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">chart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Kubernetes</span></span></code></pre></div><p>更多 Helm 的使用命令，可以参考官方的<a href="https://helm.sh/docs/intro/using_helm/" target="_blank" rel="noreferrer">使用文档</a>，使用起来非常简单就不占用篇幅了。</p><h3 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h3><p>目前 Helm 是 CNCF 基金会旗下已经&quot;毕业&quot;的独立的项目。它简化了 Kubernetes 应用的部署和管理，大大提高了效率，越来越多的人在生产环境中使用 Helm 来部署和管理应用，所以我在这里用一个课时来专门讲解它的原理和使用，想让你在使用 Kubernetes 时如虎添翼。</p><p>如果你对本节课有什么想法或者疑问，欢迎你在留言区留言，我们一起讨论。</p>`,34);function d(C,m,B,u,b,g){const n=e("Image");return t(),r("div",null,[y,E,i,l(n,{alt:"image (7).png",src:"https://s0.lgstatic.com/i/image/M00/56/EA/Ciqc1F9sPOKACHGPAADXdRLPJwo750.png"}),a(),F,l(n,{alt:"image (8).png",src:"https://s0.lgstatic.com/i/image/M00/56/F6/CgqCHl9sPQ2AWA7kAAKDpOtvIDk020.png"}),a(),h])}const f=o(c,[["render",d]]);export{A as __pageData,f as default};
