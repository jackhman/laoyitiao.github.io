import{_ as l,j as i,o as u,g as e,k as a,Q as q,s as t}from"./chunks/framework.4e7d56ce.js";const T=JSON.parse('{"title":"背景 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/112-高效敏捷测试文档/(1621) 第36讲：如何将用户故事转化为测试用例？.md","filePath":"posts/devops/112-高效敏捷测试文档/(1621) 第36讲：如何将用户故事转化为测试用例？.md","lastUpdated":1696417798000}'),p={name:"posts/devops/112-高效敏捷测试文档/(1621) 第36讲：如何将用户故事转化为测试用例？.md"},s=q("",21),_=t("p",null,'从图 1，你也可以感受到，如果功能特性做到 100% 覆盖是根本没有意义的。例如，在线教育 App，我们只要设计 5 个测试用例，为"课程发现、账户管理、课程购买、课程学习和课程分享"中每个特性分配一个测试用例，就做到了功能特性 100% 覆盖，但没有丝毫意义。',-1),r=t("p",null,"所以，我们必须将功能特性进行分解，且分解到不能分解为止，我们再设计测试用例覆盖最后一层的测试点，这样的覆盖率数据就有意义了。从特性、用户故事到场景、测试数据的分解过程，在敏捷开发中就很自然、一气呵成，容易高效地完成测试设计。如果做到了 ATDD/BDD，即当我们做好了敏捷的需求工作------在需求上达成共识且具有可测试性，这时只离测试用例只差一步了，而在此基础上，加上测试数据又相对简单，也就是让敏捷测试变成了一项简单的工作，所以在敏捷开发中，我们应尽力去推动 ATDD 或 BDD 的实施。",-1),n=t("p",null,'这一讲就学到这里，你也可以针对在线教育 App 的另一个特性，比如"账户管理"，完成这样测试设计的过程，以巩固本讲所学的内容。',-1);function c(d,h,D,m,A,g){const o=i("Image");return u(),e("div",null,[s,a(o,{alt:"1.jpg",src:"https://s0.lgstatic.com/i/image/M00/0A/0C/Ciqc1F69IwWASmboAAFkl-ipwoE474.jpg"}),_,r,n])}const b=l(p,[["render",c]]);export{T as __pageData,b as default};
