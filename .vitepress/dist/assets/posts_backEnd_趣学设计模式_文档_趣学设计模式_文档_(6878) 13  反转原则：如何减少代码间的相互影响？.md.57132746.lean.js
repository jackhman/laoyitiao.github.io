import{_ as l,j as o,o as r,g as e,k as n,Q as a,s as p,h as t}from"./chunks/framework.b3d8e22e.js";const C=JSON.parse('{"title":"DIP：统一代码交互的标准 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6878) 13  反转原则：如何减少代码间的相互影响？.md","filePath":"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6878) 13  反转原则：如何减少代码间的相互影响？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/趣学设计模式_文档/趣学设计模式_文档/(6878) 13  反转原则：如何减少代码间的相互影响？.md"},E=a("",68),y=a("",8),i=p("p",null,[t("而在理解了反转的真实含义以后，我们在设计时会用到一个重要技巧："),p("strong",null,"要让高层组件拥有定义抽象的权力，而不是把这个权力下放到低层组件。")],-1),g=a("",10);function d(F,D,S,u,A,I){const s=o("Image");return r(),e("div",null,[E,n(s,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M01/39/E9/CioPOWB9L42AFluZAALAjuMeXgA038.png"}),y,n(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M01/39/E0/Cgp9HWB9L5yALzCbAAYTDB-vdCE585.png"}),i,n(s,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M01/39/E9/CioPOWB9L6SAGFxKAAXbIu3_x40713.png"}),g])}const P=l(c,[["render",d]]);export{C as __pageData,P as default};
