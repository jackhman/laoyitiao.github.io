import{_ as c,D as l,o as n,g as p,J as a,h as o,Q as s,m as e}from"./chunks/framework.f67d7268.js";const B=JSON.parse('{"title":"09Linux中的网络指令：如何查看一个域名有哪些NS记录？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/重学操作系统_文档/(4615) 09  Linux 中的网络指令：如何查看一个域名有哪些 NS 记录？.md","filePath":"posts/backEnd/重学操作系统_文档/(4615) 09  Linux 中的网络指令：如何查看一个域名有哪些 NS 记录？.md","lastUpdated":1696682708000}'),i={name:"posts/backEnd/重学操作系统_文档/(4615) 09  Linux 中的网络指令：如何查看一个域名有哪些 NS 记录？.md"},d=s('<h1 id="_09linux中的网络指令-如何查看一个域名有哪些ns记录" tabindex="-1">09Linux中的网络指令：如何查看一个域名有哪些NS记录？ <a class="header-anchor" href="#_09linux中的网络指令-如何查看一个域名有哪些ns记录" aria-label="Permalink to &quot;09Linux中的网络指令：如何查看一个域名有哪些NS记录？&quot;">​</a></h1><p><strong>我看到过一道关于 Linux 指令的面试题：如何查看一个域名有哪些 NS 记录</strong>？</p><p>这类题目是根据一个场景，考察一件具体的事情如何处理。虽然你可以通过查资料找到解决方案，但是，这类问题在面试中还是有必要穿插一下，用于确定求职者技能是否熟练、经验是否丰富。特别是计算机网络相关的指令，平时在远程操作、开发、联调、Debug 线上问题的时候，会经常用到。</p><p>Linux 中提供了不少网络相关的指令，因为网络指令比较分散，本课时会从下面几个维度给你介绍，帮助你梳理常用的网络指令：</p><ul><li><p>远程操作；</p></li><li><p>查看本地网络状态；</p></li><li><p>网络测试；</p></li><li><p>DNS 查询；</p></li><li><p>HTTP。</p></li></ul><p>这块知识从体系上属于 Linux 指令，同时也关联了很多计算机网络的知识，比如说 TCP/IP 协议、UDP 协议，我会在&quot;<strong>模块七</strong>&quot;为你简要介绍。</p><p>如果你对这部分指令背后的网络原理有什么困惑，可以在评论区提问。另外，你也可以关注我将在拉勾教育推出的《<strong>计算机网络</strong>》课程。下面我们开始学习今天的内容。</p><h3 id="远程操作指令" tabindex="-1">远程操作指令 <a class="header-anchor" href="#远程操作指令" aria-label="Permalink to &quot;远程操作指令&quot;">​</a></h3><p>远程操作指令用得最多的是<code>ssh</code>，<code>ssh</code>指令允许远程登录到目标计算机并进行远程操作和管理。还有一个比较常用的远程指令是<code>scp</code>，<code>scp</code>帮助我们远程传送文件。</p><h4 id="ssh-secure-shell" tabindex="-1">ssh（Secure Shell） <a class="header-anchor" href="#ssh-secure-shell" aria-label="Permalink to &quot;ssh（Secure Shell）&quot;">​</a></h4><p>有一种场景需要远程登录一个 Linux 系统，这时我们会用到<code>ssh</code>指令。比如你想远程登录一台机器，可以使用<code>ssh user@ip</code>的方式，如下图所示：</p>',11),r=s("<p>上图中，我在使用<code>ssh</code>指令从机器<code>u1</code>登录我的另一台虚拟机<code>u2</code>。这里<code>u1</code>和<code>u2</code>对应着 IP 地址，是我在<code>/etc/hosts</code>中设置的，如下图所示：</p>",1),_=s('<p><code>/etc/hosts</code>这个文件可以设置 IP 地址对应的域名。我这里是一个小集群，总共有两台机器，因此我设置了方便记忆和操作的名字。</p><h4 id="scp" tabindex="-1">scp <a class="header-anchor" href="#scp" aria-label="Permalink to &quot;scp&quot;">​</a></h4><p>另一种场景是我需要拷贝一个文件到远程，这时可以使用<code>scp</code>指令，如下图，我使用<code>scp</code>指令将本地计算机的一个文件拷贝到了 ubuntu 虚拟机用户的家目录中。</p><p>比如从<code>u1</code>拷贝家目录下的文件<code>a.txt</code>到<code>u2</code>。家目录有一个简写，就是用<code>~</code>。具体指令见下图：</p>',4),h=s('<p>输入 scp 指令之后会弹出一个提示，要求输入密码，系统验证通过后文件会被成功拷贝。</p><h3 id="查看本地网络状态" tabindex="-1">查看本地网络状态 <a class="header-anchor" href="#查看本地网络状态" aria-label="Permalink to &quot;查看本地网络状态&quot;">​</a></h3><p>如果你想要了解本地的网络状态，比较常用的网络指令是<code>ifconfig</code>和<code>netstat</code>。</p><h4 id="ifconfig" tabindex="-1">ifconfig <a class="header-anchor" href="#ifconfig" aria-label="Permalink to &quot;ifconfig&quot;">​</a></h4><p>当你想知道本地<code>ip</code>以及本地有哪些网络接口时，就可以使用<code>ifconfig</code>指令。你可以把一个网络接口理解成一个网卡，有时候虚拟机会装虚拟网卡，虚拟网卡是用软件模拟的网卡。</p><p>比如：VMware 为每个虚拟机创造一个虚拟网卡，通过虚拟网卡接入虚拟网络。当然物理机也可以接入虚拟网络，它可以通过虚拟网络向虚拟机的虚拟网卡上发送信息。</p><p>下图是我的 ubuntu 虚拟机用 ifconfig 查看网络接口信息。</p>',7),g=s('<p>可以看到我的这台 ubuntu 虚拟机一共有 2 个网卡，ens33 和 lo。<code>lo</code>是本地回路（local lookback），发送给<code>lo</code>就相当于发送给本机。<code>ens33</code>是一块连接着真实网络的虚拟网卡。</p><h4 id="netstat" tabindex="-1">netstat <a class="header-anchor" href="#netstat" aria-label="Permalink to &quot;netstat&quot;">​</a></h4><p>另一个查看网络状态的场景是想看目前本机的网络使用情况，这个时候可以用<code>netstat</code>。</p><p><strong>默认行为</strong></p><p>不传任何参数的<code>netstat</code>帮助查询所有的本地 socket，下图是<code>netstat | less</code>的结果。</p>',5),u=e("p",null,[o("如上图，我们看到的是 socket 文件。socket 是网络插槽被抽象成了文件，负责在客户端、服务器之间收发数据。当客户端和服务端发生连接时，客户端和服务端会同时各自生成一个 socket 文件，用于管理这个连接。这里，可以用"),e("code",null,"wc -l"),o("数一下有多少个"),e("code",null,"socket"),o("。")],-1),A=e("p",null,"你可以看到一共有 615 个 socket 文件，因为有很多 socket 在解决进程间的通信。就是将两个进程一个想象成客户端，一个想象成服务端。并不是真的有 600 多个连接着互联网的请求。",-1),T=e("p",null,[e("strong",null,"查看 TCP 连接")],-1),P=e("p",null,[o("如果想看有哪些 TCP 连接，可以使用"),e("code",null,"netstat -t"),o("。比如下面我通过"),e("code",null,"netstat -t"),o("看"),e("code",null,"tcp"),o("协议的网络情况：")],-1),m=e("p",null,[o("这里没有找到连接中的"),e("code",null,"tcp"),o("，因为我们这台虚拟机当时没有发生任何的网络连接。因此我们尝试从机器"),e("code",null,"u2"),o("（另一台机器）ssh 登录进"),e("code",null,"u1"),o("，再看一次：")],-1),D=e("p",null,"如上图所示，可以看到有一个 TCP 连接了。",-1),S=e("p",null,[e("strong",null,"查看端口占用")],-1),C=e("p",null,"还有一种非常常见的情形，我们想知道某个端口是哪个应用在占用。如下图所示：",-1),q=s('<p>这里我们看到 22 端口被 sshd，也就是远程登录模块被占用了。<code>-n</code>是将一些特殊的端口号用数字显示，<code>-t</code>是指看 TCP 协议，<code>-l</code>是只显示连接中的连接，<code>-p</code>是显示程序名称。</p><h3 id="网络测试" tabindex="-1">网络测试 <a class="header-anchor" href="#网络测试" aria-label="Permalink to &quot;网络测试&quot;">​</a></h3><p>当我们需要测试网络延迟、测试服务是否可用时，可能会用到<code>ping</code>和<code>telnet</code>指令。</p><h4 id="ping" tabindex="-1">ping <a class="header-anchor" href="#ping" aria-label="Permalink to &quot;ping&quot;">​</a></h4><p>想知道本机到某个网站的网络延迟，就可以使用<code>ping</code>指令。如下图所示：</p>',5),b=s('<p><code>ping</code>一个网站需要使用 ICMP 协议。因此你可以在上图中看到 icmp 序号。 这里的时间<code>time</code>是往返一次的时间。<code>ttl</code>叫作 time to live，是封包的生存时间。就是说，一个封包从发出就开始倒计时，如果途中超过 128ms，这个包就会被丢弃。如果包被丢弃，就会被算进丢包率。</p><p>另外<code>ping</code>还可以帮助我们看到一个网址的 IP 地址。 通过网址获得 IP 地址的过程叫作 DNS Lookup（DNS 查询）。<code>ping</code>利用了 DNS 查询，但是没有显示全部的 DNS 查询结果。</p><h4 id="telnet" tabindex="-1">telnet <a class="header-anchor" href="#telnet" aria-label="Permalink to &quot;telnet&quot;">​</a></h4><p>有时候我们想知道本机到某个 IP + 端口的网络是否通畅，也就是想知道对方服务器是否在这个端口上提供了服务。这个时候可以用<code>telnet</code>指令。 如下图所示：</p>',4),k=e("p",null,[o("telnet 执行后会进入一个交互式的界面，比如这个时候，我们输入下图中的文字就可以发送 HTTP 请求了。如果你对 HTTP 协议还不太了解，建议自学一下 HTTP 协议。如果希望和林老师一起学习，可以等待下我之后的《"),e("strong",null,"计算机网络"),o("》专栏。")],-1),f=s('<p>如上图所示，第 5 行的<code>GET</code> 和第 6 行的<code>HOST</code>是我输入的。 拉勾网返回了一个 301 永久跳转。这是因为拉勾网尝试把<code>http</code>协议链接重定向到<code>https</code>。</p><h3 id="dns-查询" tabindex="-1">DNS 查询 <a class="header-anchor" href="#dns-查询" aria-label="Permalink to &quot;DNS 查询&quot;">​</a></h3><p>我们排查网络故障时想要进行一次 DNS Lookup，想知道一个网址 DNS 的解析过程。这个时候有多个指令可以用。</p><h4 id="host" tabindex="-1">host <a class="header-anchor" href="#host" aria-label="Permalink to &quot;host&quot;">​</a></h4><p>host 就是一个 DNS 查询工具。比如我们查询拉勾网的 DNS，如下图所示：</p>',5),E=e("p",null,[o("我们看到拉勾网 "),e("a",{href:"http://www.lagou.comw",target:"_blank",rel:"noreferrer"},"www.lagou.com"),o(" 是一个别名，它的原名是 lgmain 开头的一个域名，这说明拉勾网有可能在用 CDN 分发主页（关于 CDN，我们《计算机网络》专栏见）。")],-1),N=e("p",null,"上图中，可以找到 3 个域名对应的 IP 地址。",-1),x=e("p",null,[o("如果想追查某种类型的记录，可以使用"),e("code",null,"host -t"),o("。比如下图我们追查拉勾的 AAAA 记录，因为拉勾网还没有部署 IPv6，所以没有找到。")],-1),y=e("h4",{id:"dig",tabindex:"-1"},[o("dig "),e("a",{class:"header-anchor",href:"#dig","aria-label":'Permalink to "dig"'},"​")],-1),I=e("p",null,[e("code",null,"dig"),o("指令也是一个做 DNS 查询的。不过"),e("code",null,"dig"),o("指令显示的内容更详细。下图是"),e("code",null,"dig"),o("拉勾网的结果。")],-1),w=s('<p>从结果可以看到<a href="http://www.lagou.c" target="_blank" rel="noreferrer">www.lagou.com</a> 有一个别名，用 CNAME 记录定义 lgmain 开头的一个域名，然后有 3 条 A 记录，通常这种情况是为了均衡负载或者分发内容。</p><h3 id="http-相关" tabindex="-1">HTTP 相关 <a class="header-anchor" href="#http-相关" aria-label="Permalink to &quot;HTTP 相关&quot;">​</a></h3><p>最后我们来说说<code>http</code>协议相关的指令。</p><h4 id="curl" tabindex="-1">curl <a class="header-anchor" href="#curl" aria-label="Permalink to &quot;curl&quot;">​</a></h4><p>如果要在命令行请求一个网页，或者请求一个接口，可以用<code>curl</code>指令。<code>curl</code>支持很多种协议，比如 LDAP、SMTP、FTP、HTTP 等。</p><p>我们可以直接使用 curl 请求一个网址，获取资源，比如我用 curl 直接获取了拉勾网的主页，如下图所示：</p>',6),M=s('<p>如果只想看 HTTP 返回头，可以使用<code>curl -I</code>。</p><p>另外<code>curl</code>还可以执行 POST 请求，比如下面这个语句：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">curl </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">d </span><span style="color:#9ECBFF;">&#39;{&quot;x&quot; : 1}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">H </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">X POST http</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//localhost:3000/api</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">curl </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">d </span><span style="color:#032F62;">&#39;{&quot;x&quot; : 1}&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">H </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">X POST http</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//localhost:3000/api</span></span></code></pre></div><p>curl在向<code>localhost:3000</code>发送 POST 请求。<code>-d</code>后面跟着要发送的数据， -<code>X</code>后面是用到的 HTTP 方法，<code>-H</code>是指定自定义的请求头。</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>这节课我们学习了不少网络相关的 Linux 指令，这些指令是将来开发和调试的强大工具。这里再给你复习一下这些指令：</p><ul><li><p>远程登录的 ssh 指令；</p></li><li><p>远程拷贝文件的 scp 指令；</p></li><li><p>查看网络接口的 ifconfig 指令；</p></li><li><p>查看网络状态的 netstat 指令；</p></li><li><p>测试网络延迟的 ping 指令；</p></li><li><p>可以交互式调试和服务端的 telnet 指令；</p></li><li><p>两个 DNS 查询指令 host 和 dig；</p></li><li><p>可以发送各种请求包括 HTTPS 的 curl 指令。</p></li></ul><p><strong>那么通过这节课的学习，你现在可以来回答本节关联的面试题目：如何查看一个域名有哪些 NS 记录了吗？</strong></p><p>老规矩，请你先在脑海里构思下给面试官的表述，并把你的思考写在留言区，然后再来看我接下来的分析。</p><p><strong>【解析】</strong> host 指令提供了一个<code>-t</code>参数指定需要查找的记录类型。我们可以使用<code>host -t ns {网址}</code>。另外 dig 也提供了同样的能力。如果你感兴趣，还可以使用<code>man</code>对系统进行操作。</p><h3 id="思考题" tabindex="-1">思考题 <a class="header-anchor" href="#思考题" aria-label="Permalink to &quot;思考题&quot;">​</a></h3><p><strong>最后我再给你出一道需要查资料的思考题目：如何查看正在 TIME_WAIT 状态的连接数量</strong>？</p><p>你可以把你的答案、思路或者课后总结写在留言区，这样可以帮助你产生更多的思考，这也是构建知识体系的一部分。经过长期的积累，相信你会得到意想不到的收获。如果你觉得今天的内容对你有所启发，欢迎分享给身边的朋友。期待看到你的思考！</p>',13);function H(V,F,L,R,v,O){const t=l("Image");return n(),p("div",null,[d,a(t,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92j8GAMNHAAAPCrIyhHHk744.png"}),o(),r,a(t,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92j8mAIMPdAACTOATTrQM694.png"}),o(),_,a(t,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92j9OADjTcAAPER8w5DNg904.png"}),o(),h,a(t,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92j9yAaioXAAbz00ZJYlw555.png"}),o(),g,a(t,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92j-aAAZlfAAizLye7uc4727.png"}),o(),u,a(t,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92j-2AVEYjAAA8xcVMQzc068.png"}),o(),A,T,P,a(t,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92j_aAbxdlAAEAdzG3a2s636.png"}),o(),m,a(t,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92kAaAMuMDAAFWQdSNGfk978.png"}),o(),D,S,C,a(t,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92kBKAHr2RAAEnmEOZ8RM010.png"}),o(),q,a(t,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92kB-ARKR5AAP30Xk0nBg068.png"}),o(),b,a(t,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92kCmAcPQzAADcRdxOtdw609.png"}),o(),k,a(t,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92kDKAcYUbAASLFyOyBg4948.png"}),o(),f,a(t,{alt:"Drawing 12.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92kD6AOJPQAAGW1va0D9c041.png"}),o(),E,N,x,a(t,{alt:"Drawing 13.png",src:"https://s0.lgstatic.com/i/image/M00/5A/68/CgqCHl92kFWAHIqAAACvpo6qaOs100.png"}),o(),y,I,a(t,{alt:"Drawing 14.png",src:"https://s0.lgstatic.com/i/image/M00/5A/69/CgqCHl92kGaADOhxAAR-BfryZ5g689.png"}),o(),w,a(t,{alt:"Drawing 15.png",src:"https://s0.lgstatic.com/i/image/M00/5A/5D/Ciqc1F92kG-AJPyrAANJZYQ4u5w784.png"}),o(),M])}const G=c(i,[["render",H]]);export{B as __pageData,G as default};
