import{_ as o,j as e,o as t,h as c,k as p,f as a,Q as l,s}from"./chunks/framework.d3daa342.js";const v=JSON.parse('{"title":"29统一认证与授权如何保障服务安全？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3824) 29  统一认证与授权如何保障服务安全？.md"},E=l("",26),y=s("p",null,[a("其中"),s("strong",null,"经常使用的授权类型为授权码类型和密码类型"),a('。简化类型是由于省略了授权码类型流程中的"授权码"步骤而得名；而客户端类型是客户端以自己的名义直接向授权服务器请求访问令牌，不需要用户授权即可请求访问令牌。')],-1),i=s("p",null,"我们接下来就只对常用的授权码类型和密码类型的流程做详细的介绍。",-1),d=s("p",null,[s("strong",null,"（1）授权码类型")],-1),h=s("p",null,"授权码类型是 OAuth2 默认授权类型中功能最完整、流程最严密的授权类型。授权码类型要求客户端能够与资源所有者的代理（如 Web 浏览器等）进行交互，它通过重定向资源所有者的代理，让资源所有者与授权服务器直接交互授权，避免资源所有者的信息被泄漏，并将授权通过后生成的授权码以重定向的方式返回给客户端。",-1),u=s("p",null,"其授权流程图如下图所示：",-1),A=l("",5),g=l("",21),_=l("",35);function F(b,C,T,k,D,q){const n=e("Image");return t(),c("div",null,[E,p(n,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_zxuAKzwlAACE5_eVSis959.png"}),a(),y,i,d,h,u,p(n,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_z1qAO1lbAACN7fUBGB4934.png"}),a(),A,p(n,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A6/CgqCHl9_z2aANQVaAACfSJf6Wpc520.png"}),a(),g,p(n,{alt:"4.png",src:"https://s0.lgstatic.com/i/image/M00/5B/A5/CgqCHl9_zyaAXi9uAAMQlnqNtDg368.png"}),a(),_])}const I=o(r,[["render",F]]);export{v as __pageData,I as default};
