import{_ as e,j as o,o as t,g as r,k as l,h as n,Q as p,s}from"./chunks/framework.4e7d56ce.js";const _=JSON.parse('{"title":"17路由引擎：如何理解分片路由核心类ShardingRouter的运作机制？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3576) 17  路由引擎：如何理解分片路由核心类 ShardingRouter 的运作机制？.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3576) 17  路由引擎：如何理解分片路由核心类 ShardingRouter 的运作机制？.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3576) 17  路由引擎：如何理解分片路由核心类 ShardingRouter 的运作机制？.md"},E=p("",5),y=p("",16),i=p("",44),g=p("",15),d=s("p",null,"至此，我们把 ShardingRouter 类的核心流程做了介绍。在 ShardingSphere 的路由引擎中，ShardingRouter 可以说是一个承上启下的核心类，向下我们可以挖掘各种 RoutingEngine 的具体实现；向上我们可以延展到读写分离等面向应用的具体场景。",-1),u=s("p",null,"下图展示了 ShardingRouter 的这种定位关系。关于各种 RoutingEngine 的介绍是我们下一课时的内容，今天我们先将基于 ShardingRouter 讨论它的上层结构，从而引出了 ShardingEngine。",-1),S=p("",14),h=s("h3",{id:"从源码解析到日常开发",tabindex:"-1"},[n("从源码解析到日常开发 "),s("a",{class:"header-anchor",href:"#从源码解析到日常开发","aria-label":'Permalink to "从源码解析到日常开发"'},"​")],-1),F=s("p",null,"分包设计原则可以用来设计和规划开源框架的代码结构。在今天的内容中，我们看到了 ShardingSphere 中非常典型的一种分层和分包实现策略。通过 sharding-core-route 和 sharding-core-entry 这两个工程，我们把路由引擎中位于底层的核心类 ShardingRouter 和位于上层的 PreparedQueryShardingEngine 及 SimpleQueryShardingEngine 类进行了合理的分层管理。ShardingSphere 对于分层和分包策略的应用有很多具体的表现形式，随着课程的不断演进，我们还会看到更多的应用场景。",-1),m=s("h3",{id:"小结与预告",tabindex:"-1"},[n("小结与预告 "),s("a",{class:"header-anchor",href:"#小结与预告","aria-label":'Permalink to "小结与预告"'},"​")],-1),D=s("p",null,"作为 ShardingSphere 分片引擎的第二个核心组件，路由引擎的目的在于生成 SQLRouteResult目标对象。而整个路由引擎中最核心的就是 ShardingRouter 类。今天，我们对 ShardingRouter 的整体执行流程进行了详细的讨论，同时也引出了路由引擎中的底层对象 RoutingEngine。",-1),A=s("p",null,[s("strong",null,"这里给你留一道思考题：ShardingSphere 中，一个完整的路由执行过程需要经历哪些步骤？"),n(" 欢迎你在留言区与大家讨论，我将一一点评解答。")],-1),C=s("p",null,"在今天的课程中，我们也提到了 ShardingSphere 中存在多种 RoutingEngine。在下一课时的内容中，我们将关注于这些 RoutingEngine 的具体实现过程。",-1);function R(v,b,f,L,q,B){const a=o("Image");return t(),r("div",null,[E,l(a,{alt:"Lark20201109-190944.png",src:"https://s0.lgstatic.com/i/image/M00/6A/D2/CgqCHl-pI5mAXrqWAACIykUr4yg379.png"}),n(),y,l(a,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/3F/D0/CgqCHl8xJyqAHmcfAACVSxCxm4s053.png"}),n(),i,l(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/3F/C4/Ciqc1F8xJvuALcqiAAA5dODyQeU720.png"}),n(),g,l(a,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/3F/D0/CgqCHl8xJ0eAMp1GAABywd2SYFQ497.png"}),n(),d,u,l(a,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/3F/D0/CgqCHl8xJ1WAbAmHAAB_-h8F66g956.png"}),n(),S,l(a,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/3F/D0/CgqCHl8xJ2aAQabtAACUcSURKVc544.png"}),n(),h,F,m,D,A,C])}const k=e(c,[["render",R]]);export{_ as __pageData,k as default};
