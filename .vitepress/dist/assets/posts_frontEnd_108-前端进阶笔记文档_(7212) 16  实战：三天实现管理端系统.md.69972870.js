import{_ as o,j as e,o as t,g as c,k as l,h as s,Q as p,s as n}from"./chunks/framework.cfb14fe0.js";const T=JSON.parse('{"title":"16实战：三天实现管理端系统","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/108-前端进阶笔记文档/(7212) 16  实战：三天实现管理端系统.md","filePath":"posts/frontEnd/108-前端进阶笔记文档/(7212) 16  实战：三天实现管理端系统.md","lastUpdated":1696682708000}'),r={name:"posts/frontEnd/108-前端进阶笔记文档/(7212) 16  实战：三天实现管理端系统.md"},E=p('<h1 id="_16实战-三天实现管理端系统" tabindex="-1">16实战：三天实现管理端系统 <a class="header-anchor" href="#_16实战-三天实现管理端系统" aria-label="Permalink to &quot;16实战：三天实现管理端系统&quot;">​</a></h1><p>前面几讲我介绍了前端应用开发中常见的工具原理，包括前端框架、前端路由等，还介绍了前端编程的一些开发技巧，比如使用数据驱动、组件化和模块化设计、数据抽象等。这些内容到底该怎么在实际工作中使用呢？</p><p>今天，我会以最常见的管理端系统为例，带你用这些编程技巧来提升开发效率，三天实现一个管理端系统。</p><p>搭建一个管理端系统包括以下工作：</p><ol><li><p>管理端路由与功能设计；</p></li><li><p>页面功能设计与实现。</p></li></ol><blockquote><p>由于技术选型并不是本节内容的重点，这里我将直接选择入门简单的 Vue、配套 Vue 热门 UI 框架，使用 Vue CLI + Vue + ElementUI + vue-router 来搭建管理端。关于技术选型的内容，你可以关注后续第 22 讲的内容。</p></blockquote><p>本文中我不会花过多的篇幅去描述 Vue 的一些基本概念和工具，包括 Vue 组件、vue-router、ElementUI 组件等，这些内容在官方网站上有很详细的介绍，因此我们专注于介绍搭建思路。</p><p>下面，我们先来设计管理端功能吧！</p><h3 id="管理端路由与功能设计" tabindex="-1">管理端路由与功能设计 <a class="header-anchor" href="#管理端路由与功能设计" aria-label="Permalink to &quot;管理端路由与功能设计&quot;">​</a></h3><p>常见的管理端系统长这个样子：</p>',10),y=n("p",null,"一般来说，管理端系统包括这些功能页面结构。",-1),i=n("p",null,"我们先来设计管理端左侧的菜单，将 2-4 的页面结构都整合进去：",-1),F=n("h4",{id:"页面路由设计",tabindex:"-1"},[s("页面路由设计 "),n("a",{class:"header-anchor",href:"#页面路由设计","aria-label":'Permalink to "页面路由设计"'},"​")],-1),u=n("p",null,"菜单内容以及对应的页面结构都确定之后，我们可以先来设计管理端的路由。这时，我们需要将应用进行适当的模块化和组件化拆分。",-1),A=n("p",null,"为了更直观地进行说明，我给你梳理了页面路由和页面组件嵌套的关系图（使用框框框起来的代表一个 Vue 组件）：",-1),D=n("p",null,"将页面和路由的关系梳理清楚，是很关键的一个步骤。",-1),d=n("p",null,[s("根据上述的页面路由和嵌套关系，下面我们以"),n("code",null,"/"),s("作为根路由，进行路由和页面组件的设计。")],-1),g=p(`<p>应用的各个页面和路由嵌套关系梳理完成之后，我们可以对项目文件结构进行划分。</p><h4 id="目录结构划分" tabindex="-1">目录结构划分 <a class="header-anchor" href="#目录结构划分" aria-label="Permalink to &quot;目录结构划分&quot;">​</a></h4><p>项目设计的时候，我们需要初步约定项目代码的组织结构。</p><p>对于前端项目来说，项目根目录会区分开发代码（src）、编译后代码（dist）和常见的配置（Babel 配置、Eslint 配置、项目配置等）。对于开发代码（src），也会划分为静态资源（assets）、页面（page）、组件库（component）、公共库（util）等。如下述目录结构所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">├─dist                      </span><span style="color:#6A737D;">// 编译之后的项目文件</span></span>
<span class="line"><span style="color:#E1E4E8;">├─src                       </span><span style="color:#6A737D;">// 开发目录</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─assets                 </span><span style="color:#6A737D;">// 静态资源</span></span>
<span class="line"><span style="color:#E1E4E8;">│     ├─less                </span><span style="color:#6A737D;">// 公共less</span></span>
<span class="line"><span style="color:#E1E4E8;">│     ├─img                 </span><span style="color:#6A737D;">// 图片资源</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─components             </span><span style="color:#6A737D;">// **放这里是组件**</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─pages                  </span><span style="color:#6A737D;">// **放这里是页面** 根据路由结构划分</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─utils                  </span><span style="color:#6A737D;">// 工具库</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─App.vue                </span><span style="color:#6A737D;">// 启动页面，最外层容器组件</span></span>
<span class="line"><span style="color:#E1E4E8;">│  ├─main.js                </span><span style="color:#6A737D;">// 入口脚本</span></span>
<span class="line"><span style="color:#E1E4E8;">├─babel.config.js          </span><span style="color:#6A737D;">// babel 配置文件</span></span>
<span class="line"><span style="color:#E1E4E8;">├─vue.config.js            </span><span style="color:#6A737D;">// vue 自定义配置，与 webpack 配置相关</span></span>
<span class="line"><span style="color:#E1E4E8;">├─</span><span style="color:#F97583;">package</span><span style="color:#E1E4E8;">.json             </span><span style="color:#6A737D;">// 项目配置</span></span>
<span class="line"><span style="color:#E1E4E8;">├─</span><span style="color:#FDAEB7;font-style:italic;">README</span><span style="color:#E1E4E8;">.md                </span><span style="color:#6A737D;">// 项目说明</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">├─dist                      </span><span style="color:#6A737D;">// 编译之后的项目文件</span></span>
<span class="line"><span style="color:#24292E;">├─src                       </span><span style="color:#6A737D;">// 开发目录</span></span>
<span class="line"><span style="color:#24292E;">│  ├─assets                 </span><span style="color:#6A737D;">// 静态资源</span></span>
<span class="line"><span style="color:#24292E;">│     ├─less                </span><span style="color:#6A737D;">// 公共less</span></span>
<span class="line"><span style="color:#24292E;">│     ├─img                 </span><span style="color:#6A737D;">// 图片资源</span></span>
<span class="line"><span style="color:#24292E;">│  ├─components             </span><span style="color:#6A737D;">// **放这里是组件**</span></span>
<span class="line"><span style="color:#24292E;">│  ├─pages                  </span><span style="color:#6A737D;">// **放这里是页面** 根据路由结构划分</span></span>
<span class="line"><span style="color:#24292E;">│  ├─utils                  </span><span style="color:#6A737D;">// 工具库</span></span>
<span class="line"><span style="color:#24292E;">│  ├─App.vue                </span><span style="color:#6A737D;">// 启动页面，最外层容器组件</span></span>
<span class="line"><span style="color:#24292E;">│  ├─main.js                </span><span style="color:#6A737D;">// 入口脚本</span></span>
<span class="line"><span style="color:#24292E;">├─babel.config.js          </span><span style="color:#6A737D;">// babel 配置文件</span></span>
<span class="line"><span style="color:#24292E;">├─vue.config.js            </span><span style="color:#6A737D;">// vue 自定义配置，与 webpack 配置相关</span></span>
<span class="line"><span style="color:#24292E;">├─</span><span style="color:#D73A49;">package</span><span style="color:#24292E;">.json             </span><span style="color:#6A737D;">// 项目配置</span></span>
<span class="line"><span style="color:#24292E;">├─</span><span style="color:#B31D28;font-style:italic;">README</span><span style="color:#24292E;">.md                </span><span style="color:#6A737D;">// 项目说明</span></span></code></pre></div><p>项目的目录结构是否有规范约束、是否结构清晰，对一个项目的可维护性非常重要。通过目录结构，我们可以直观地看到项目中包括了哪些代码、分别都放在哪里。</p><p>好了，项目目录和路由结构我们划分好了，我们来看看怎么根据上面的设计来配置路由，以及实现相互跳转。</p><h4 id="路由配置与开发" tabindex="-1">路由配置与开发 <a class="header-anchor" href="#路由配置与开发" aria-label="Permalink to &quot;路由配置与开发&quot;">​</a></h4><p>Vue 框架本身的定位是核心关注视图层，所以路由配置、状态管理、测试工具等都不是自带的，我们需要自己找到对应的开源库配合使用。Vue 官方推荐的工具是<a href="https://router.vuejs.org/zh/?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">vue-router</a>。</p><p>根据以上的嵌套关系，我们可以设置最外层的根路由为<code>&quot;/&quot;</code>，并加上其他嵌套子路由配置，比如登录页面、列表页和详情页等。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 配置路由信息</span></span>
<span class="line"><span style="color:#6A737D;">// 每个路由应该映射一个组件。 其中&quot;component&quot; 可以是</span></span>
<span class="line"><span style="color:#6A737D;">// 通过 Vue.extend() 创建的组件构造器，</span></span>
<span class="line"><span style="color:#6A737D;">// 或者，只是一个组件配置对象。</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> routes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 父路由路径</span></span>
<span class="line"><span style="color:#E1E4E8;">    component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> App, </span><span style="color:#6A737D;">// 父路由组件，传入 vue component</span></span>
<span class="line"><span style="color:#E1E4E8;">    name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;App&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 路由名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 设置子路由</span></span>
<span class="line"><span style="color:#E1E4E8;">    children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;login&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 子路由路径</span></span>
<span class="line"><span style="color:#E1E4E8;">        component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Login, </span><span style="color:#6A737D;">// 子路由组件，会替换父组件中&lt;router-view&gt;中的内容</span></span>
<span class="line"><span style="color:#E1E4E8;">        name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Login&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 路由名称</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 应用首页</span></span>
<span class="line"><span style="color:#E1E4E8;">        path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;home&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Home,</span></span>
<span class="line"><span style="color:#E1E4E8;">        name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Home&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// 服务列表</span></span>
<span class="line"><span style="color:#E1E4E8;">          { path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;service&quot;</span><span style="color:#E1E4E8;">, component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Service, name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Service&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">// 产品容器</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;product&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Product,</span></span>
<span class="line"><span style="color:#E1E4E8;">            name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Product&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            children</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 子路由内容</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 产品列表</span></span>
<span class="line"><span style="color:#E1E4E8;">              { path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;list&quot;</span><span style="color:#E1E4E8;">, component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> ProductList, name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ProductList&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 产品新增</span></span>
<span class="line"><span style="color:#E1E4E8;">              { path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;add/0&quot;</span><span style="color:#E1E4E8;">, component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> ProductEdit, name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ProductAdd&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 产品编辑</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// 我们能看到，新增和编辑其实最终使用的是同一个组件，所以后面会有一些需要兼容处理的地方</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;">// :id可匹配任意值，且可在组件中通过this.$route.params.id获取该值</span></span>
<span class="line"><span style="color:#E1E4E8;">              { path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;edit/:id&quot;</span><span style="color:#E1E4E8;">, component</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> ProductEdit, name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ProductEdit&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">            ],</span></span>
<span class="line"><span style="color:#E1E4E8;">          },</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 配置路由信息</span></span>
<span class="line"><span style="color:#6A737D;">// 每个路由应该映射一个组件。 其中&quot;component&quot; 可以是</span></span>
<span class="line"><span style="color:#6A737D;">// 通过 Vue.extend() 创建的组件构造器，</span></span>
<span class="line"><span style="color:#6A737D;">// 或者，只是一个组件配置对象。</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> routes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 父路由路径</span></span>
<span class="line"><span style="color:#24292E;">    component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> App, </span><span style="color:#6A737D;">// 父路由组件，传入 vue component</span></span>
<span class="line"><span style="color:#24292E;">    name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;App&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 路由名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 设置子路由</span></span>
<span class="line"><span style="color:#24292E;">    children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;login&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 子路由路径</span></span>
<span class="line"><span style="color:#24292E;">        component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Login, </span><span style="color:#6A737D;">// 子路由组件，会替换父组件中&lt;router-view&gt;中的内容</span></span>
<span class="line"><span style="color:#24292E;">        name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Login&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 路由名称</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 应用首页</span></span>
<span class="line"><span style="color:#24292E;">        path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;home&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Home,</span></span>
<span class="line"><span style="color:#24292E;">        name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Home&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 服务列表</span></span>
<span class="line"><span style="color:#24292E;">          { path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;service&quot;</span><span style="color:#24292E;">, component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Service, name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Service&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">// 产品容器</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;product&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Product,</span></span>
<span class="line"><span style="color:#24292E;">            name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Product&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            children</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 子路由内容</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 产品列表</span></span>
<span class="line"><span style="color:#24292E;">              { path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;list&quot;</span><span style="color:#24292E;">, component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> ProductList, name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ProductList&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 产品新增</span></span>
<span class="line"><span style="color:#24292E;">              { path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;add/0&quot;</span><span style="color:#24292E;">, component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> ProductEdit, name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ProductAdd&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 产品编辑</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// 我们能看到，新增和编辑其实最终使用的是同一个组件，所以后面会有一些需要兼容处理的地方</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6A737D;">// :id可匹配任意值，且可在组件中通过this.$route.params.id获取该值</span></span>
<span class="line"><span style="color:#24292E;">              { path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;edit/:id&quot;</span><span style="color:#24292E;">, component</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> ProductEdit, name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ProductEdit&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">            ],</span></span>
<span class="line"><span style="color:#24292E;">          },</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre></div><p>上述的路由配置中涵盖了页面的路由嵌套关系，在 Vue 中可以使用<code>&lt;router-view&gt;</code>组件，将渲染路径匹配到具体的视图组件，视图组件还可以内嵌自己的<code>&lt;router-view&gt;</code>匹配子路由路径，从而渲染嵌套组件。</p><p>比如，<code>Home.vue</code>页面中包括左侧菜单和右侧内容，在右侧内容中可以使用<code>&lt;router-view&gt;</code>来嵌套子路由的组件进行渲染。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 这里是 </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">app</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">home 路由的组件，Home.vue </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">template</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">container</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 左侧菜单, Menu.vue </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 右侧内容 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">container</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 上边的头部栏 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">header</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">header</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 子路由页面的内容 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">router</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">view</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">router</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">view</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">container</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">container</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">template</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 这里是 </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">app</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">home 路由的组件，Home.vue </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">template</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">container</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 左侧菜单, Menu.vue </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 右侧内容 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">container</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 上边的头部栏 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">header</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">header</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 子路由页面的内容 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">router</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">view</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">router</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">view</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">container</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">container</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">template</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>其中，在左侧的在菜单<code>&lt;menu&gt;&lt;/menu&gt;</code>中，可以使用 Vue 中的<code>&lt;router-link&gt;</code>组件，来绑定路由的跳转能力，进行页面的导航。</p><p>路由的配置完成后，我们可以将路由的能力添加到应用中。</p><p>在第 12 讲中，我们介绍了前端路由库都会支持两种路由模式：Hash 和 History。由于 History 模式需要后台配合，因此这里使用 Hash 模式来加载路由。</p><p>在 Vue 中可以通过将<code>router</code>配置参数注入路由，给应用添加上路由功能，比如<code>&lt;router-link tag=&quot;div&quot; :to=&quot;{name: 路由名字}&quot;&gt;&lt;/router-link&gt;</code>。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 加载路由信息</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> router </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">VueRouter</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// mode: 路由模式，&#39;hash&#39; | &#39;history&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// routes：传入路由配置信息，后面会讲怎么配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  routes, </span><span style="color:#6A737D;">// （缩写）相当于 routes: routes</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// 启动一个 Vue 应用</span></span>
<span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vue</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  el</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;#app&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  router, </span><span style="color:#6A737D;">// 传入路由能力</span></span>
<span class="line"><span style="color:#E1E4E8;">  render</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> (h) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">h</span><span style="color:#E1E4E8;">(App),</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 加载路由信息</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> router </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">VueRouter</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// mode: 路由模式，&#39;hash&#39; | &#39;history&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// routes：传入路由配置信息，后面会讲怎么配置</span></span>
<span class="line"><span style="color:#24292E;">  routes, </span><span style="color:#6A737D;">// （缩写）相当于 routes: routes</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// 启动一个 Vue 应用</span></span>
<span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vue</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  el</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;#app&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  router, </span><span style="color:#6A737D;">// 传入路由能力</span></span>
<span class="line"><span style="color:#24292E;">  render</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (h) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">h</span><span style="color:#24292E;">(App),</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>通过新建<code>VueRouter</code>，并在<code>Vue</code>中传入该路由示例，便可以给应用添加路由能力，这就是 vue-router 的基本功能。</p><p>除此之外，vue-router 还提供了路由监控能力、鉴权能力等，可以结合实现非登录页的登录状态鉴权，比如使用 vue-router 的<code>router.beforeEach</code>导航守卫能力，当用户未登录时，则拒绝进入其他路由页面里：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">router.</span><span style="color:#B392F0;">beforeEach</span><span style="color:#E1E4E8;">((to, from, next) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (to.name </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Login&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 非 login 页面，检查是否登录</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isUserLogin) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 未登录则跳转去 login 页面</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">({ name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Login&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 其他情况正常执行</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">next</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">router.</span><span style="color:#6F42C1;">beforeEach</span><span style="color:#24292E;">((to, from, next) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (to.name </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Login&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 非 login 页面，检查是否登录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isUserLogin) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 未登录则跳转去 login 页面</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">({ name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Login&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 其他情况正常执行</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">next</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>这样，我们就可以在用户未登录时，拦截所有通往内页的操作，并重新定向到登录页面。</p><p>到这里，我们应用基本具备了登录、导航的能力。当然，这只是个静态页面，距离真正上线，我们还需要进行接口的联调、代码打包、发布上线等工作。</p><p>管理端路由与功能设计过程中，我们分别使用了前端框架、前端路由以及组件化和模块化的设计。</p><p>下面我们会结合数据抽象与数据驱动的方式，来进行页面内功能的具体设计与实现。</p><h3 id="页面功能设计与实现" tabindex="-1">页面功能设计与实现 <a class="header-anchor" href="#页面功能设计与实现" aria-label="Permalink to &quot;页面功能设计与实现&quot;">​</a></h3><p>前面我们已经将管理端划分成多个模块和页面，接下来我会对页面进行组件的拆分，结合数据抽象的方式进行组件的设计。</p><p>管理端页面的主要包括左侧菜单、列表和表单，我们可以按照这样的结构进行组件设计。</p><p>下面我们先来分别对它们进行数据抽象和设计。</p><h4 id="菜单设计" tabindex="-1">菜单设计 <a class="header-anchor" href="#菜单设计" aria-label="Permalink to &quot;菜单设计&quot;">​</a></h4><p>菜单的最终效果如图，这里会包括父菜单和子菜单两层结构。</p>`,32),q=p(`<p>其中，每个父菜单需要展示以下的内容：</p><ul><li><p>图标<code>icon</code></p></li><li><p>菜单名字<code>text</code></p></li><li><p>（可选）子菜单列表<code>subMenus</code>，以及子菜单名字<code>text</code></p></li></ul><p>列表可以用数组来表示，因此我们可以将菜单组件的数据抽象为以下的数据结构（数组+对象）:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> menus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;服务管理&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 父菜单名字</span></span>
<span class="line"><span style="color:#E1E4E8;">    icon</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;el-icon-setting&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 父菜单图标</span></span>
<span class="line"><span style="color:#E1E4E8;">    subMenus</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [{ text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;服务信息&quot;</span><span style="color:#E1E4E8;"> }, { text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;新增&quot;</span><span style="color:#E1E4E8;"> }], </span><span style="color:#6A737D;">// 子菜单列表</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;产品管理&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    icon</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;el-icon-menu&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    subMenus</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [{ text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;产品信息&quot;</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    text</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;日志信息&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    icon</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;el-icon-message&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> menus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;服务管理&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 父菜单名字</span></span>
<span class="line"><span style="color:#24292E;">    icon</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;el-icon-setting&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 父菜单图标</span></span>
<span class="line"><span style="color:#24292E;">    subMenus</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [{ text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;服务信息&quot;</span><span style="color:#24292E;"> }, { text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;新增&quot;</span><span style="color:#24292E;"> }], </span><span style="color:#6A737D;">// 子菜单列表</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;产品管理&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    icon</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;el-icon-menu&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    subMenus</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [{ text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;产品信息&quot;</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    text</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;日志信息&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    icon</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;el-icon-message&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre></div><p>当我们将菜单用这样的数据结构表示以后，实现 UI 的时候就可以轻松地通过数据绑定的方式来进行。此处使用了 Elmenet 的菜单组件<code>&lt;el-menu&gt;</code>、<code>&lt;el-submenu&gt;</code>和<code>&lt;el-menu-item&gt;</code>如下所示：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 顺便调整了下颜色 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">:default-</span><span style="color:#E1E4E8;">openeds</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;[&#39;0&#39;, &#39;1&#39;]&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;el-menu-vertical-demo&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  background</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;#545c64&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  text</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;#fff&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  active</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">text</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">color</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;#ffd04b&quot;</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 遍历生成父菜单选项 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">template v</span><span style="color:#F97583;">-for=</span><span style="color:#9ECBFF;">&quot;menu in menus&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 有子菜单的时候，就用 el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">submenu，再绑个序号 index </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">submenu</span></span>
<span class="line"><span style="color:#E1E4E8;">      v</span><span style="color:#F97583;">-if=</span><span style="color:#9ECBFF;">&quot;menu.subMenus &amp;&amp; menu.subMenus.length&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">index</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.index&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">key</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.index&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">template slot</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 绑个父菜单的 icon </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">i </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.icon&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 再绑个父菜单的名称 text </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> slot 其实类似于占位符，可以去 Vue 官方文档了解一下插槽 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">span slot</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{ {menu.text}}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">span</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">template</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">group</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 子菜单也要遍历，同时绑上子菜单名称 text，也要绑个序号 index </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item</span></span>
<span class="line"><span style="color:#E1E4E8;">          v</span><span style="color:#F97583;">-for=</span><span style="color:#9ECBFF;">&quot;subMenu in menu.subMenus&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">key</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;subMenu.index&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">index</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;subMenu.index&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{ {subMenu.text}}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">group</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">submenu</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 没子菜单的时候，就用 el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item，也要绑个序号 index </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item v</span><span style="color:#F97583;">-else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">index</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.index&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">key</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.index&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 绑个父菜单的 icon </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">i </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">class</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;menu.icon&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">i</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 再绑个父菜单的名称 text </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">span slot</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">{ {menu.text}}</span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">span</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">item</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">template</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">menu</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 顺便调整了下颜色 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">:default-</span><span style="color:#24292E;">openeds</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;[&#39;0&#39;, &#39;1&#39;]&quot;</span></span>
<span class="line"><span style="color:#24292E;">  class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;el-menu-vertical-demo&quot;</span></span>
<span class="line"><span style="color:#24292E;">  background</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;#545c64&quot;</span></span>
<span class="line"><span style="color:#24292E;">  text</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;#fff&quot;</span></span>
<span class="line"><span style="color:#24292E;">  active</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">text</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;#ffd04b&quot;</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 遍历生成父菜单选项 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">template v</span><span style="color:#D73A49;">-for=</span><span style="color:#032F62;">&quot;menu in menus&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 有子菜单的时候，就用 el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">submenu，再绑个序号 index </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">submenu</span></span>
<span class="line"><span style="color:#24292E;">      v</span><span style="color:#D73A49;">-if=</span><span style="color:#032F62;">&quot;menu.subMenus &amp;&amp; menu.subMenus.length&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">index</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.index&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">key</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.index&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">template slot</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 绑个父菜单的 icon </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">i </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.icon&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 再绑个父菜单的名称 text </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> slot 其实类似于占位符，可以去 Vue 官方文档了解一下插槽 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">span slot</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{ {menu.text}}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">span</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">template</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">group</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 子菜单也要遍历，同时绑上子菜单名称 text，也要绑个序号 index </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item</span></span>
<span class="line"><span style="color:#24292E;">          v</span><span style="color:#D73A49;">-for=</span><span style="color:#032F62;">&quot;subMenu in menu.subMenus&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">key</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;subMenu.index&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">index</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;subMenu.index&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{ {subMenu.text}}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">group</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">submenu</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 没子菜单的时候，就用 el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item，也要绑个序号 index </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item v</span><span style="color:#D73A49;">-else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">index</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.index&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">key</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.index&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 绑个父菜单的 icon </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">i </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;menu.icon&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 再绑个父菜单的名称 text </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">span slot</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">{ {menu.text}}</span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">span</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">item</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">template</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">menu</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>如果需要绑定路由，我们还可以添加上一个路由的绑定信息。</p><p>前面我们说过 vue-router 中可以使用<code>&lt;router-link&gt;</code>组件来实现路由跳转，你可以试试看要怎么做，文末会有源码地址和最终页面效果参考哦。</p><p>下面我们来看看列表和表单的设计。</p><h4 id="列表和表单设计" tabindex="-1">列表和表单设计 <a class="header-anchor" href="#列表和表单设计" aria-label="Permalink to &quot;列表和表单设计&quot;">​</a></h4><p>我们看看列表的最终效果：</p>`,11),m=p(`<p>我们能看到，列表里每行内容包括这些信息：</p><ul><li><p>日期:<code>date</code>；</p></li><li><p>姓名:<code>name</code>；</p></li><li><p>电话:<code>phone</code>；</p></li><li><p>地址:<code>address</code>。</p></li></ul><p>在列表中的每一个数据项，还需要使用一个唯一标识来作为标记（<code>id</code>），便于用户增删查改时进行标识。</p><p>我们同样可以使用对象的方式来描述列表中的数据项：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> tableItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  date</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;2019-05-20&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 日期</span></span>
<span class="line"><span style="color:#E1E4E8;">  name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;被删&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 姓名</span></span>
<span class="line"><span style="color:#E1E4E8;">  phone</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;13888888888&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 电话</span></span>
<span class="line"><span style="color:#E1E4E8;">  address</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;深圳市南山区滨海大道 888 号&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 地址</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> tableItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">123</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  date</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;2019-05-20&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 日期</span></span>
<span class="line"><span style="color:#24292E;">  name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;被删&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 姓名</span></span>
<span class="line"><span style="color:#24292E;">  phone</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;13888888888&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 电话</span></span>
<span class="line"><span style="color:#24292E;">  address</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;深圳市南山区滨海大道 888 号&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 地址</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>那么列表则是由以上对象结构的数据组成的数组，我们可以使用 Element-Table 组件来绑定列表的 UI 展示。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> data 里绑定表格数据，同时这里调整了下样式 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span></span>
<span class="line"><span style="color:#E1E4E8;">  stripe</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">data</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;tableData&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  style</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #ebebeb;border-radius: 3px;margin-top: 10px;&quot;</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> prop 传绑定 tableData 的数据 id，表头名称 id，同时设了下宽度 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column prop</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> prop 传绑定 tableData 的数据 date，表头名称日期 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column prop</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;date&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;日期&quot;</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> prop 传绑定 tableData 的数据 name，表头名称姓名 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column prop</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;姓名&quot;</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> prop 传绑定 tableData 的数据 phone，表头名称电话 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column prop</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;phone&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;电话&quot;</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> prop 传绑定 tableData 的数据 address，表头名称地址 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column prop</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;地址&quot;</span><span style="color:#F97583;">&gt;&lt;/</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 该列固定在右侧，表头名称操作 </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">table</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">column fixed</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;right&quot;</span><span style="color:#E1E4E8;"> label</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;操作&quot;</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;300&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">template slot</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">scope</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;scope&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;!--</span><span style="color:#E1E4E8;"> 添加了个删除按钮，绑定了前面定义的删除事件 deleteTableItem，传入参数 id </span><span style="color:#F97583;">--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">el</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">button</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">click=&quot;deleteTableItem</span><span style="color:#E1E4E8;">(scope.row.id)</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">        type=&quot;</span><span style="color:#E1E4E8;">danger</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">        size=&quot;</span><span style="color:#E1E4E8;">small</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &gt;删除&lt;/el-button</span></span>
<span class="line"><span style="color:#9ECBFF;">      &gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">      &lt;!-- 分别添加了上移和下移按钮，绑定了前面定义的移动事件 moveTableItem，传入参数 id 和移动方向 --&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">      &lt;el-button @click=&quot;</span><span style="color:#B392F0;">moveTableItem</span><span style="color:#E1E4E8;">(scope.row.id, </span><span style="color:#9ECBFF;">&#39;up&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">&quot; size=&quot;</span><span style="color:#E1E4E8;">small</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &gt;上移&lt;/el-button</span></span>
<span class="line"><span style="color:#9ECBFF;">      &gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">      &lt;el-button @click=&quot;</span><span style="color:#B392F0;">moveTableItem</span><span style="color:#E1E4E8;">(scope.row.id, </span><span style="color:#9ECBFF;">&#39;down&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">&quot; size=&quot;</span><span style="color:#E1E4E8;">small</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">        &gt;下移&lt;/el-button</span></span>
<span class="line"><span style="color:#9ECBFF;">      &gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;/template&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">  &lt;/el-table-column&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;/el-table&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> data 里绑定表格数据，同时这里调整了下样式 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span></span>
<span class="line"><span style="color:#24292E;">  stripe</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;">data</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;tableData&quot;</span></span>
<span class="line"><span style="color:#24292E;">  style</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;border: 1px solid #ebebeb;border-radius: 3px;margin-top: 10px;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> prop 传绑定 tableData 的数据 id，表头名称 id，同时设了下宽度 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column prop</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> prop 传绑定 tableData 的数据 date，表头名称日期 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column prop</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;date&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;日期&quot;</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> prop 传绑定 tableData 的数据 name，表头名称姓名 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column prop</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;姓名&quot;</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> prop 传绑定 tableData 的数据 phone，表头名称电话 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column prop</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;phone&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;电话&quot;</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> prop 传绑定 tableData 的数据 address，表头名称地址 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column prop</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;地址&quot;</span><span style="color:#D73A49;">&gt;&lt;/</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 该列固定在右侧，表头名称操作 </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">table</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">column fixed</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;"> label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;操作&quot;</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;300&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">template slot</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">scope</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;scope&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;!--</span><span style="color:#24292E;"> 添加了个删除按钮，绑定了前面定义的删除事件 deleteTableItem，传入参数 id </span><span style="color:#D73A49;">--&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">el</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">button</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">click=&quot;deleteTableItem</span><span style="color:#24292E;">(scope.row.id)</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">        type=&quot;</span><span style="color:#24292E;">danger</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">        size=&quot;</span><span style="color:#24292E;">small</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">        &gt;删除&lt;/el-button</span></span>
<span class="line"><span style="color:#032F62;">      &gt;</span></span>
<span class="line"><span style="color:#032F62;">      &lt;!-- 分别添加了上移和下移按钮，绑定了前面定义的移动事件 moveTableItem，传入参数 id 和移动方向 --&gt;</span></span>
<span class="line"><span style="color:#032F62;">      &lt;el-button @click=&quot;</span><span style="color:#6F42C1;">moveTableItem</span><span style="color:#24292E;">(scope.row.id, </span><span style="color:#032F62;">&#39;up&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">&quot; size=&quot;</span><span style="color:#24292E;">small</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">        &gt;上移&lt;/el-button</span></span>
<span class="line"><span style="color:#032F62;">      &gt;</span></span>
<span class="line"><span style="color:#032F62;">      &lt;el-button @click=&quot;</span><span style="color:#6F42C1;">moveTableItem</span><span style="color:#24292E;">(scope.row.id, </span><span style="color:#032F62;">&#39;down&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">&quot; size=&quot;</span><span style="color:#24292E;">small</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">        &gt;下移&lt;/el-button</span></span>
<span class="line"><span style="color:#032F62;">      &gt;</span></span>
<span class="line"><span style="color:#032F62;">    &lt;/template&gt;</span></span>
<span class="line"><span style="color:#032F62;">  &lt;/el-table-column&gt;</span></span>
<span class="line"><span style="color:#032F62;">&lt;/el-table&gt;</span></span></code></pre></div><p>可以看到，列表中支持了选项的删除、上下移动操作，当我们将页面抽象为数据之后，页面的功能可以对应于数据的如下操作。</p><ul><li><p>删除：删除数组中的某个对象</p></li><li><p>位置移动：改变数组中对象的排序</p></li></ul><p>这些操作会改变并更新页面中的数据，使用 Vue 可以直接绑定数据操作的方法：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">export </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 绑定数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      menus</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> menus, </span><span style="color:#6A737D;">// 菜单数据</span></span>
<span class="line"><span style="color:#E1E4E8;">      tableData</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> tableData, </span><span style="color:#6A737D;">// 列表数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  methods</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 新增一个数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addTableItem</span><span style="color:#E1E4E8;">(item </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 添加到列表中，同时自增 id</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">({ ...item, id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.length </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 删除一个数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">deleteTableItem</span><span style="color:#E1E4E8;">(id) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 查找到对应的索引，然后删除</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">findIndex</span><span style="color:#E1E4E8;">((x) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> x.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> id);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 移动一个数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">moveTableItem</span><span style="color:#E1E4E8;">(id, direction) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> dataLength </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.length;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 查找到对应的索引，然后取出，再插入</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">findIndex</span><span style="color:#E1E4E8;">((x) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> x.id </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> id);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (direction) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 上移</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;up&quot;</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (index </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 第一个不进行上移</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> item </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, item);</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 下移</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;down&quot;</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (index </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> dataLength </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 最后一个不进行下移</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> item </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.tableData.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(index </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, item);</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">export </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 绑定数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      menus</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> menus, </span><span style="color:#6A737D;">// 菜单数据</span></span>
<span class="line"><span style="color:#24292E;">      tableData</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> tableData, </span><span style="color:#6A737D;">// 列表数据</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  methods</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 新增一个数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addTableItem</span><span style="color:#24292E;">(item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 添加到列表中，同时自增 id</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">({ ...item, id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.length </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 删除一个数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">deleteTableItem</span><span style="color:#24292E;">(id) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 查找到对应的索引，然后删除</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">findIndex</span><span style="color:#24292E;">((x) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> x.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> id);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(index, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 移动一个数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">moveTableItem</span><span style="color:#24292E;">(id, direction) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> dataLength </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.length;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 查找到对应的索引，然后取出，再插入</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">findIndex</span><span style="color:#24292E;">((x) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> x.id </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> id);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (direction) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 上移</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;up&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 第一个不进行上移</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(index, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, item);</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 下移</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;down&quot;</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> dataLength </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 最后一个不进行下移</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> item </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(index, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.tableData.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, item);</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>由于使用了 Vue 框架，当我们绑定的数据发生变化的时候，框架会自动帮我们更新到页面里（具体实现可以参考第 10 讲）。</p><p>列表常用于数据项的查看，而表单则通常用于对数据项的编辑和修改。对于同一个数据项来说，表单的数据结构与列表中数据项的结构是一致的，同样可以使用上述的对象结构来表达。</p><p>使用 Element-Form 组件将表单的数据进行绑定之后，就可以直接进行编辑了：</p>`,14),h=p('<p>到这里，我们已经实现了一个带菜单、列表和表单的页面了，单列表和单表单的页面同样可以通过数据抽象设计+UI 组件绑定的方式来实现。</p><p>这个页面也有挺多可以完善的地方，例如：</p><ul><li><p>左侧菜单可以支持收起；</p></li><li><p>列表支持修改；</p></li><li><p>列表支持批量删除；</p></li><li><p>表单支持校验手机号和其他选项不为空。</p></li></ul><p>这些就当作课后作业来完成，最终的实现可以参考以下链接：</p><ul><li><p><a href="http://vue-for-everyone.godbasin.com/2/index.html?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">页面的效果查看</a></p></li><li><p><a href="https://codepen.io/godbasin/pen/MMxdjm?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">codepen 在线查看代码</a></p></li><li><p><a href="https://github.com/godbasin/vue-element-demo/tree/master/2?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">查看源代码</a></p></li></ul><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><p>今天我带你使用开源前端框架、前端路由库，通过模块划分、组件设计、数据抽象的方式来快速搭建实现管理端。</p><p>虽然文章标题是三天实现管理端，实际上如果熟练之后，这些工作一天就能完成。</p><p>或许你会觉得，这管理端也太简单了吧。在实际工作中，大家也都会对管理端系统感到苦恼：管理端多半是增删改查的东西，做多了就会变成重复性的工作。</p><p>其实管理端的开发也可以不只是复制粘贴，我们还可以对管理端的主要功能进行抽象，然后通过配置化的方式来配置完成。如果实现了管理端的配置化，我们就可以从重复烦琐的工作中解放出来，去做更多有意思的事情。</p><p>在日常工作中，对于前端应用的实现，是否可以使用更好的方式、又可以怎样去在重复的工作中提升自己呢？我认为这些思考才是最重要的，这决定了我们只是一个会用工具的工具人，还是一个可以用工具去改变工作方式的思考者。</p>',11);function b(C,B,v,x,_,k){const a=e("Image");return t(),c("div",null,[E,l(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M00/40/A9/CioPOWCmFiiAX34aAADzfDJYIyY248.png"}),s(),y,l(a,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image6/M00/41/92/Cgp9HWCs0QuAPIVjAAE4SLRDAz0369.png"}),s(),i,l(a,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M01/40/A1/Cgp9HWCmFi-AJtWCAAAlvFQuXzE052.png"}),s(),F,u,A,l(a,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image6/M00/41/92/Cgp9HWCs0UeAb2wzAAIUanH4n50557.png"}),s(),D,d,l(a,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image6/M00/41/9A/CioPOWCs0W2ANX8WAAEiD-NxSGs936.png"}),s(),g,l(a,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M00/40/A9/CioPOWCmFmiAPxdiAAAYMM7YTz0757.png"}),s(),q,l(a,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image6/M00/41/92/Cgp9HWCs0ZqAXq9lAAHEks0ftMc985.png"}),s(),m,l(a,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image6/M00/40/A9/CioPOWCmFn-ARWOGAABLpwQSW1Y862.png"}),s(),h])}const V=o(r,[["render",b]]);export{T as __pageData,V as default};
