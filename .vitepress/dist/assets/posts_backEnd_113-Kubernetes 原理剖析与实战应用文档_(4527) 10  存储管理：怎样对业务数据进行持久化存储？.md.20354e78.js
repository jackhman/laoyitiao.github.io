import{_ as o,j as e,o as t,g as c,k as p,h as s,Q as l,s as a}from"./chunks/framework.cfb14fe0.js";const b=JSON.parse('{"title":"10存储管理：怎样对业务数据进行持久化存储？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4527) 10  存储管理：怎样对业务数据进行持久化存储？.md","filePath":"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4527) 10  存储管理：怎样对业务数据进行持久化存储？.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/113-Kubernetes 原理剖析与实战应用文档/(4527) 10  存储管理：怎样对业务数据进行持久化存储？.md"},E=l('<h1 id="_10存储管理-怎样对业务数据进行持久化存储" tabindex="-1">10存储管理：怎样对业务数据进行持久化存储？ <a class="header-anchor" href="#_10存储管理-怎样对业务数据进行持久化存储" aria-label="Permalink to &quot;10存储管理：怎样对业务数据进行持久化存储？&quot;">​</a></h1><p>通过上一节课的学习，我们知道了如何在 Pod 中使用 Volume 来保存数据。Volume 跟 Pod 的生命周期是绑定的，当 Pod被删除后，Volume 中的数据有可能会一同被删除，具体需要看对应的 volume plugin 的使用要求，你可以看上节课的对比表格。</p><p>而这里我们还需要考虑如下几个问题。</p><ol><li><p><strong>共享 Volume</strong>。目前 Pod 内的 Volume 其实跟 Pod 是存在静态的一一绑定关系，即生命周期绑定。这导致不同 Pod 之间无法共享 Volume。</p></li><li><p><strong>复用 Volume 中的数据</strong>。当 Pod 由于某种原因失败，被工作负载控制器删除重新创建后，我们需要能够复用 Volume 中的旧数据。</p></li><li><p><strong>Volume 自身的一些强关联诉求</strong>。对于有状态工作负载 StatefulSet 来说，当其管理的 Pod 由于所在的宿主机出现一些硬件或软件问题，比如磁盘损坏、kernel 异常等，Pod 重新&quot;长&quot;到别的节点上，这时该如何保证 Volume 和 Pod 之间强关联的关系？</p></li><li><p><strong>Volume 功能及语义扩展</strong>，比如容量大小、标签信息、扩缩容等。</p></li></ol><p>为此我们在 Kubernetes 中引入了一个专门的对象 Persistent Volume（简称 PV），将计算和存储进行分离，可以使用不同的控制器来分别管理。</p><p>同时通过 PV，我们也可以和 Pod 自身的生命周期进行解耦。一个 PV 可以被几个 Pod 同时使用，即使 Pod 被删除后，PV 这个对象依然存在，其他新的 Pod 依然可以复用。为了更好地描述这种关联绑定关系，易于使用，并且屏蔽更多用户并不关心的细节参数（比如 PV 由谁提供、创建在哪个 zone/region、怎么去访问到，等等），我们通过一个抽象对象 Persistent Volume Claim（PVC）来使用 PV。</p><p>我们可以把 PV 理解成是对实际的物理存储资源描述，PVC 是便于使用的抽象 API。在 Kubernetes 中，我们都是在 Pod 中通过PVC 的方式来使用 PV 的，见下图。</p>',7),y=a("p",null,[s("（"),a("a",{href:"https://phoenixnap.com/kb/wp-content/uploads/2020/01/graphic-of-persistent-volume-bond.png",target:"_blank",rel:"noreferrer"},"https://phoenixnap.com/kb/wp-content/uploads/2020/01/graphic-of-persistent-volume-bond.png"),s("）")],-1),F=a("p",null,"在 Kubernetes 中，创建 PV（PV Provision） 有两种方式，即静态和动态，如下图所示。",-1),i=a("p",null,[s("（"),a("a",{href:"https://platform9.com/wp-content/uploads/2019/05/kubernetes-Persistent-volumes-claims-storage-classes.jpg",target:"_blank",rel:"noreferrer"},"https://platform9.com/wp-content/uploads/2019/05/kubernetes-Persistent-volumes-claims-storage-classes.jpg"),s("）")],-1),C=a("h3",{id:"静态-pv",tabindex:"-1"},[s("静态 PV "),a("a",{class:"header-anchor",href:"#静态-pv","aria-label":'Permalink to "静态 PV"'},"​")],-1),d=l(`<p>（<a href="https://thenewstack.io/wp-content/uploads/2016/09/Kubernetes_PVC.png" target="_blank" rel="noreferrer">https://thenewstack.io/wp-content/uploads/2016/09/Kubernetes_PVC.png</a>）</p><p>我们先来看静态 PV（Static PV），管理员通过手动的方式在后端存储平台上创建好对应的 Volume，然后通过 PV 定义到 Kubernetes 中去。开发者通过 PVC 来使用。我们来看个 HostPath 类型的 PV 例子：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">PersistentVolume</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-volume</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># pv 的名字</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># pv 的一些label</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">local</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">storageClassName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">manual</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">capacity</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># 该 pv 的容量</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">storage</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">accessModes</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># 该 pv 的接入模式</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#9ECBFF;">ReadWriteOnce</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hostPath</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># 该 pv 使用的 hostpath 类型，还支持通过 CSI 接入其他 plugin</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/mnt/data&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">PersistentVolume</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-volume</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># pv 的名字</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># pv 的一些label</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">local</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">storageClassName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">manual</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">capacity</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># 该 pv 的容量</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">storage</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10Gi</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">accessModes</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># 该 pv 的接入模式</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#032F62;">ReadWriteOnce</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hostPath</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># 该 pv 使用的 hostpath 类型，还支持通过 CSI 接入其他 plugin</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/mnt/data&quot;</span></span></code></pre></div><p>这里，我们定义了一个名为task-pv-volume的 PV，PV 是集群的资源，并不属于某个 namespace。其中storageClassName这个字段是某个StorageClass对象的名字。我们会在下一段动态 PV 中讲解StorageClass的作用。</p><p>对于每一个 PV，我们都要为其设置存储能力，目前只支持对存储空间的设置，比如我们这里设置了 10G 的空间大小。未来社区还会加入其他的配置，诸如 IOPS（Input/Output Operations Per Second，每秒输入输出次数）、吞吐量等。</p><p>这里头accessMode可以指定该 PV 的几种访问挂载方式：</p><ul><li><p>ReadWriteOnce（RWO）表示该卷只可以以读写方式挂载到一个 Pod 内；</p></li><li><p>ReadOnlyMany（ ROX）表示该卷可以挂载到多个节点上，并被多个 Pod 以只读方式挂载；</p></li><li><p>ReadWriteMany（RWX）表示卷可以被多个节点以读写方式挂载供多个 Pod 同时使用。</p></li></ul><p>注意一个 PV 只能有一种访问挂载模式。不同的 volume plugin 支持的 accessMode 并不相同，在使用的时候，你可以参照官方的<a href="https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/#access-modes" target="_blank" rel="noreferrer">这个表格</a>进行选择。</p><p>我们创建好后查看这个 PV：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">task-pv-volume</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">CAPACITY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">ACCESSMODES</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">RECLAIMPOLICY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">CLAIM</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">STORAGECLASS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">REASON</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">AGE</span></span>
<span class="line"><span style="color:#B392F0;">task-pv-volume</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">RWO</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">Retain</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">Available</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">manual</span><span style="color:#E1E4E8;">                   </span><span style="color:#79B8FF;">4</span><span style="color:#9ECBFF;">s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">task-pv-volume</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">             </span><span style="color:#032F62;">CAPACITY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">ACCESSMODES</span><span style="color:#24292E;">   </span><span style="color:#032F62;">RECLAIMPOLICY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">      </span><span style="color:#032F62;">CLAIM</span><span style="color:#24292E;">     </span><span style="color:#032F62;">STORAGECLASS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">REASON</span><span style="color:#24292E;">    </span><span style="color:#032F62;">AGE</span></span>
<span class="line"><span style="color:#6F42C1;">task-pv-volume</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">       </span><span style="color:#032F62;">RWO</span><span style="color:#24292E;">           </span><span style="color:#032F62;">Retain</span><span style="color:#24292E;">          </span><span style="color:#032F62;">Available</span><span style="color:#24292E;">             </span><span style="color:#032F62;">manual</span><span style="color:#24292E;">                   </span><span style="color:#005CC5;">4</span><span style="color:#032F62;">s</span></span></code></pre></div><p>可以看到，这个 PV 的状态为Available（可用）。</p><p>这里我们还看到上面<code>kubectl get</code>的输出里面有个 ReclaimPolicy 字段，该字段表明对 PV 的回收策略，默认是 Retain，即 PV 使用完后数据保留，需要由管理员手动清理数据。除了 Retain 外，还支持如下策略：</p><ul><li><p>Recycle，即回收，这个时候会清除 PV 中的数据；</p></li><li><p>Delete，即删除，这个策略常在云服务商的存储服务中使用到，比如 AWS EBS。</p></li></ul><p>下面我们再创建一个 PVC：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">PersistentVolumeClaim</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-claim</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">dmeo</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">storageClassName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">manual</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">accessModes</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#9ECBFF;">ReadWriteOnce</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">storage</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">3Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">PersistentVolumeClaim</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-claim</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">dmeo</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">storageClassName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">manual</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">accessModes</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#032F62;">ReadWriteOnce</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">storage</span><span style="color:#24292E;">: </span><span style="color:#032F62;">3Gi</span></span></code></pre></div><p>创建好了以后，Kubernetes 会为 PVC 匹配满足条件的 PV。我们在 PVC 里面指定storageClassName为 manua，这个时候就只会去匹配storageClassName同样为 manual 的 PV。一旦发现合适的 PV 后，就可以绑定到该 PV 上。</p><p>PVC 是 namespace 级别的资源，我们来创建看看:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pvc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">VOLUME</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">CAPACITY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">ACCESS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MODES</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STORAGECLASS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">AGE</span></span>
<span class="line"><span style="color:#B392F0;">task-pv-claim</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Bound</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">task-pv-volume</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">RWO</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">manual</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">9</span><span style="color:#9ECBFF;">s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pvc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">            </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">VOLUME</span><span style="color:#24292E;">           </span><span style="color:#032F62;">CAPACITY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">ACCESS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MODES</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STORAGECLASS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">AGE</span></span>
<span class="line"><span style="color:#6F42C1;">task-pv-claim</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Bound</span><span style="color:#24292E;">    </span><span style="color:#032F62;">task-pv-volume</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">       </span><span style="color:#032F62;">RWO</span><span style="color:#24292E;">            </span><span style="color:#032F62;">manual</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">9</span><span style="color:#032F62;">s</span></span></code></pre></div><p>我们可以看到 这个 PVC 已经和我们上面的 PV 绑定起来了。我们再来查看下task-pv-volume这个 PV 对象，可以看到它的状态也从Available变成了 Bound。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">task-pv-volume</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">CAPACITY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">ACCESS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">MODES</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">RECLAIM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">POLICY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">CLAIM</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">STORAGECLASS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">REASON</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">AGE</span></span>
<span class="line"><span style="color:#B392F0;">task-pv-volume</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">RWO</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">Retain</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">Bound</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">default/task-pv-claim</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">manual</span><span style="color:#E1E4E8;">                  </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">m12s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">task-pv-volume</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">             </span><span style="color:#032F62;">CAPACITY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">ACCESS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">MODES</span><span style="color:#24292E;">   </span><span style="color:#032F62;">RECLAIM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">POLICY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">CLAIM</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">STORAGECLASS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">REASON</span><span style="color:#24292E;">   </span><span style="color:#032F62;">AGE</span></span>
<span class="line"><span style="color:#6F42C1;">task-pv-volume</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">       </span><span style="color:#032F62;">RWO</span><span style="color:#24292E;">            </span><span style="color:#032F62;">Retain</span><span style="color:#24292E;">           </span><span style="color:#032F62;">Bound</span><span style="color:#24292E;">    </span><span style="color:#032F62;">default/task-pv-claim</span><span style="color:#24292E;">   </span><span style="color:#032F62;">manual</span><span style="color:#24292E;">                  </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">m12s</span></span></code></pre></div><p>PV 一般会有如下五种状态：</p><ol><li><p>Pending 表示目前该 PV 在后端存储系统中还没创建完成；</p></li><li><p>Available 即闲置可用状态，这个时候还没有被绑定到任何 PVC 上；</p></li><li><p>Bound 就像上面例子里似的，这个时候已经绑定到某个 PVC 上了；</p></li><li><p>Released 表示已经绑定的 PVC 已经被删掉了，但资源还未被回收掉；</p></li><li><p>Failed 表示回收失败。</p></li></ol><p>同样，对于 PVC 来说，也有如下三种状态：</p><ol><li><p>Pending 表示还未绑定任何 PV；</p></li><li><p>Bound 表示已经和某个 PV 进行了绑定；</p></li><li><p>Lost 表示关联的 PV 失联。</p></li></ol><p>下面我们来看看，如何在 Pod 中使用静态的 PV。看如下的例子：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-pod</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">demo</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">volumes</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-storage</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">persistentVolumeClaim</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">claimName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-claim</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-container</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:1.14.2</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">containerPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;http-server&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">volumeMounts</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">mountPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/usr/share/nginx/html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">task-pv-storage</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-pod</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">demo</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">volumes</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-storage</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">persistentVolumeClaim</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">claimName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-claim</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-container</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:1.14.2</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">containerPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;http-server&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">volumeMounts</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">mountPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/usr/share/nginx/html&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">task-pv-storage</span></span></code></pre></div><p>创建完成以后：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">task-pv-pod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">READY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">RESTARTS</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">AGE</span></span>
<span class="line"><span style="color:#B392F0;">task-pv-pod</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">/1</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Running</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">82</span><span style="color:#9ECBFF;">s</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">task-pv-pod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/bin/bash</span></span>
<span class="line"><span style="color:#B392F0;">root@task-pv-pod:/#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">df</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-h</span></span>
<span class="line"><span style="color:#B392F0;">Filesystem</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Size</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Used</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Avail</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Use%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Mounted</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span></span>
<span class="line"><span style="color:#B392F0;">overlay</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">40</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">5.0</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">33</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">14</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span></span>
<span class="line"><span style="color:#B392F0;">tmpfs</span><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">64</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">64</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/dev</span></span>
<span class="line"><span style="color:#B392F0;">tmpfs</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/sys/fs/cgroup</span></span>
<span class="line"><span style="color:#B392F0;">/dev/vda1</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">40</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">5.0</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">33</span><span style="color:#9ECBFF;">G</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">14</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/hosts</span></span>
<span class="line"><span style="color:#B392F0;">shm</span><span style="color:#E1E4E8;">              </span><span style="color:#79B8FF;">64</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">64</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/dev/shm</span></span>
<span class="line"><span style="color:#B392F0;">overlay</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">4.0</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">992</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#B392F0;">tmpfs</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">12</span><span style="color:#9ECBFF;">K</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/run/secrets/kubernetes.io/serviceaccount</span></span>
<span class="line"><span style="color:#B392F0;">tmpfs</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/proc/acpi</span></span>
<span class="line"><span style="color:#B392F0;">tmpfs</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">996</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/sys/firmware</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">task-pv-pod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">          </span><span style="color:#032F62;">READY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">    </span><span style="color:#032F62;">RESTARTS</span><span style="color:#24292E;">   </span><span style="color:#032F62;">AGE</span></span>
<span class="line"><span style="color:#6F42C1;">task-pv-pod</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">/1</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Running</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">82</span><span style="color:#032F62;">s</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#032F62;">task-pv-pod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/bin/bash</span></span>
<span class="line"><span style="color:#6F42C1;">root@task-pv-pod:/#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">df</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-h</span></span>
<span class="line"><span style="color:#6F42C1;">Filesystem</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Size</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Used</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Avail</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Use%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Mounted</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span></span>
<span class="line"><span style="color:#6F42C1;">overlay</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">40</span><span style="color:#032F62;">G</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">5.0</span><span style="color:#032F62;">G</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">33</span><span style="color:#032F62;">G</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">14</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span></span>
<span class="line"><span style="color:#6F42C1;">tmpfs</span><span style="color:#24292E;">            </span><span style="color:#005CC5;">64</span><span style="color:#032F62;">M</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">64</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/dev</span></span>
<span class="line"><span style="color:#6F42C1;">tmpfs</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/sys/fs/cgroup</span></span>
<span class="line"><span style="color:#6F42C1;">/dev/vda1</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">40</span><span style="color:#032F62;">G</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">5.0</span><span style="color:#032F62;">G</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">33</span><span style="color:#032F62;">G</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">14</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/hosts</span></span>
<span class="line"><span style="color:#6F42C1;">shm</span><span style="color:#24292E;">              </span><span style="color:#005CC5;">64</span><span style="color:#032F62;">M</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">64</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/dev/shm</span></span>
<span class="line"><span style="color:#6F42C1;">overlay</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">4.0</span><span style="color:#032F62;">M</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">992</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#6F42C1;">tmpfs</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">12</span><span style="color:#032F62;">K</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/run/secrets/kubernetes.io/serviceaccount</span></span>
<span class="line"><span style="color:#6F42C1;">tmpfs</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/proc/acpi</span></span>
<span class="line"><span style="color:#6F42C1;">tmpfs</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">996</span><span style="color:#032F62;">M</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">%</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/sys/firmware</span></span></code></pre></div><p>可以看到，PV 已经正确挂载到 Pod 内。</p><p>静态 PV 最大的问题就是使用起来不够方便，都是管理员提前创建好一批指定规格的 PV，无法做到按需创建。使用过程中，经常会遇到由于资源大小不匹配，规格不对等，造成 PVC 无法绑定 PV 的情况。同时还会造成资源浪费，比如一个只需要 1G 空间的 Pod，绑定了 10G 的 PV。</p><p>这些问题，都可以通过动态 PV 来解决。</p><h3 id="动态-pv" tabindex="-1">动态 PV <a class="header-anchor" href="#动态-pv" aria-label="Permalink to &quot;动态 PV&quot;">​</a></h3><p>要想动态创建 PV，我们需要一些参数来帮助我们创建 PV。这里我们用StorageClass这个对象来描述，你可以在 Kubernetes 中定义很多的 StorageClass，如下就是一个 Storage 的定义例子：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">storage.k8s.io/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">StorageClass</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">fast-rbd-sc</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotation</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">storageclass.kubernetes.io/is-default-class</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#85E89D;">provisioner</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kubernetes.io/rbd</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 必填项，用来指定volume plugin来创建PV的物理资源</span></span>
<span class="line"><span style="color:#85E89D;">parameters</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># 一些参数</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">monitors</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10.16.153.105:6789</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">adminId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">adminSecretName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ceph-secret</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">adminSecretNamespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-system</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">pool</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">userId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">userSecretName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ceph-secret-user</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">userSecretNamespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">fsType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ext4</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">imageFormat</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">imageFeatures</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;layering&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">storage.k8s.io/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">StorageClass</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">fast-rbd-sc</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotation</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">storageclass.kubernetes.io/is-default-class</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#22863A;">provisioner</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kubernetes.io/rbd</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 必填项，用来指定volume plugin来创建PV的物理资源</span></span>
<span class="line"><span style="color:#22863A;">parameters</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># 一些参数</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">monitors</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10.16.153.105:6789</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">adminId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">adminSecretName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ceph-secret</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">adminSecretNamespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-system</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">pool</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">userId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">userSecretName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ceph-secret-user</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">userSecretNamespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">fsType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ext4</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">imageFormat</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">imageFeatures</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;layering&quot;</span></span></code></pre></div><p>你可以通过注释<code>storageclass.kubernetes.io/is-default-class</code>来指定默认的 StorageClass。这样新创建出来的 PVC 中的 storageClassName 字段就会自动使用默认的 StorageClass。</p><p>这里有个 provisioner 字段是必填项，主要用于指定使用那个 volume plugin 来创建 PV。没错，这里正是对应我们上节课讲过的 CSI driver 的名字。</p><p>现在我们来讲一下动态 PV 工作的过程:</p>`,37),u=l(`<p>（<a href="https://lenadroid.github.io/posts/cassandra-kube/4.png" target="_blank" rel="noreferrer">https://lenadroid.github.io/posts/cassandra-kube/4.png</a>）</p><p>首先我们定义了一个 StorageClass。当用户创建好 Pod 以后，指定了 PVC，这个时候 Kubernetes 就会根据 StorageClass 中定义的 Provisioner 来调用对应的 plugin 来创建 PV。PV 创建成功后，跟 PVC 进行绑定，挂载到 Pod 中使用。</p><h3 id="statefulset-中怎么使用-pv-和-pvc" tabindex="-1">StatefulSet 中怎么使用 PV 和 PVC？ <a class="header-anchor" href="#statefulset-中怎么使用-pv-和-pvc" aria-label="Permalink to &quot;StatefulSet 中怎么使用 PV 和 PVC？&quot;">​</a></h3><p>还记得我们之前讲 StatefulSet 中遗留的问题吗？对于 StatefulSet 管理的 Pod，每个 Pod 使用的 Volume 中的数据都不一样，而且相互之间关系是需要强绑定的。这个时候就不能在 StatefulSet 的<code>spec.template</code>去直接指向 PV 和 PVC了。于是我们在 StatefulSet 中使用了volumeClaimTemplate，有了这个 template 我们就可以为每一个 Pod 生成一个单独的 PVC，并且绑定 PV 了，从而实现有状态服务各个 Pod 都有自己专属的存储。这里生成的 PVC 名字跟 StatefulSet 的 Pod 名字一样，都是带有特定的序列号的。</p><p>你可以看看这里 StatefulSet 的例子:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">StatefulSet</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">web</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">serviceName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;nginx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">matchLabels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">k8s.gcr.io/nginx-slim:0.8</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">containerPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">web</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">volumeMounts</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">www</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">mountPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">volumeClaimTemplates</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">www</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">accessModes</span><span style="color:#E1E4E8;">: [ </span><span style="color:#9ECBFF;">&quot;ReadWriteOnce&quot;</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">storage</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">StatefulSet</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">web</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">serviceName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;nginx&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">matchLabels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">k8s.gcr.io/nginx-slim:0.8</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">containerPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">web</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">volumeMounts</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">www</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">mountPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">volumeClaimTemplates</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">www</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">accessModes</span><span style="color:#24292E;">: [ </span><span style="color:#032F62;">&quot;ReadWriteOnce&quot;</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">storage</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span></code></pre></div><h3 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h3><p>这节课我们讲了 PV、PVC 以及 StorageClass，它们直接的关系以及设计思路。你也许刚接触这几个概念的时候，有些稀里糊涂，但是通过分析各个对象要解决的问题，可以帮助你更好地掌握它们。</p><p>好的，如果你对本节课有什么想法或者疑问，欢迎你在留言区留言，我们一起讨论。</p>`,9);function m(B,A,g,v,h,P){const n=e("Image");return t(),c("div",null,[E,p(n,{alt:"image.png",src:"https://s0.lgstatic.com/i/image/M00/56/E9/Ciqc1F9sO-OAQHEDAABbxhBYt9I383.png"}),s(),y,F,p(n,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image/M00/56/E9/Ciqc1F9sO-6AfcmHAAJfQ6jac2Q610.png"}),s(),i,C,p(n,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image/M00/56/F4/CgqCHl9sO_WAAgmIAALzurk_uD0139.png"}),s(),d,p(n,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image/M00/56/E9/Ciqc1F9sPBCAbuyAAAoLbbMYu80674.png"}),s(),u])}const V=o(r,[["render",m]]);export{b as __pageData,V as default};
