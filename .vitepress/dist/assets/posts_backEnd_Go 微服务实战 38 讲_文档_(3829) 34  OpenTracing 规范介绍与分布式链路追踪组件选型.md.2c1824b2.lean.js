import{_ as p,j as r,o as l,g as o,k as a,h as i,s as e,Q as t}from"./chunks/framework.e0c66c3f.js";const j=JSON.parse('{"title":"分布式链路追踪规范：OpenTracing ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3829) 34  OpenTracing 规范介绍与分布式链路追踪组件选型.md","filePath":"posts/backEnd/Go 微服务实战 38 讲_文档/(3829) 34  OpenTracing 规范介绍与分布式链路追踪组件选型.md","lastUpdated":1696338709000}'),g={name:"posts/backEnd/Go 微服务实战 38 讲_文档/(3829) 34  OpenTracing 规范介绍与分布式链路追踪组件选型.md"},s=e("p",null,"在上一课时，我们介绍了分布式链路追踪组件的相关背景和概念。市面上有多款流行的分布式链路追踪组件，包括 Zipkin、Jaeger、SkyWalking 和 Pinpoint 等，那它们具体的工作特性是怎样的呢？在实际工作中，我们又应该如何选型呢？",-1),_=e("p",null,"下面我们就首先介绍下分布式链路追踪中的 OpenTracing 规范，然后再分析下这几款组件的相关特性，以及选型时的对比指标。",-1),c=e("h3",{id:"分布式链路追踪规范-opentracing",tabindex:"-1"},[i("分布式链路追踪规范：OpenTracing "),e("a",{class:"header-anchor",href:"#分布式链路追踪规范-opentracing","aria-label":'Permalink to "分布式链路追踪规范：OpenTracing"'},"​")],-1),k=e("p",null,[i("Tracing 是在 20 世纪 90 年代就已出现的技术，虽然提出的时间很早，但真正让该领域流行起来的还是源于 Google 关于 Dapper 组件的一篇论文。分布式链路追踪组件经过了多年的发展，特别是微服务架构出现之后，各大公司也加大了对这块儿的投入和研发，但是对于链路追踪组件来说，其核心步骤有："),e("strong",null,"代码埋点、数据存储"),i(" 和"),e("strong",null,"查询展示"),i("。链路追踪组件的组成，如下图所示：")],-1),h=e("p",null,"链路追踪组件的组成",-1),d=e("p",null,[i("目前流行的链路追踪组件有"),e("strong",null,"Jaeger、Zipkin、SkyWalking"),i(" 和"),e("strong",null,"Pinpoint"),i("。但是，在数据采集过程中，对用户代码的入侵和不同系统 API 的兼容性，导致切换链路追踪系统需要巨大的成本。")],-1),T=e("p",null,"OpenTracing 的诞生主要是为了解决不同的分布式链路追踪平台的 API 兼容问题。OpenTracing 通过提供与平台和厂商无关 API 的方式，使得开发人员能够很方便地切换追踪系统。",-1),P=e("p",null,"那到底什么是 OpenTracing 呢？根据官方的介绍，OpenTracing 是一个轻量级的标准化层，位于应用程序/类库和追踪或日志分析程序之间。它提供了多种语言库的支持，包括 Go、Java、Python、Objective-C 和 C++ 等，通过引入这些通信标准库，我们就可以将追踪的信息发送到指定的组件。",-1),S=e("p",null,"OpenTracing 的架构如下图所示，从图中我们可以看到 OpenTracing 支持 Zipkin、LightStep 和 Appdash 等追踪组件，并且可以轻松集成到开源的框架中，例如 gRPC、Flask、Django 和 Go-kit 等。",-1),u=t("",7),A=t("",9),m=t("",4),C=t("",8),b=e("p",null,"SkyWalking 6.x 架构图",-1),I=e("p",null,[i("SkyWalking 支持的存储组件有：ES、H2、MySQL、TiDB 和 Sharding Sphere。SkyWalking 的 UI 界面提供的链路追踪查询较为简单，但 SkyWalking 拥有非常活跃的中文社区，支持多种语言的探针，且对国产开源软件全面支持。"),e("strong",null,"SkyWalking 在探针性能方面表现优异，并且探针的性能损耗较低"),i("。")],-1),J=e("h4",{id:"_4-链路统计详细的-pinpoint",tabindex:"-1"},[i("4. 链路统计详细的 Pinpoint "),e("a",{class:"header-anchor",href:"#_4-链路统计详细的-pinpoint","aria-label":'Permalink to "4. 链路统计详细的 Pinpoint"'},"​")],-1),y=e("p",null,[i("Pinpoint 是一个 APM 工具，适用于 Java 、PHP 编写的大型分布式系统进行链路追踪。也就是说，"),e("strong",null,"Go 语言项目不能直接应用 Pinpoint，需要使用代理进行改造"),i("。这里进行简单介绍，因为其链路追踪的分析较为完善。Pinpoint 也是受 Dapper 的启发，通过追踪分布式应用程序之间的调用链，帮助分析分布式系统的整体结构，以及服务和组件相互之间的依赖关系，如下图所示：")],-1),W=e("p",null,"Pinpoint 链路监控页面",-1),v=e("p",null,[e("strong",null,"Pinpoint 的追踪数据粒度非常细，用户界面功能强大，并且服务调用展示做得非常丰富"),i(" ，在这方面它优于市面上大多数组件。Pinpoint 使用 HBase 作为存储带来了海量存储的能力，但丰富的数据背后，必然需要大量的数据采集，因此在这几款常用链路追踪组件中，"),e("strong",null,"Pinpoint 的探针性能最低"),i("，在生产环境需要注意应用服务的采样率，过高的话就会影响系统的吞吐量。")],-1),O=e("p",null,"另外，Pinpoint 目前仅支持 Java 和 PHP 语言，采用字节码增强方式去埋点，所以在埋点时不需要修改业务代码，是非侵入式的，非常适合项目已经完成之后再增加调用链监控的实践场景。Pinpoint 并不支持除 Java、PHP 语言之外的探针，在 Go 语言项目中应用需要基于 Pinpoint 进行二次封装开发。",-1),Z=e("h4",{id:"_5-组件的指标对比",tabindex:"-1"},[i("5. 组件的指标对比 "),e("a",{class:"header-anchor",href:"#_5-组件的指标对比","aria-label":'Permalink to "5. 组件的指标对比"'},"​")],-1),E=e("p",null,"上面我们对 4 种当前流行的链路追踪组件进行了简单介绍，相信你已经对每个组件的组成和特性已经有了大概的了解。为便于你更好地理解，下面我们再根据如下的几个指标对它们进行直观的对比。",-1),G=t("",8);function f(N,D,M,q,U,x){const n=r("Image");return l(),o("div",null,[s,_,c,k,a(n,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/62/8C/CgqCHl-SjWKARLMtAACUh0mRaIk002.png"}),i(),h,d,T,P,S,a(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-Gvg-ACKv9AAHli59gxME260.png"}),i(),u,a(n,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-Gvh6AVPPFAABoGNmX9as934.png"}),i(),A,a(n,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/5E/80/CgqCHl-GvjaAElw5AAEfQ3MA-FU057.png"}),i(),m,a(n,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-Gvj6AI-5SAAHxKyQQHhk929.png"}),i(),C,a(n,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvlOARTWZAANEwHNPMrQ811.png"}),i(),b,I,J,y,a(n,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/5E/75/Ciqc1F-GvmSAYLmbAAI33y2CSDk491.png"}),i(),W,v,O,Z,E,a(n,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image/M00/62/81/Ciqc1F-SjXKAKnGuAAGS0Nd0F1o697.png"}),G])}const V=p(g,[["render",f]]);export{j as __pageData,V as default};
