import{_ as p,j as n,o,g as s,k as t,h as i,Q as a,s as e}from"./chunks/framework.4e7d56ce.js";const q=JSON.parse('{"title":"04案例驱动：如何基于Spring框架来学习响应式编程？","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring 响应式编程实战_文档/(6986) 04  案例驱动：如何基于 Spring 框架来学习响应式编程？.md","filePath":"posts/backEnd/Spring 响应式编程实战_文档/(6986) 04  案例驱动：如何基于 Spring 框架来学习响应式编程？.md","lastUpdated":1696682708000}'),S={name:"posts/backEnd/Spring 响应式编程实战_文档/(6986) 04  案例驱动：如何基于 Spring 框架来学习响应式编程？.md"},g=a("",12),c=e("p",null,"图 1 spring-boot-starter-webflux 的依赖组件",-1),_=e("p",null,"Spring WebFlux 提供了完整的支持响应式开发的服务端技术栈，Spring WebFlux 的整体架构如下图所示。",-1),l=e("p",null,"图 2 Spring WebFlux 架构图（来自 Spring 官网）",-1),u=e("p",null,"上图针对传统 spring-webmvc 技术栈和新型的 spring-webflux 技术栈做了一个对比。我们从上往下看，位于最上层所提供的实际上是面向开发人员的开发模式，注意左上部分两者存在一个交集，即 Spring WebFlux 既支持基于 @Controller、@RequestMapping 等注解的传统开发模式，又支持基于 Router Functions 的函数式开发模式。本课程后续内容将分别使用这两个模式来创建响应式 RESTful 服务。",-1),d=e("p",null,"关于框架背后的实现原理，传统的 Spring MVC 构建在 Java EE 的 Servlet 标准之上，该标准本身就是阻塞和同步的。在最新版本的 Servlet 中虽然也添加了异步支持，但是在等待请求的过程中，Servlet 仍然在线程池中保持着线程。而 Spring WebFlux 则是构建在响应式流以及它的实现框架 Reactor 的基础之上的一个开发框架，因此可以基于 HTTP 协议用来构建异步非阻塞的 Web 服务。",-1),h=e("p",null,"最后，我们来看一下位于底部的容器支持。显然，Spring MVC 是运行在传统的 Servlet 容器之上，而 Spring WebFlux 则需要支持异步的运行环境，比如 Netty、Undertow 以及 Servlet 3.1 版本以上的 Tomcat 和 Jetty，因为在 Servlet 3.1 中引入了异步 I/O 支持。",-1),b=e("p",null,"由于 WebFlux 提供了异步非阻塞的 I/O 特性，因此非常适合用来开发 I/O 密集型服务。而在使用 Spring MVC 就能满足的场景下，就不需要更改为 WebFlux。通常，我也不大建议你将 WebFlux 和 Spring MVC 混合使用，因为这种开发方式显然无法保证全栈式的响应式流。",-1),v=e("h4",{id:"spring-data-reactive",tabindex:"-1"},[i("Spring Data Reactive "),e("a",{class:"header-anchor",href:"#spring-data-reactive","aria-label":'Permalink to "Spring Data Reactive"'},"​")],-1),R=e("p",null,"我们知道 Spring Data 是 Spring 家族中专门针对数据访问而开发的一个框架，针对各种数据存储媒介抽象了一批 Repository 接口以简化开发过程。而在 Spring Data 的基础上，Spring 5 也全面提供了一组响应式数据访问模型。",-1),m=e("p",null,"在介绍如何使用 Spring Data 实现响应式数据访问模型之前，我们再来看一下关于 Spring Boot 2 的另一张官网架构图，如下所示。",-1),C=a("",8),x=a("",9),T=a("",7);function A(W,P,f,D,E,k){const r=n("Image");return o(),s("div",null,[g,t(r,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M01/21/3A/Cgp9HWBUIkiAV-sbAABUZLGbKGw167.png"}),i(),c,_,t(r,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M01/21/37/CioPOWBUIk-ACq-RAACQeZA8Cyk312.png"}),i(),l,u,d,h,b,v,R,m,t(r,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M01/21/3A/Cgp9HWBUIlmAPXzcAACWjgTTFkY994.png"}),i(),C,t(r,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image6/M01/21/3A/Cgp9HWBUImGAJDTfAABpy3ZSzWs199.png"}),i(),x,t(r,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image6/M01/21/3A/Cgp9HWBUImuAJdzJAADUPzZXTjQ358.png"}),i(),T])}const B=p(S,[["render",A]]);export{q as __pageData,B as default};
