import{_ as o,j as e,o as t,g as c,k as a,h as n,Q as p,s as l}from"./chunks/framework.b3d8e22e.js";const x=JSON.parse('{"title":"部署 Nacos 注册中心与配置中心 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/SpringCloud Alibaba 实战_文档/(6763) 18  综合应用：Seata 分布式事务实战教程.md","filePath":"posts/backEnd/SpringCloud Alibaba 实战_文档/(6763) 18  综合应用：Seata 分布式事务实战教程.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/SpringCloud Alibaba 实战_文档/(6763) 18  综合应用：Seata 分布式事务实战教程.md"},E=p("<p>在前面的章节，我们分别讲解了 Spring Cloud Alibaba 中主要的组成部分，其中包括：注册中心与配置管理组件 Nacos、Ribbon 客户端负载均衡、OpenFeign 与 Dubbo 通信组件、Sentinel 服务限流与熔断保护组件、Sleuth+Zipkin 与 Skywalking 实现分布式追踪、Seata 分布式事务组件以及 RocketMQ 消息异步通信中间件，这些组件各司其职为微服务架构提供了有效的支撑。</p><p>从本章开始，我们综合运用这些组件，再结合我多年来分布式开发的经验，为你分享一些成熟的组合搭配与案例，让你在分布式开发这条路上少走些弯路。</p><p>本讲咱们进入第一个话题：利用 Seata 与 Nacos 构建分布式事务架构。在第16讲我们介绍了Seata 的使用原理及解决方案，但并未涉及落地的开发技巧。今天我们补上这一块内容，我将手把手带你搭建可用的 Seata 分布式事务架构。</p><p>本讲涉及的内容较多，按搭建顺序将分为以下几个阶段：</p><ul><li><p>部署 Nacos 注册中心与配置中心；</p></li><li><p>部署 TC 组件 Seata-Server；</p></li><li><p>开发 RM 资源管理器；</p></li><li><p>开发 TM 事务管理器；</p></li><li><p>验证分布式事务。</p></li></ul><p>下面我们一步步实现前面的&quot;商城销售积分&quot;应用案例。</p>",6),y=l("p",null,"案例示意图",-1),i=l("p",null,"首先咱们来看整体架构图：",-1),d=p(`<p>基于 Seata 的分布式事务架构</p><p>我在 192.168.31.103 虚拟机构建了 5 个 MySQL 5.7 数据库实例，通过设置不同端口来模拟 5 台数据库服务器，它们的用途是：</p><ul><li><p>3309 端口数据库存储 Nacos 配置信息以及 Seata-Server 的分布式事务数据；</p></li><li><p>3305 端口数据库存储 TM 端商城数据；</p></li><li><p>3306 端口数据库存储 RM 端订单服务数据；</p></li><li><p>3307 端口数据库存储 RM 端会员积分数据；</p></li><li><p>3308 端口数据库存储 RM 端库存数据。</p></li></ul><p>应用方面包含 6 个节点：</p><ul><li><p>192.168.31.103:8848 节点是 Nacos 注册中心与配置中心服务器，提供微服务架构核心支撑；</p></li><li><p>192.168.31.107:8091 节点是 Seata-Server，也就是 TC 组件，用于协调全局事务的开启、提交与回滚；</p></li><li><p>192.168.31.106:8001 节点是 TM，也就是商城应用，TM用于定义事务边界与事务的范围；</p></li><li><p>192.168.31.106:8002/8003/8004 则是具体的 RM 实例，分别对应订单、积分与库存服务。</p></li></ul><p>其中所有 TM、RM、TC 实例在启动时都要向 Nacos 进行注册登记，以保证服务可以被发现。同时 TC(Seata-Server) 自身的配置信息也要托管在 Nacos 配置中心中，不再单独存储。所有 TM、RM 在启动时也要额外在 TC 中进行注册，以保证全局事务的完整性。</p><p>下面咱们开始第一个阶段：部署 Nacos 注册中心与配置中心。</p><h3 id="部署-nacos-注册中心与配置中心" tabindex="-1">部署 Nacos 注册中心与配置中心 <a class="header-anchor" href="#部署-nacos-注册中心与配置中心" aria-label="Permalink to &quot;部署 Nacos 注册中心与配置中心&quot;">​</a></h3><p>部署 Nacos 注册中心与配置中心与前面课程内容并无二致，咱们快速完成即可。</p><p>第一步，下载 Nacos，上传到 192.168.31.103 节点解压缩。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tar </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">xvf nacos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">server</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1.4</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tar </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">xvf nacos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">server</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.4</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.tar.gz</span></span></code></pre></div><p>第二步，配置 conf/application.properties，增加数据库配置。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">### Count of DB</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">db.num</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">### Connect URL of DB</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">db.url.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">jdbc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//192.168.31.103:3309/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span>
<span class="line"><span style="color:#E1E4E8;">db.user</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">db.password</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">root</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">### Count of DB</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">db.num</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">### Connect URL of DB</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">db.url.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">jdbc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//192.168.31.103:3309/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span></span>
<span class="line"><span style="color:#24292E;">db.user</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">root</span></span>
<span class="line"><span style="color:#24292E;">db.password</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">root</span></span></code></pre></div><p>第三步，创建 3309 端口的 nacos_config 数据库，执行 conf/nacos-mysql.sql，完成 Nacos 注册中心表创建。</p>`,14),F=p(`<p>第四步，创建 conf/cluster.conf 集群配置文件，配置一个单节点集群。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#it is ip</span></span>
<span class="line"><span style="color:#E1E4E8;">#example</span></span>
<span class="line"><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">10</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8848</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#it is ip</span></span>
<span class="line"><span style="color:#24292E;">#example</span></span>
<span class="line"><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">10</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8848</span></span></code></pre></div><p>第五步，运行 startup 脚本，启动 Nacos。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sh </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">nacos</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">startup.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sh </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">nacos</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">startup.sh</span></span></code></pre></div><p>至此，阶段一：Nacos 注册中心与配置中心部署完成，因为这些内容前面都讲过，所以不再赘述。</p><p>下面咱们开始阶段二：部署 TC 组件 Seata-Server。</p><p>从部署 TC 组件 Seata-Server 开始就是全新的内容，我将更细致地为你介绍每一步操作过程。</p><h3 id="部署-tc-组件-seata-server" tabindex="-1">部署 TC 组件 Seata-Server <a class="header-anchor" href="#部署-tc-组件-seata-server" aria-label="Permalink to &quot;部署 TC 组件 Seata-Server&quot;">​</a></h3><p>第一步，下载 Seata-Server。</p><p>在 192.168.31.107 设备上安装好 JDK 1.8，之后访问 Seata 的 GitHub，下载最新的 1.4.0 压缩包。</p><p><a href="https://github.com/seata/seata/releases/download/v1.4.0/seata-server-1.4.0.tar.gz?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">https://github.com/seata/seata/releases/download/v1.4.0/seata-server-1.4.0.tar.gz</a></p><p>解压后将 seata-server-1.4 上传到 192.168.31.107 节点的 /usr/local 目录下。</p>`,12),g=p(`<p>Seata-Server 目录结构</p><p>第二步，编辑 conf/registry.conf 文件，这个配置文件说明 Seata-Server 接入哪种注册中心与配置中心，官方提供的默认模板存在大量冗余配置，这里我提供接入 Nacos 最精简的配置内容以方便学习。下面是 Seata-Server 接入注册中心的配置信息。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">registry {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">Seata-Server支持以下几种注册中心，这里改为nacos，默认是file文件形式不介入任何注册中心。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">、nacos</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">、eureka、redis、zk、consul、etcd3、sofa</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">负载均衡采用随机策略</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">loadBalance</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;RandomLoadBalance&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">loadBalanceVirtualNodes</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">nacos注册中心接入配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">nacos</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">应用名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;seata-server&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#IP地址与端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">serverAddr</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;192.168.31.10:8848&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">分配应用组，采用默认值SEATA_GROUP即可</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">group</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;SEATA_GROUP&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">集群名称，采用默认值default即可</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;default&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">Nacos接入用户名密码</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">username</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">password</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">#Seata-Server接入配置中心</span></span>
<span class="line"><span style="color:#E1E4E8;">config {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">Seata-Server支持以下配置中心产品，这里设置为nacos，默认是file即文件形式保存配置内容。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">file、nacos</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">、apollo、zk、consul、etcd3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">设置Nacos的通信地址</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FDAEB7;font-style:italic;">nacos</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">serverAddr</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;192.168.31.10:8848&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">group</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;SEATA_GROUP&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">username</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">password</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">registry {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">Seata-Server支持以下几种注册中心，这里改为nacos，默认是file文件形式不介入任何注册中心。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">file</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">、nacos</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">、eureka、redis、zk、consul、etcd3、sofa</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">type</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">负载均衡采用随机策略</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">loadBalance</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;RandomLoadBalance&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">loadBalanceVirtualNodes</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">10</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">nacos注册中心接入配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">nacos</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">应用名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">application</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;seata-server&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#IP地址与端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">serverAddr</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;192.168.31.10:8848&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">分配应用组，采用默认值SEATA_GROUP即可</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">group</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;SEATA_GROUP&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">namespace</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">集群名称，采用默认值default即可</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">cluster</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;default&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">Nacos接入用户名密码</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">username</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">password</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">#Seata-Server接入配置中心</span></span>
<span class="line"><span style="color:#24292E;">config {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">Seata-Server支持以下配置中心产品，这里设置为nacos，默认是file即文件形式保存配置内容。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">file、nacos</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">、apollo、zk、consul、etcd3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">type</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">#</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">设置Nacos的通信地址</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#B31D28;font-style:italic;">nacos</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">serverAddr</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;192.168.31.10:8848&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">namespace</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">group</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;SEATA_GROUP&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">username</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">password</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">&quot;nacos&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>上面的配置文件你可以直接复制到自己工程中修改下 IP 端口即可。</p><p>第三步，在 Nacos 配置中心中初始化 Seata 配置。</p><p>Seata 官方也为我们提供了初始化配置脚本，请按我的步骤操作。</p><p>首先访问下面的地址查看 Seata 在 Nacos 中需要的设置项。</p><p><a href="https://github.com/seata/seata/blob/1.4.0/script/config-center/config.txt?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">https://github.com/seata/seata/blob/1.4.0/script/config-center/config.txt</a></p>`,8),u=l("p",null,"Seata-Server 配置项",-1),A=l("p",null,"将 GitHub 页面中 80 行文本内容复制后，在 /usr/local/seata-server-1.4.0 目录下创建 config.txt 文件，将 80 行文本粘贴其中。",-1),D=p(`<p>config.txt 文件路径</p><p>在内容粘贴到 config.txt 后，有两个地方需要修改：</p><ul><li><p>34 行 store.mode=file 改为 store.mode=db 代表采用数据库存储 Seata-Server 的全局事务数据</p></li><li><p>44~46 行配置 Seata-Server 的全局事务数据库，数据库 URL 指向 107 节点 3309 端口。这个全局事务数据库是 Seata 维护分布式事务的关键所在，后面咱们马上就要创建这个数据库。</p></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">store.db.url</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">jdbc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//192.168.31.103:3309/seata?useUnicode=true&amp;rewriteBatchedStatements=true</span></span>
<span class="line"><span style="color:#E1E4E8;">store.db.user</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">store.db.password</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">root</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">store.db.url</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">jdbc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//192.168.31.103:3309/seata?useUnicode=true&amp;rewriteBatchedStatements=true</span></span>
<span class="line"><span style="color:#24292E;">store.db.user</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">root</span></span>
<span class="line"><span style="color:#24292E;">store.db.password</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">root</span></span></code></pre></div><p>config.txt 保存后，还需要访问下面地址下载 nacos-config.sh 运行脚本。<br><a href="https://github.com/seata/seata/blob/1.4.0/script/config-center/nacos/nacos-config.sh?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">https://github.com/seata/seata/blob/1.4.0/script/config-center/nacos/nacos-config.sh</a></p>`,5),C=l("p",null,"nacos-config.sh",-1),B=l("p",null,"这个脚本用来读取前面的 config.txt 并将配置项载入 Nacos 配置中心。将页面中 101 行文本复制，然后在 /usr/local/seata-server-1.4.0 目录下创建 script 子目录，在 scirpt 子目录下创建 nacos-config.sh 文件，并将 101 行文本保存其中。",-1),m=p(`<p>nacos-config.sh 文件路径</p><p>保存后执行下面命令运行导入脚本。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sh nacos</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">config.sh </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">h </span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sh nacos</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">config.sh </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">h </span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">10</span></span></code></pre></div><p>这条命令有两个参数，h 选项指向 Nacos 的 IP，执行后你会看到如下日志。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">Set metrics.registryType</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">compact successfully </span></span>
<span class="line"><span style="color:#E1E4E8;">Set metrics.exporterList</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">prometheus successfully </span></span>
<span class="line"><span style="color:#E1E4E8;">Set metrics.exporterPrometheusPort</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">9898</span><span style="color:#E1E4E8;"> successfully </span></span>
<span class="line"><span style="color:#F97583;">=========================================================================</span></span>
<span class="line"><span style="color:#E1E4E8;"> Complete initialization parameters,  total</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">count</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> ,  failure</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">count</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">=========================================================================</span></span>
<span class="line"><span style="color:#E1E4E8;"> Init nacos config finished, please start seata</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">server.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;">Set metrics.registryType</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">compact successfully </span></span>
<span class="line"><span style="color:#24292E;">Set metrics.exporterList</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">prometheus successfully </span></span>
<span class="line"><span style="color:#24292E;">Set metrics.exporterPrometheusPort</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">9898</span><span style="color:#24292E;"> successfully </span></span>
<span class="line"><span style="color:#D73A49;">=========================================================================</span></span>
<span class="line"><span style="color:#24292E;"> Complete initialization parameters,  total</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">count</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> ,  failure</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">count</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">=========================================================================</span></span>
<span class="line"><span style="color:#24292E;"> Init nacos config finished, please start seata</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">server.</span></span></code></pre></div><p>80 个配置选项导入成功后，我们便可在 Nacos 的配置中心页面看到它们，访问 Nacos 后台<a href="http://192.168.31.10:8848/nacos?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://192.168.31.10:8848/nacos</a></p><p>你会看到大量 SEATA_GROUP 分组的配置，这些配置信息在 Seata-Server 启动时都会自动读取。</p>`,7),b=l("p",null,"Seata-Server 配置信息",-1),I=l("p",null,"第四步，创建并初始化 Seata-Server 全局事务数据库。",-1),v=l("p",null,"访问下面网址",-1),h=l("p",null,[l("a",{href:"https://github.com/seata/seata/blob/1.4.0/script/server/db/mysql.sql?fileGuid=xxQTRXtVcqtHK6j8",target:"_blank",rel:"noreferrer"},"https://github.com/seata/seata/blob/1.4.0/script/server/db/mysql.sql"),n("，下载 SQL 脚本。在 3309 端口 MySQL 创建新的数据库 seata，执行 SQL 脚本创建全局事务表。")],-1),f=p(`<p>Seata 全局事务数据库</p><p>脚本执行后会创建 3 张表，我们了解下即可。</p><ul><li><p>global_table 保存全局事务数据；</p></li><li><p>branch_table 保存分支事务数据；</p></li><li><p>lock_table 保存锁定资源数据。</p></li></ul><p>第五步，启动 seata-server。</p><p>seata-server 启动只需要执行 bin/seata-server.sh。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">sh bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">seata</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">server.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">sh bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">seata</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">server.sh</span></span></code></pre></div><p>启动后，看到下面 Server started 代表启动成功。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">10</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">52</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">38.254</span><span style="color:#E1E4E8;">  INFO </span><span style="color:#F97583;">---</span><span style="color:#E1E4E8;"> [                     main] com.alibaba.druid.pool.DruidDataSource   </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {dataSource</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">} inited</span></span>
<span class="line"><span style="color:#79B8FF;">10</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">52</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">38.501</span><span style="color:#E1E4E8;">  INFO </span><span style="color:#F97583;">---</span><span style="color:#E1E4E8;"> [                     main] i.s.core.rpc.netty.NettyServerBootstrap  </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Server started, listen port</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8091</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">10</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">52</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">38.254</span><span style="color:#24292E;">  INFO </span><span style="color:#D73A49;">---</span><span style="color:#24292E;"> [                     main] com.alibaba.druid.pool.DruidDataSource   </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {dataSource</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">} inited</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">52</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">38.501</span><span style="color:#24292E;">  INFO </span><span style="color:#D73A49;">---</span><span style="color:#24292E;"> [                     main] i.s.core.rpc.netty.NettyServerBootstrap  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Server started, listen port</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8091</span></span></code></pre></div><p>这里有个细节，如果启动过程中提示数据库无法访问，说明 IP、端口配置有问题，可以通过 Nacos 配置中心设置 store.db.url 选项，而不是重新导入 config.txt。</p>`,9),T=p('<p>修改 Seata 连接字符串</p><p>到这里，<strong>阶段二：部署 TC 组件 Seata-Server 已经完成</strong>。后面的事情就是基于 TC 组件 Seata-Server 实现分布式事务。</p><h3 id="开发-rm-资源管理器" tabindex="-1">开发 RM 资源管理器 <a class="header-anchor" href="#开发-rm-资源管理器" aria-label="Permalink to &quot;开发 RM 资源管理器&quot;">​</a></h3><p>在 Seata 中 RM 资源管理器代表处理具体业务的模块，例如：订单服务创建订单、会员服务增加积分、库存服务减少库存都是 RM 资源管理器，下面我们来开发订单服务、会员服务与库存服务。</p><h4 id="订单服务-rm-order" tabindex="-1">订单服务 rm-order <a class="header-anchor" href="#订单服务-rm-order" aria-label="Permalink to &quot;订单服务 rm-order&quot;">​</a></h4><p>这里开发框架采用 Spring Boot + JPA（Hibernate）+ Druid 实现。</p><p>第一步，创建 seata-order 数据库与 undo_log 表。</p><p>在 103 节点的 3306 数据库上，创建 seata-order 数据库，执行下面的 SQL 初始化数据库。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> NAMES utf8mb4;</span></span>\n<span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> FOREIGN_KEY_CHECKS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#6A737D;">-- Table structure for order</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`order`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> `</span><span style="color:#B392F0;">order</span><span style="color:#E1E4E8;">`  (</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`order_id`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT COMMENT </span><span style="color:#9ECBFF;">&#39;订单编号&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`goods_id`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;商品编号&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`member_id`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;会员编号&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`quantity`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;购买数量&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`points`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;增加会员积分&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">`order_id`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>\n<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB AUTO_INCREMENT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">51</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`undo_log`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> `</span><span style="color:#B392F0;">undo_log</span><span style="color:#E1E4E8;">`  (</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`id`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`branch_id`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`xid`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`context`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`rollback_info`</span><span style="color:#E1E4E8;"> longblob </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`log_status`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`log_created`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`log_modified`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">`ext`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">`id`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">UNIQUE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">`ux_undo_log`</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">`xid`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">`branch_id`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>\n<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB AUTO_INCREMENT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> FOREIGN_KEY_CHECKS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> NAMES utf8mb4;</span></span>\n<span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> FOREIGN_KEY_CHECKS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#6A737D;">-- Table structure for order</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">`order`</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> `</span><span style="color:#6F42C1;">order</span><span style="color:#24292E;">`  (</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`order_id`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT COMMENT </span><span style="color:#032F62;">&#39;订单编号&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`goods_id`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;商品编号&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`member_id`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;会员编号&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`quantity`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;购买数量&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`points`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;增加会员积分&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">`order_id`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>\n<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB AUTO_INCREMENT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">51</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>\n<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>\n<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">`undo_log`</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> `</span><span style="color:#6F42C1;">undo_log</span><span style="color:#24292E;">`  (</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`id`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`branch_id`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`xid`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`context`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`rollback_info`</span><span style="color:#24292E;"> longblob </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`log_status`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`log_created`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`log_modified`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">`ext`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">`id`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">UNIQUE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> </span><span style="color:#032F62;">`ux_undo_log`</span><span style="color:#24292E;">(</span><span style="color:#032F62;">`xid`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">`branch_id`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>\n<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB AUTO_INCREMENT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> FOREIGN_KEY_CHECKS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>数据库包含两张表，一张是订单业务表 order，字段含义已在脚本中注释。而另一张 undo_log 回滚日志表。undo_log 是 Seata 强制要求在每个 RM 端数据库创建的表，用于存储反向 SQL 的元数据。undo_log 表的脚本可以从 Seata GitHub 官方获取，然后在自己的业务库中执行。</p><p><a href="https://github.com/seata/seata/blob/1.4.0/script/client/at/db/mysql.sql?fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">https://github.com/seata/seata/blob/1.4.0/script/client/at/db/mysql.sql</a></p><p>到这里 RM 数据库创建完毕。</p>',12),S=p(`<p>seata-order 数据库</p><p>第二步，利用 Spring Initializr 向导创建 rm-order 工程，确保 pom.xml 引入以下依赖。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--Spring Boot JPA--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-data-jpa&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--Web MVC--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--Nacos客户端--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-cloud-starter-alibaba-seata&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">exclusions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-all&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">exclusions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata 客户端最新版--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-all&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.4.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata与spring boot starter--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.4.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--JDBC驱动--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;mysql&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mysql-connector-java&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;runtime&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--Spring Boot JPA--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-data-jpa&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--Web MVC--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--Nacos客户端--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-alibaba-seata&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">exclusions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-all&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">exclusions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata 客户端最新版--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-all&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.4.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--seata与spring boot starter--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.4.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--JDBC驱动--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;mysql&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mysql-connector-java&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;runtime&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>这份依赖有个注意事项，默认 starter-alibaba-seata 依赖内置的是旧版 1.3.0 的 Seata 客户端，因此要排除，在后面引入最新的 1.4.0，保证客户端与 Seate-Server 版本一致。</p><p>第三步，配置 application.yml。</p><p>application.yml 额外配置了事务分组与 Nacos 的信息，我已在配置文件中进行了注释说明。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#seata配置</span></span>
<span class="line"><span style="color:#85E89D;">seata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#6A737D;">#  开启seata分布式事务</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">enabled</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#6A737D;">#  事务服务分组名,与naocs一致</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">tx-service-group</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">my_test_tx_group</span></span>
<span class="line"><span style="color:#6A737D;">#  是否启用数据源代理</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">enable-auto-data-source-proxy</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#6A737D;">#  事务服务配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">service</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">vgroup-mapping</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#6A737D;">#      事务分组对应集群名称</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">my_test_tx_group</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">grouplist</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#6A737D;">#      Seata-Server服务的IP地址与端口</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">default</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">192.168.31.107:8091</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">enable-degrade</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">disable-global-transaction</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#6A737D;">#    Nacos配置中心信息</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">config</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nacos</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">serverAddr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">group</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">SEATA_GROUP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">cluster</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#6A737D;">#      Nacos注册中心信息</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">registry</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nacos</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">application</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">seata-server</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">server-addr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">group</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">SEATA_GROUP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">cluster</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#6A737D;"># 应用配置</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">application</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">rm-order</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">datasource</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">driver-class-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">jdbc:mysql://192.168.31.103:3306/seata-order</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">cloud</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nacos</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">discovery</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nacos</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">server-addr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">jpa</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">show-sql</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8002</span></span>
<span class="line"><span style="color:#85E89D;">logging</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">level</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">io</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">seata</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">debug</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#seata配置</span></span>
<span class="line"><span style="color:#22863A;">seata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6A737D;">#  开启seata分布式事务</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">enabled</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6A737D;">#  事务服务分组名,与naocs一致</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">tx-service-group</span><span style="color:#24292E;">: </span><span style="color:#032F62;">my_test_tx_group</span></span>
<span class="line"><span style="color:#6A737D;">#  是否启用数据源代理</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">enable-auto-data-source-proxy</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6A737D;">#  事务服务配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">service</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">vgroup-mapping</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6A737D;">#      事务分组对应集群名称</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">my_test_tx_group</span><span style="color:#24292E;">: </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">grouplist</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6A737D;">#      Seata-Server服务的IP地址与端口</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">default</span><span style="color:#24292E;">: </span><span style="color:#032F62;">192.168.31.107:8091</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">enable-degrade</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">disable-global-transaction</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#6A737D;">#    Nacos配置中心信息</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nacos</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">serverAddr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">group</span><span style="color:#24292E;">: </span><span style="color:#032F62;">SEATA_GROUP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">cluster</span><span style="color:#24292E;">: </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#6A737D;">#      Nacos注册中心信息</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">registry</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nacos</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">application</span><span style="color:#24292E;">: </span><span style="color:#032F62;">seata-server</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">server-addr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">group</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">SEATA_GROUP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">cluster</span><span style="color:#24292E;">: </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#6A737D;"># 应用配置</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">application</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">rm-order</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">datasource</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">driver-class-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">jdbc:mysql://192.168.31.103:3306/seata-order</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">cloud</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nacos</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">discovery</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nacos</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">server-addr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">192.168.31.10:8848</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">jpa</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">show-sql</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8002</span></span>
<span class="line"><span style="color:#22863A;">logging</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">level</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">io</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">seata</span><span style="color:#24292E;">: </span><span style="color:#032F62;">debug</span></span></code></pre></div><p>第四步，像单机应用一样开发数据库 CRUD，代码很简单，我已给出注释。</p><p>Order 实体类，让属性与字段进行映射。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//JPA实体类</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Entity</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Table</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\`order\`&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">//对应order表</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Id</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;order_id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer id; </span><span style="color:#6A737D;">//订单编号</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer memberId; </span><span style="color:#6A737D;">//会员编号</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Column</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;goods_id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer goodsId; </span><span style="color:#6A737D;">//商品编号</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer points; </span><span style="color:#6A737D;">//新增积分</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer quantity; </span><span style="color:#6A737D;">//销售数量</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">, Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">, Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">, Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> id;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.memberId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> memberId;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.points </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> points;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.goodsId </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> goodsId;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.quantity </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> quantity;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//...getter &amp; setter</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//JPA实体类</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Entity</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Table</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\`order\`&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//对应order表</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Id</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;order_id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer id; </span><span style="color:#6A737D;">//订单编号</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer memberId; </span><span style="color:#6A737D;">//会员编号</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Column</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;goods_id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer goodsId; </span><span style="color:#6A737D;">//商品编号</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer points; </span><span style="color:#6A737D;">//新增积分</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer quantity; </span><span style="color:#6A737D;">//销售数量</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">id</span><span style="color:#24292E;">, Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">, Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">, Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">, Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.memberId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> memberId;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.points </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> points;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.goodsId </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> goodsId;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.quantity </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> quantity;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//...getter &amp; setter</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>OrderRepository 接口用于声明 CRUD 操作。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OrderRepository</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JpaRepository</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Order</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OrderRepository</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JpaRepository</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Order</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>OrderService 的 createOrder 方法实现创建订单的业务逻辑，注意在 createOrder 方法上必须增加 @Transactional 注解，Seata 客户端对这个注解进行扩展支持了分布式事务。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OrderService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> OrderRepository orderRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Order </span><span style="color:#B392F0;">createOrder</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">orderId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> orderRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Order</span><span style="color:#E1E4E8;">(orderId, memberId,goodsId,points,quantity));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OrderService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> OrderRepository orderRepository;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Order </span><span style="color:#6F42C1;">createOrder</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">orderId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> orderRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Order</span><span style="color:#24292E;">(orderId, memberId,goodsId,points,quantity));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>OrderController 的 createOrder 方法用于对外暴露 RESTful API，等待被 TM 调用。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OrderController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> OrderService orderService;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/create_order&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">createOrder</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">orderId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">        Order order </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> orderService.</span><span style="color:#B392F0;">createOrder</span><span style="color:#E1E4E8;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;create order success&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectMapper</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">writeValueAsString</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OrderController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> OrderService orderService;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/create_order&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">createOrder</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">orderId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#24292E;">        Map result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        Order order </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> orderService.</span><span style="color:#6F42C1;">createOrder</span><span style="color:#24292E;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;create order success&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectMapper</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">writeValueAsString</span><span style="color:#24292E;">(result);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第五步，最重要的一步，要让 Seata 客户端在处理事务时自动生成反向 SQL，必须额外配置 DataSourceProxy 数据源代理类，DataSourceProxy 是 Seata 提供的 DataSource 代理类，在分布式事务执行过程中，用于自动生成 undo_log 回滚数据，以及自动完成 RM 端分布式事务的提交或回滚操作。</p><p>在 Spring Boot 中利用 Java Config 方式对 DataSourceProxy 进行配置。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> com.lagou.rmorder.datasource;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> com.alibaba.druid.pool.DruidDataSource;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> io.seata.rm.datasource.DataSourceProxy;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.boot.context.properties.ConfigurationProperties;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.context.annotation.Bean;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.context.annotation.Configuration;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> org.springframework.context.annotation.Primary;</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataSourceProxyConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//创建Druid数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">ConfigurationProperties</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">prefix</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;spring.datasource&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DruidDataSource </span><span style="color:#B392F0;">druidDataSource</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DruidDataSource</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//建立DataSource数据源代理</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Primary</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DataSourceProxy </span><span style="color:#B392F0;">dataSource</span><span style="color:#E1E4E8;">(DruidDataSource </span><span style="color:#FFAB70;">druidDataSource</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataSourceProxy</span><span style="color:#E1E4E8;">(druidDataSource);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> com.lagou.rmorder.datasource;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> com.alibaba.druid.pool.DruidDataSource;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> io.seata.rm.datasource.DataSourceProxy;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.boot.context.properties.ConfigurationProperties;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.context.annotation.Bean;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.context.annotation.Configuration;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> org.springframework.context.annotation.Primary;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataSourceProxyConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//创建Druid数据源</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">ConfigurationProperties</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">prefix</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;spring.datasource&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DruidDataSource </span><span style="color:#6F42C1;">druidDataSource</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DruidDataSource</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//建立DataSource数据源代理</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Primary</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DataSourceProxy </span><span style="color:#6F42C1;">dataSource</span><span style="color:#24292E;">(DruidDataSource </span><span style="color:#E36209;">druidDataSource</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataSourceProxy</span><span style="color:#24292E;">(druidDataSource);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>最后，启动 rm-order，在浏览器地址栏访问 create_order 接口，看到 create order success，在数据库中也出现对应记录。<br><a href="http://localhost:8002/create_order?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=200&amp;fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://192.168.31.106:8002/create_order?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=200</a></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;create order success&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">code</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">message</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;create order success&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,21),_=p(`<p>订单数据</p><p>以上是 rm-order 订单服务的开发过程，除了配置 Seata 选项与创建 DataSourceProxy 外，其他的开发要素与单机应用几乎是一样的，这使得新人也可以很快上手。</p><p>下面咱们如法炮制开发 rm-points 积分服务与 rm-storage 库存服务。</p><h4 id="积分服务-rm-points" tabindex="-1">积分服务 rm-points <a class="header-anchor" href="#积分服务-rm-points" aria-label="Permalink to &quot;积分服务 rm-points&quot;">​</a></h4><p>因为积分服务的开发过程与订单服务几乎是一致的，我们只需给出关键代码。</p><p>第一步，在 3307 端口数据库创建 seata-points 数据库，包含 points 会员积分表与 undo_log 表。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">points</span><span style="color:#E1E4E8;">\`  (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`member_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;会员编号&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> COMMENT </span><span style="color:#9ECBFF;">&#39;积分数量&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`member_id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Records of points</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`points\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`undo_log\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">undo_log</span><span style="color:#E1E4E8;">\`  (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`branch_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`xid\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`context\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`rollback_info\`</span><span style="color:#E1E4E8;"> longblob </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_status\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_created\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_modified\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`ext\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">UNIQUE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`ux_undo_log\`</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`xid\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">\`branch_id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB AUTO_INCREMENT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> FOREIGN_KEY_CHECKS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">points</span><span style="color:#24292E;">\`  (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`member_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;会员编号&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> COMMENT </span><span style="color:#032F62;">&#39;积分数量&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`member_id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Records of points</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`points\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`undo_log\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">undo_log</span><span style="color:#24292E;">\`  (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`branch_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`xid\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`context\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`rollback_info\`</span><span style="color:#24292E;"> longblob </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_status\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_created\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_modified\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`ext\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">UNIQUE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`ux_undo_log\`</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`xid\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`branch_id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB AUTO_INCREMENT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> FOREIGN_KEY_CHECKS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>第二步，创建 rm-points 积分服务，pom.xml 与 rm-order 依赖完全相同。</p><p>第三步，配置 application.yml，只有应用名、端口与数据库 URL 不同，其他与 rm-order 完全相同，这里就不再赘述。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">seata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">application</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">rm-points</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">datasource</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">driver-class-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">jdbc:mysql://192.168.31.103:3307/seata-points</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8003</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">seata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">application</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">rm-points</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">datasource</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">driver-class-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">jdbc:mysql://192.168.31.103:3307/seata-points</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8003</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span></code></pre></div><p>第四步：实现新增积分代码，基础的实体类与 Repository 不做赘述，我们关注 PointsService 与 PointsController。</p><p>PointsService.addPoints 方法实现会员积分增加业务，同样需要 @Transactional 注解。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PointsService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> PointsRepository orderRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Points </span><span style="color:#B392F0;">addPoints</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        Points entity </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> orderRepository.</span><span style="color:#B392F0;">findById</span><span style="color:#E1E4E8;">(memberId).</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        entity.</span><span style="color:#B392F0;">setPoints</span><span style="color:#E1E4E8;">( entity.</span><span style="color:#B392F0;">getPoints</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> points);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> orderRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Points</span><span style="color:#E1E4E8;">(memberId,entity.</span><span style="color:#B392F0;">getPoints</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PointsService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> PointsRepository orderRepository;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Points </span><span style="color:#6F42C1;">addPoints</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        Points entity </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> orderRepository.</span><span style="color:#6F42C1;">findById</span><span style="color:#24292E;">(memberId).</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        entity.</span><span style="color:#6F42C1;">setPoints</span><span style="color:#24292E;">( entity.</span><span style="color:#6F42C1;">getPoints</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> points);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> orderRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Points</span><span style="color:#24292E;">(memberId,entity.</span><span style="color:#6F42C1;">getPoints</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>PointsController 对外暴露 add_points 接口调用 service 类实现业务。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PointsController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> PointsService pointsService;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/add_points&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">addPoints</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">        Points entity </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pointsService.</span><span style="color:#B392F0;">addPoints</span><span style="color:#E1E4E8;">(memberId, points);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;add points success&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectMapper</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">writeValueAsString</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PointsController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> PointsService pointsService;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/add_points&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">addPoints</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#24292E;">        Map result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        Points entity </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pointsService.</span><span style="color:#6F42C1;">addPoints</span><span style="color:#24292E;">(memberId, points);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;add points success&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectMapper</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">writeValueAsString</span><span style="color:#24292E;">(result);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第五步，最后不要忘记设置 DataSourceProxyConfig，代码与 rm-order 完全相同。</p><p>代码书写完毕，启动应用访问地址<a href="http://192.168.31.106:8003/add_points?memberId=1&amp;points=20&amp;fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://192.168.31.106:8003/add_points?memberId=1&amp;points=20</a></p><p>可以得到&quot;add points success &quot;结果。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;add points success&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">code</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">message</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;add points success&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="库存服务-rm-storage" tabindex="-1">库存服务 rm-storage <a class="header-anchor" href="#库存服务-rm-storage" aria-label="Permalink to &quot;库存服务 rm-storage&quot;">​</a></h4><p>RM 库存服务也是遵循相同套路开发。</p><p>第一步，创建数据库 seata-storage，执行建表脚本，包含库存表 storage 与回滚表 undo_log。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> NAMES utf8mb4;</span></span>
<span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> FOREIGN_KEY_CHECKS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for storage</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`storage\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">storage</span><span style="color:#E1E4E8;">\`  (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`goods_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`quantity\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">255</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`goods_id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Records of storage</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`storage\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`storage\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">98</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`storage\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`storage\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`undo_log\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">undo_log</span><span style="color:#E1E4E8;">\`  (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`branch_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bigint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`xid\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`context\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`rollback_info\`</span><span style="color:#E1E4E8;"> longblob </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_status\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_created\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`log_modified\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">datetime</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`ext\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">varchar</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> utf8_general_ci </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">UNIQUE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INDEX</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`ux_undo_log\`</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`xid\`</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">\`branch_id\`</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">USING</span><span style="color:#E1E4E8;"> BTREE</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> InnoDB AUTO_INCREMENT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CHARACTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8 </span><span style="color:#F97583;">COLLATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utf8_general_ci ROW_FORMAT </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Dynamic</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">SET</span><span style="color:#E1E4E8;"> FOREIGN_KEY_CHECKS </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> NAMES utf8mb4;</span></span>
<span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> FOREIGN_KEY_CHECKS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for storage</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`storage\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">storage</span><span style="color:#24292E;">\`  (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`goods_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`quantity\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">255</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`goods_id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Records of storage</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`storage\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`storage\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">98</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`storage\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`storage\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#6A737D;">-- Table structure for undo_log</span></span>
<span class="line"><span style="color:#6A737D;">-- ----------------------------</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`undo_log\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">undo_log</span><span style="color:#24292E;">\`  (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`branch_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bigint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`xid\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`context\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`rollback_info\`</span><span style="color:#24292E;"> longblob </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_status\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_created\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`log_modified\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">datetime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`ext\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">varchar</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> utf8_general_ci </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">UNIQUE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INDEX</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`ux_undo_log\`</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`xid\`</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`branch_id\`</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">USING</span><span style="color:#24292E;"> BTREE</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> InnoDB AUTO_INCREMENT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CHARACTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8 </span><span style="color:#D73A49;">COLLATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utf8_general_ci ROW_FORMAT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Dynamic</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">SET</span><span style="color:#24292E;"> FOREIGN_KEY_CHECKS </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><p>第二步，创建 rm-storage 库存服务，pom.xml 与 rm-order 依赖完全相同。</p><p>第三步，配置 application.yml，只有应用名、端口与数据库 URL 不同，其他与 rm-order 完全相同。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#seata配置与rm-order完全相同，省略</span></span>
<span class="line"><span style="color:#85E89D;">seata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">application</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">rm-storage</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">datasource</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">driver-class-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">jdbc:mysql://192.168.31.103:3308/seata-storage</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8004</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#seata配置与rm-order完全相同，省略</span></span>
<span class="line"><span style="color:#22863A;">seata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">application</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">rm-storage</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">datasource</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">driver-class-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">jdbc:mysql://192.168.31.103:3308/seata-storage</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8004</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span></code></pre></div><p>第四步，创建 StorageService 与 StorageController，实现减少库存业务。</p><p>StorageService.reduceStorage 方法实现商品库存减少，如果库存不足则抛出 IllegalStateException 异常。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StorageService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> StorageRepository storageRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Transactional</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Storage </span><span style="color:#B392F0;">reduceStorage</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">, Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        Storage storage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storageRepository.</span><span style="color:#B392F0;">findById</span><span style="color:#E1E4E8;">(goodsId).</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(storage.</span><span style="color:#B392F0;">getQuantity</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> quantity){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalStateException</span><span style="color:#E1E4E8;">(goodsId </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;商品库存不足&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        storage.</span><span style="color:#B392F0;">setQuantity</span><span style="color:#E1E4E8;">(storage.</span><span style="color:#B392F0;">getQuantity</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> storageRepository.</span><span style="color:#B392F0;">save</span><span style="color:#E1E4E8;">(storage);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StorageService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> StorageRepository storageRepository;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Transactional</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Storage </span><span style="color:#6F42C1;">reduceStorage</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">, Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        Storage storage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storageRepository.</span><span style="color:#6F42C1;">findById</span><span style="color:#24292E;">(goodsId).</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(storage.</span><span style="color:#6F42C1;">getQuantity</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> quantity){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalStateException</span><span style="color:#24292E;">(goodsId </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;商品库存不足&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        storage.</span><span style="color:#6F42C1;">setQuantity</span><span style="color:#24292E;">(storage.</span><span style="color:#6F42C1;">getQuantity</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> quantity);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> storageRepository.</span><span style="color:#6F42C1;">save</span><span style="color:#24292E;">(storage);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>StorageController 对外暴露 reduce_storage 接口，实现减少库存业务。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StorageController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> StorageService storageService;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/reduce_storage&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">reduceStorage</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Map result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">        Storage storage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storageService.</span><span style="color:#B392F0;">reduceStorage</span><span style="color:#E1E4E8;">(goodsId, quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        result.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;reduce storage success&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjectMapper</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">writeValueAsString</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StorageController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> StorageService storageService;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/reduce_storage&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">reduceStorage</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> JsonProcessingException {</span></span>
<span class="line"><span style="color:#24292E;">        Map result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">        Storage storage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storageService.</span><span style="color:#6F42C1;">reduceStorage</span><span style="color:#24292E;">(goodsId, quantity);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        result.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;reduce storage success&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjectMapper</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">writeValueAsString</span><span style="color:#24292E;">(result);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第五步，DataSourceProxyConfig 代码与 rm-order 完全相同不再赘述。</p><p>启动应用，访问地址</p><p><a href="http://localhost:8004/reduce_storage?goodsId=2&amp;quantity=10&amp;fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://localhost:8004/reduce_storage?goodsId=2&amp;quantity=10</a></p><p>得到结果 &quot;reduce storage success&quot;。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FDAEB7;font-style:italic;">message</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;reduce storage success&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">code</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#B31D28;font-style:italic;">message</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;reduce storage success&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>到这里我们将<strong>订单、积分、库存</strong>三个 RM 示例都已开发完毕，这些服务都是独立运行，并没有形成整体，最后咱们还要开发商城应用 tm-mall，tm-mall 作为 TM 将服务串行调用，并形成分布式事务整体。</p><h3 id="开发-tm-事务管理器" tabindex="-1">开发 TM 事务管理器 <a class="header-anchor" href="#开发-tm-事务管理器" aria-label="Permalink to &quot;开发 TM 事务管理器&quot;">​</a></h3><h4 id="商城应用-tm-mall" tabindex="-1">商城应用 tm-mall <a class="header-anchor" href="#商城应用-tm-mall" aria-label="Permalink to &quot;商城应用 tm-mall&quot;">​</a></h4><p>第一步，3305 端口创建 seata-mall 数据库，因为真实的商城应用本身也需要往本地库写入数据，TM 本身也是一个 RM，因此在商城库中也要创建 undo_log 表。</p>`,40),q=p(`<p>tm-mall 数据库</p><p>第二步，创建 tm-mall 应用，框架同样采用 SpringBoot + JPA + druid，除了依赖 Seata 外，还需要额外引入 OpenFeign 实现微服务的远程调用。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-data-jpa&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-cloud-starter-alibaba-seata&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">exclusions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-all&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">exclusion</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">exclusions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-all&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.4.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;io.seata&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.4.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;mysql&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mysql-connector-java&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;runtime&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.cloud&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;\${spring-cloud-alibaba.version}&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-data-jpa&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-web&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.alibaba.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-alibaba-seata&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">exclusions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-all&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">exclusion</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">exclusions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-all&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.4.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;io.seata&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;seata-spring-boot-starter&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.4.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;mysql&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mysql-connector-java&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;runtime&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;\${spring-cloud-alibaba.version}&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>第三步，配置 application.yml，只有应用名、端口与数据库 URL 不同，其他与 rm-order 完全相同。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#seata配置与rm-order完全相同，省略</span></span>
<span class="line"><span style="color:#85E89D;">seata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">application</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">tm-mall</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">datasource</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">driver-class-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">jdbc:mysql://192.168.31.103:3305/seata-mall</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">root</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span>
<span class="line"><span style="color:#85E89D;">server</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8001</span></span>
<span class="line"><span style="color:#B392F0;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#seata配置与rm-order完全相同，省略</span></span>
<span class="line"><span style="color:#22863A;">seata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">application</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">tm-mall</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">datasource</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">driver-class-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">com.mysql.cj.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">jdbc:mysql://192.168.31.103:3305/seata-mall</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">root</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span>
<span class="line"><span style="color:#22863A;">server</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8001</span></span>
<span class="line"><span style="color:#6F42C1;">...</span></span></code></pre></div><p>第四步，在应用入口增加@EnableFeignClients注解，开启OpenFeign远程调用功能。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootApplication</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableFeignClients</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TmMallApplication</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        SpringApplication.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(TmMallApplication.class, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableFeignClients</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TmMallApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        SpringApplication.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(TmMallApplication.class, args);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第五步，开发三个 RM 的 OpenFeign 客户端。</p><p>OrderFeignClient 是 rm-order 服务的 OpenFeign 客户端。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//订单服务客户端</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">FeignClient</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rm-order&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OrderFeignClient</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/create_order&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">createOrder</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;orderId&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">orderId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                              @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;memberId&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                              @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;goodsId&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                              @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;points&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                              @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;quantity&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">quantity</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//订单服务客户端</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">FeignClient</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rm-order&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OrderFeignClient</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/create_order&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">createOrder</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;orderId&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">orderId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                              @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;memberId&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                              @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;goodsId&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                              @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;points&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                              @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;quantity&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">quantity</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>PointsFeignClient 是 rm-points 服务的 OpenFeign 客户端。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//积分服务客户端</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">FeignClient</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rm-points&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PointsFeignClient</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/add_points&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">addPoints</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;memberId&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">, @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;points&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//积分服务客户端</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">FeignClient</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rm-points&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PointsFeignClient</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/add_points&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">addPoints</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;memberId&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">, @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;points&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>StorageFeignClient 是 rm-storage 服务的 OpenFeign 客户端。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//库存服务客户端</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">FeignClient</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rm-storage&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StorageFeignClient</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/reduce_storage&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">reduceStorage</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;goodsId&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">, @</span><span style="color:#F97583;">RequestParam</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;quantity&quot;</span><span style="color:#E1E4E8;">) Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//库存服务客户端</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">FeignClient</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rm-storage&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StorageFeignClient</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/reduce_storage&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">reduceStorage</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;goodsId&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">, @</span><span style="color:#D73A49;">RequestParam</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;quantity&quot;</span><span style="color:#24292E;">) Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第六步，开发 MallService，定义全局事务范围。这里最重要的是 @GlobalTransactional 注解，该注解是全局事务注解，当进入 MallService.sale 方法时通知 TC 开启全局事务，sale 方法执行成功自动通知 TC 进行全局提交；sale 方法抛出异常时自动通知 TC 进行全局回滚。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MallService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    OrderFeignClient orderFeignClient;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    PointsFeignClient pointsFeignClient;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    StorageFeignClient storageFeignClient;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GlobalTransactional</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;seata-group-tx-mall&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">rollbackFor</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {Exception.class})</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">sale</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">orderId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        String orderResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> orderFeignClient.</span><span style="color:#B392F0;">createOrder</span><span style="color:#E1E4E8;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">        String pointsResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pointsFeignClient.</span><span style="color:#B392F0;">addPoints</span><span style="color:#E1E4E8;">(memberId, points);</span></span>
<span class="line"><span style="color:#E1E4E8;">        String storageResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> storageFeignClient.</span><span style="color:#B392F0;">reduceStorage</span><span style="color:#E1E4E8;">(goodsId, quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> orderResult </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; / &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> pointsResult </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; / &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> storageResult;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MallService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    OrderFeignClient orderFeignClient;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    PointsFeignClient pointsFeignClient;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    StorageFeignClient storageFeignClient;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GlobalTransactional</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;seata-group-tx-mall&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">rollbackFor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {Exception.class})</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">sale</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">orderId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        String orderResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> orderFeignClient.</span><span style="color:#6F42C1;">createOrder</span><span style="color:#24292E;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#24292E;">        String pointsResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pointsFeignClient.</span><span style="color:#6F42C1;">addPoints</span><span style="color:#24292E;">(memberId, points);</span></span>
<span class="line"><span style="color:#24292E;">        String storageResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> storageFeignClient.</span><span style="color:#6F42C1;">reduceStorage</span><span style="color:#24292E;">(goodsId, quantity);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> orderResult </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; / &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pointsResult </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; / &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> storageResult;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第七步，开发 MallController 对外暴露 sale 接口提供调用。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RestController</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MallController</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> MallService mallService;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">GetMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/sale&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">sale</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">orderId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">memberId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">goodsId</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">points</span><span style="color:#E1E4E8;">,Integer </span><span style="color:#FFAB70;">quantity</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> mallService.</span><span style="color:#B392F0;">sale</span><span style="color:#E1E4E8;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RestController</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MallController</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> MallService mallService;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">GetMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/sale&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">sale</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">orderId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">memberId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">goodsId</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">points</span><span style="color:#24292E;">,Integer </span><span style="color:#E36209;">quantity</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mallService.</span><span style="color:#6F42C1;">sale</span><span style="color:#24292E;">(orderId,memberId,goodsId,points,quantity);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>第八步，最后不要忘记配置 DataSourceProxyConfig，这是所有 TM 与 RM 都要设置的。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataSourceProxyConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">ConfigurationProperties</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">prefix</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;spring.datasource&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DruidDataSource </span><span style="color:#B392F0;">druidDataSource</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DruidDataSource</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Primary</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> DataSourceProxy </span><span style="color:#B392F0;">dataSource</span><span style="color:#E1E4E8;">(DruidDataSource </span><span style="color:#FFAB70;">druidDataSource</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataSourceProxy</span><span style="color:#E1E4E8;">(druidDataSource);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataSourceProxyConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">ConfigurationProperties</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">prefix</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;spring.datasource&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DruidDataSource </span><span style="color:#6F42C1;">druidDataSource</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DruidDataSource</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Primary</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> DataSourceProxy </span><span style="color:#6F42C1;">dataSource</span><span style="color:#24292E;">(DruidDataSource </span><span style="color:#E36209;">druidDataSource</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataSourceProxy</span><span style="color:#24292E;">(druidDataSource);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>到这里所有 TM 与 RM 都已开发完毕，下面咱们来验证分布式事务的执行效果。</p><h3 id="验证分布式事务" tabindex="-1">验证分布式事务 <a class="header-anchor" href="#验证分布式事务" aria-label="Permalink to &quot;验证分布式事务&quot;">​</a></h3><p>将 Nacos、TC、TM、3 个 RM 都启动，之后访问 tm-mall 的 sale 接口。</p><p><a href="http://localhost:8001/sale?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=20&amp;fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://localhost:8001/sale?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=20</a></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;create order success&quot;</span><span style="color:#E1E4E8;">} </span></span>
<span class="line"><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;add points success&quot;</span><span style="color:#E1E4E8;">} </span></span>
<span class="line"><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;reduce storage success&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;create order success&quot;</span><span style="color:#24292E;">} </span></span>
<span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;add points success&quot;</span><span style="color:#24292E;">} </span></span>
<span class="line"><span style="color:#D73A49;">/</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;reduce storage success&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>从结果中可以看到三个服务调用都已成功，我们从控制台看一下具体过程。</p><p>从日志中可以发现 TM 端负责开启全局事务，执行成功后通知 TC 全局事务提交。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">## TM端日志</span></span>
<span class="line"><span style="color:#E1E4E8;"># 启动全局事务</span></span>
<span class="line"><span style="color:#E1E4E8;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Begin </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> global transaction [</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100622589646344192</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">...</span></span>
<span class="line"><span style="color:#E1E4E8;"># 全局事务已提交</span></span>
<span class="line"><span style="color:#E1E4E8;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100622589646344192</span><span style="color:#E1E4E8;">] commit status</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Committed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">## TM端日志</span></span>
<span class="line"><span style="color:#24292E;"># 启动全局事务</span></span>
<span class="line"><span style="color:#24292E;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Begin </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> global transaction [</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100622589646344192</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">...</span></span>
<span class="line"><span style="color:#24292E;"># 全局事务已提交</span></span>
<span class="line"><span style="color:#24292E;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100622589646344192</span><span style="color:#24292E;">] commit status</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Committed</span></span></code></pre></div><p>而 RM 端则负责两件事，成功提交本地的分支事务与删除 undo_log 回滚日志。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">## RM日志</span></span>
<span class="line"><span style="color:#E1E4E8;"># 分支事务已提交</span></span>
<span class="line"><span style="color:#E1E4E8;">i.s.c.r.p.c.RmBranchCommitProcessor      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> branch commit result</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">xid</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100622589646344192</span><span style="color:#E1E4E8;">,branchId</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">100622590170632192</span><span style="color:#E1E4E8;">,branchStatus</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">PhaseTwo_Committed,result code </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Success,getMsg </span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#E1E4E8;"># 清空undo_log表</span></span>
<span class="line"><span style="color:#E1E4E8;">i.s.r.d.undo.mysql.MySQLUndoLogManager   </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> batch delete undo log size </span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">## RM日志</span></span>
<span class="line"><span style="color:#24292E;"># 分支事务已提交</span></span>
<span class="line"><span style="color:#24292E;">i.s.c.r.p.c.RmBranchCommitProcessor      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> branch commit result</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">xid</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100622589646344192</span><span style="color:#24292E;">,branchId</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100622590170632192</span><span style="color:#24292E;">,branchStatus</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">PhaseTwo_Committed,result code </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Success,getMsg </span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;"># 清空undo_log表</span></span>
<span class="line"><span style="color:#24292E;">i.s.r.d.undo.mysql.MySQLUndoLogManager   </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> batch delete undo log size </span><span style="color:#005CC5;">1</span></span></code></pre></div><p>分析了提交过程，下面咱们再进行异常验证，将 quantity 设置为 200，这必将超出库存报错，看能否全局回滚。<br><a href="http://localhost:8001/sale?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=20&amp;fileGuid=xxQTRXtVcqtHK6j8" target="_blank" rel="noreferrer">http://localhost:8001/sale?orderId=6&amp;memberId=1&amp;goodsId=2&amp;points=20&amp;quantity=200</a></p><p>运行后程序报异常。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">java.lang.IllegalStateException</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> 商品库存不足。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">java.lang.IllegalStateException</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> 商品库存不足。</span></span></code></pre></div><p>观察发现 TM 向 TC 发起全局回滚通知。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Begin </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> global transaction [</span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100626590567763968</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">i.s.c.rpc.netty.AbstractNettyRemoting    </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> io.seata.core.rpc.netty.TmNettyRemotingClient@</span><span style="color:#F97583;">2e81af7d</span><span style="color:#E1E4E8;"> msgId</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">1726</span><span style="color:#E1E4E8;">, body</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">globalStatus</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Rollbacked,ResultCode</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">Success,Msg</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">i.seata.tm.api.DefaultGlobalTransaction  </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Begin </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> global transaction [</span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100626590567763968</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">i.s.c.rpc.netty.AbstractNettyRemoting    </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> io.seata.core.rpc.netty.TmNettyRemotingClient@</span><span style="color:#D73A49;">2e81af7d</span><span style="color:#24292E;"> msgId</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">1726</span><span style="color:#24292E;">, body</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">globalStatus</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Rollbacked,ResultCode</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">Success,Msg</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">null</span></span></code></pre></div><p>TC 向 RM 下达分支事务回滚通知，RM 收到通知做两件事：第一，根据 undo_log 表生成的反向 SQL，将之前写入的数据撤销；第二，删除 undo_log 数据。这两步操作保证了 RM 端数据能撤销回之前的状态。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">i.s.r.d.undo.AbstractUndoLogManager      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Flushing UNDO LOG</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;@class&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;io.seata.rm.datasource.undo.BranchUndoLog&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;xid&quot;</span><span style="color:#F97583;">:</span><span style="color:#9ECBFF;">&quot;192.168.31.107:8091:100626590567763968&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;branchId&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">100626590894919681...</span></span>
<span class="line"><span style="color:#E1E4E8;">io.seata.rm.AbstractRMHandler            </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> Branch Rollbacking</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100626590567763968</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100626590894919681</span><span style="color:#E1E4E8;"> jdbc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//192.168.31.103:3306/seata-order</span></span>
<span class="line"><span style="color:#E1E4E8;">i.s.r.d.undo.AbstractUndoLogManager      </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> xid </span><span style="color:#79B8FF;">192.168</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">31</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">107</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">8091</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">100626590567763968</span><span style="color:#E1E4E8;"> branch </span><span style="color:#79B8FF;">100626590894919681</span><span style="color:#E1E4E8;">, undo_log deleted with GlobalFinished</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">i.s.r.d.undo.AbstractUndoLogManager      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Flushing UNDO LOG</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;@class&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;io.seata.rm.datasource.undo.BranchUndoLog&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;xid&quot;</span><span style="color:#D73A49;">:</span><span style="color:#032F62;">&quot;192.168.31.107:8091:100626590567763968&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;branchId&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">100626590894919681...</span></span>
<span class="line"><span style="color:#24292E;">io.seata.rm.AbstractRMHandler            </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> Branch Rollbacking</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100626590567763968</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100626590894919681</span><span style="color:#24292E;"> jdbc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//192.168.31.103:3306/seata-order</span></span>
<span class="line"><span style="color:#24292E;">i.s.r.d.undo.AbstractUndoLogManager      </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> xid </span><span style="color:#005CC5;">192.168</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">31</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">107</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">8091</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">100626590567763968</span><span style="color:#24292E;"> branch </span><span style="color:#005CC5;">100626590894919681</span><span style="color:#24292E;">, undo_log deleted with GlobalFinished</span></span></code></pre></div><p>到这里搭建 Seata 分布式事务架构的内容全部完成，最后咱们来做一下总结。</p><p><strong>小结与预告</strong></p><p>本讲是一套 Spring Cloud Alibaba 微服务架构的综合运用，我们从零开始一步步搭建了一套分布式事务的基础架构，也开发了实际的案例，通过程序运行结果让我们也理解了 Seata 的执行过程。这套框架的难点在于如何将 Seata-Server 与 Nacos 配置中心整合起来，因 Seata-Server 迭代很快，文档严重滞后，在搭建过程中又遇到了很多 BUG，没办法只能通过分析源码一点点排查，在这个过程中自己也对 Seata 有了更深刻的理解，希望你也能按我的操作过程完成分布式事务架构的搭建。</p><p>在这我给你留一道动手题：当前架构 Nacos 与 Seata-Server 都是单点的，不具备高可用特性，请你搭建对应的高可用集群。</p><p>下一讲，咱们将学习在微服务架构下如何设计多级缓存来提高应用性能。</p>`,42);function R(N,L,O,k,M,P){const s=e("Image");return t(),c("div",null,[E,a(s,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image6/M01/33/EB/Cgp9HWBv-3GAAY44AAHu9ANH08o023.png"}),n(),y,i,a(s,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image6/M01/33/F3/CioPOWBv-3qATUoAAAJXS6y4ARs672.png"}),n(),d,a(s,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image6/M00/33/F3/CioPOWBv-4iACM5yAAO-OgqZ5NQ521.png"}),F,a(s,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image6/M00/33/F4/CioPOWBv-62AHsMsAAR8RnG5fyE967.png"}),n(),g,a(s,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image6/M01/33/F4/CioPOWBv-7qAMcbTAAN4E_fcfyU478.png"}),n(),u,A,a(s,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image6/M01/33/EC/Cgp9HWBv-8WAVQwnAANkGgNTOcI875.png"}),n(),D,a(s,{alt:"图片7.png",src:"https://s0.lgstatic.com/i/image6/M01/33/EC/Cgp9HWBv-8-ARX9YAAJ51tN27rM642.png"}),n(),C,B,a(s,{alt:"图片8.png",src:"https://s0.lgstatic.com/i/image6/M01/33/F4/CioPOWBv-9qAc-K_AAJZVzfUp9M951.png"}),n(),m,a(s,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image6/M00/33/EC/Cgp9HWBv--mALGJOAAIa4ZNZYfs549.png"}),n(),b,I,v,h,a(s,{alt:"图片9.png",src:"https://s0.lgstatic.com/i/image6/M00/33/EC/Cgp9HWBv-_SAUSwpAAIa4ZNZYfs943.png"}),n(),f,a(s,{alt:"图片11.png",src:"https://s0.lgstatic.com/i/image6/M00/33/EC/Cgp9HWBv_AqALFtWAADg-gL1A9I839.png"}),n(),T,a(s,{alt:"图片12.png",src:"https://s0.lgstatic.com/i/image6/M00/33/EC/Cgp9HWBv_BeAFpx9AADgV8h647Q951.png"}),n(),S,a(s,{alt:"图片13.png",src:"https://s0.lgstatic.com/i/image6/M00/33/F5/CioPOWBv_CyADGkZAAER3-wwnUs907.png"}),n(),_,a(s,{alt:"图片14.png",src:"https://s0.lgstatic.com/i/image6/M00/33/F5/CioPOWBv_D-AJflgAADOA3XRA34740.png"}),n(),q])}const j=o(r,[["render",R]]);export{x as __pageData,j as default};
