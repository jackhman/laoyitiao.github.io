import{_ as p,D as o,o as e,g as t,J as n,h as a,Q as c,m as s}from"./chunks/framework.f67d7268.js";const $=JSON.parse('{"title":"第24讲：通过KafkaEagle实现对Kafka消息队列的监控","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/042_大数据运维实战/(3095) 第24讲：通过 Kafka Eagle 实现对 Kafka 消息队列的监控.md","filePath":"posts/devops/042_大数据运维实战/(3095) 第24讲：通过 Kafka Eagle 实现对 Kafka 消息队列的监控.md","lastUpdated":1696682708000}'),r={name:"posts/devops/042_大数据运维实战/(3095) 第24讲：通过 Kafka Eagle 实现对 Kafka 消息队列的监控.md"},E=c(`<h1 id="第24讲-通过kafkaeagle实现对kafka消息队列的监控" tabindex="-1">第24讲：通过KafkaEagle实现对Kafka消息队列的监控 <a class="header-anchor" href="#第24讲-通过kafkaeagle实现对kafka消息队列的监控" aria-label="Permalink to &quot;第24讲：通过KafkaEagle实现对Kafka消息队列的监控&quot;">​</a></h1><p>在企业实际应用中，如果业务比较复杂，那么管理的 Consumer Group 和 Topic 数也会随之增加，此时如果再使用 Kafka 提供的命令行工具，可能会出现力不从心的感觉。</p><p>因此，我们需要一款更加智能的 Kafka 监控系统，目前企业使用比较多的有 Kafka Manager、Kafka Eagle 等。</p><h3 id="kafka-eagle-介绍" tabindex="-1">Kafka Eagle 介绍 <a class="header-anchor" href="#kafka-eagle-介绍" aria-label="Permalink to &quot;Kafka Eagle 介绍&quot;">​</a></h3><p>由于 Kafka Eagle 比 Kafka Manager 更简单、更好用，所以这一课时将重点介绍 Kafka Eagle 这款 Kafka 可视化管理工具。</p><p><strong>Kafka Eagle</strong> 是一款用来管理 Kafka 集群的可视化工具，它可以支持管理多个 Kafka 集群，还可以管理 Kafka 的 Topic（查看、删除、创建等），也可以对消费者状态进行监控，并可实现消息阻塞告警、集群健康状态检测等功能。</p><h3 id="kafka-eagle-安装" tabindex="-1">Kafka Eagle 安装 <a class="header-anchor" href="#kafka-eagle-安装" aria-label="Permalink to &quot;Kafka Eagle 安装&quot;">​</a></h3><p><a href="https://www.kafka-eagle.org/" target="_blank" rel="noreferrer">点击这里下载 Kafka-Eagle 安装包</a>，我下载的是 kafka-eagle-bin-2.0.0.tar.gz 版本，下载完成后，将安装包解压到 172.16.213.151 主机上，即可完成安装，操作如下：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root</span><span style="color:#F97583;">@nnmaster</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]#tar zxvf kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0.</span><span style="color:#E1E4E8;">tar.gz</span></span>
<span class="line"><span style="color:#E1E4E8;">[root</span><span style="color:#F97583;">@nnmaster</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]#cd kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">[root</span><span style="color:#F97583;">@nnmaster</span><span style="color:#E1E4E8;"> kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]# tar zxvf kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">web</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin.tar.gz </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span></span>
<span class="line"><span style="color:#E1E4E8;">[root</span><span style="color:#F97583;">@nnmaster</span><span style="color:#E1E4E8;"> kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]# mv </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">web</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span></span>
<span class="line"><span style="color:#E1E4E8;">[root</span><span style="color:#F97583;">@nnmaster</span><span style="color:#E1E4E8;"> kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">bin</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]# chown </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">R</span><span style="color:#E1E4E8;"> kafka</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">kafka </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root</span><span style="color:#D73A49;">@nnmaster</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]#tar zxvf kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0.</span><span style="color:#24292E;">tar.gz</span></span>
<span class="line"><span style="color:#24292E;">[root</span><span style="color:#D73A49;">@nnmaster</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]#cd kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">[root</span><span style="color:#D73A49;">@nnmaster</span><span style="color:#24292E;"> kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]# tar zxvf kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">web</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin.tar.gz </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">C</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span></span>
<span class="line"><span style="color:#24292E;">[root</span><span style="color:#D73A49;">@nnmaster</span><span style="color:#24292E;"> kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]# mv </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">web</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span></span>
<span class="line"><span style="color:#24292E;">[root</span><span style="color:#D73A49;">@nnmaster</span><span style="color:#24292E;"> kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">bin</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]# chown </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">R</span><span style="color:#24292E;"> kafka</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">kafka </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span></span></code></pre></div><p>上面这个操作步骤是解压 Kafka Eagle，然后安装到 /usr/local 目录下，最后，授权 kafka-eagle 目录为 Kafka 用户权限，后面的管理配置操作都通过 Kafka 用户来完成。</p><p>Kafka Eagle 安装完成后，还需要配置 Java 环境变量和设置 Kafka Eagle 目录，将下面内容加入 /home/kafka/.bashrc 文件中：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">KE_HOME</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PATH</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">$PATH</span><span style="color:#E1E4E8;">:$KE_HOME</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bin</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JAVA_HOME</span><span style="color:#F97583;">=/</span><span style="color:#E1E4E8;">opt</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bigdata</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">jdk</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">KE_HOME</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PATH</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">$PATH</span><span style="color:#24292E;">:$KE_HOME</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bin</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JAVA_HOME</span><span style="color:#D73A49;">=/</span><span style="color:#24292E;">opt</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bigdata</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">jdk</span></span></code></pre></div><p>配置完成，执行 source /home/kafka/.bashrc 命令，使配置生效。</p><p>最后一个步骤，需要安装一个数据库，因为 Kafka Eagle 需要数据库的支持，这里我采用 MySQL 数据库，版本为 mysql5.7.30，不过安装过程这里不再介绍。安装完成后，需要做如下配置和授权：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> create database ke character set utf8;</span></span>
<span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> create user </span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">@</span><span style="color:#9ECBFF;">&#39;172.16.213.151&#39;</span><span style="color:#E1E4E8;"> identified by </span><span style="color:#9ECBFF;">&#39;xxxxxx&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> grant all privileges on ke.</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> to </span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">@</span><span style="color:#9ECBFF;">&#39;172.16.213.151&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> flush privileges;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> create database ke character set utf8;</span></span>
<span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> create user </span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">@</span><span style="color:#032F62;">&#39;172.16.213.151&#39;</span><span style="color:#24292E;"> identified by </span><span style="color:#032F62;">&#39;xxxxxx&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> grant all privileges on ke.</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> to </span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">@</span><span style="color:#032F62;">&#39;172.16.213.151&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> flush privileges;</span></span></code></pre></div><p>在这个步骤中，首先创建了一个 ke 库，是给 Kafka Eagle 使用的，然后创建了一个 root 用户，并给 root 用户授权给管理 ke 库，最后刷新配置生效。</p><h3 id="配置-kafka-eagle-监控-kafka-集群" tabindex="-1">配置 Kafka Eagle 监控 Kafka 集群 <a class="header-anchor" href="#配置-kafka-eagle-监控-kafka-集群" aria-label="Permalink to &quot;配置 Kafka Eagle 监控 Kafka 集群&quot;">​</a></h3><p>Kafka Eagle 的配置文件位于 $KE_HOME/conf/ 目录下，配置文件为 system-config.properties，配置完成的文件内容如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">kafka.eagle.zk.cluster.alias</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">cluster1</span></span>
<span class="line"><span style="color:#E1E4E8;">cluster1.zk.list</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">152</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">138</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">172.16</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">213</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">80</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">2181</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.zk.limit.size</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">25</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.webui.port</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">8048</span></span>
<span class="line"><span style="color:#E1E4E8;">cluster1.kafka.eagle.offset.storage</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">kafka</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.metrics.charts</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.metrics.retain</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">15</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.sql.topic.records.max</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">5000</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.sql.fix.error</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.topic.token</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">keadmin</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.driver</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.url</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">jdbc</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">mysql</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//172.16.213.151:3306/ke?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.username</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">root</span></span>
<span class="line"><span style="color:#E1E4E8;">kafka.eagle.password</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">123456</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">kafka.eagle.zk.cluster.alias</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">cluster1</span></span>
<span class="line"><span style="color:#24292E;">cluster1.zk.list</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">152</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">138</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">172.16</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">213</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">80</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">2181</span></span>
<span class="line"><span style="color:#24292E;">kafka.zk.limit.size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">25</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.webui.port</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">8048</span></span>
<span class="line"><span style="color:#24292E;">cluster1.kafka.eagle.offset.storage</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">kafka</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.metrics.charts</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.metrics.retain</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">15</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.sql.topic.records.max</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5000</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.sql.fix.error</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.topic.token</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">keadmin</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.driver</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">com.mysql.jdbc.Driver</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.url</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">jdbc</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">mysql</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//172.16.213.151:3306/ke?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.username</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">root</span></span>
<span class="line"><span style="color:#24292E;">kafka.eagle.password</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">123456</span></span></code></pre></div><p>其中，每个配置项含义如下。</p><ul><li><p>kafka.eagle.zk.cluster.alias：用来指定需要配置的 Kafka 集群名称，可以配置多个，用逗号分隔。</p></li><li><p>cluster1.zk.list：用来配置多个 Kafka 集群所对应的 ZooKeeper 集群列表。注意这个写法，这是配置 cluster1 集群，如果有多个集群，依次填写每个 Kafka 集群对应的 ZooKeeper 集群列表即可。</p></li><li><p>kafka.zk.limit.size：设置 ZooKeeper 客户端最大连接数。</p></li><li><p>kafka.eagle.webui.port：设置 Kafka Eagle 的 Web 访问端口，默认是 8048。</p></li><li><p>cluster1.kafka.eagle.offset.storage：设置存储消费信息的类型，一般在 Kafka0.9 版本之前，消费信息会默认存储在 ZooKeeper 中，所以存储类型设置 zookeeper 即可。如果你使用的是 Kafka0.10 之后的版本，那么，消费者信息默认存储在 Kafka 中，所以存储类型需要设置为 kafka。同时，在使用消费者 API 时，尽量保证客户端 Kafka API 版本和 Kafka 服务端的版本一致。</p></li><li><p>kafka.eagle.metrics.charts：设置是否开启 Kafka Eagle 的监控趋势图，默认是不启用方式，如果需要查看 Kafka 监控趋势图，则需要设置为 true。</p></li><li><p>kafka.eagle.metrics.retain：设置数据默认保留时间，这里的 15 表示 15 天。</p></li><li><p>kafka.eagle.sql.fix.error：在使用 KSQL 查询 Topic 时，如果遇到错误，可以开启这个属性，默认不开启。</p></li><li><p>kafka.eagle.sql.topic.records.max：KSQL 查询 Topic 数据默认是最新的 5000 条，如果在使用 KSQL 查询的过程中出现异常，可以将 kafka.eagle.sql.fix.error 的值设置为 true，Kafka Eagle 会在系统中自动修复错误。1</p></li><li><p>kafka.eagle.topic.token：设置在删除 Kafka Topic 时的 Token 令牌，需要记住这个值。</p></li><li><p>kafka.eagle.driver：设置连接数据库的驱动信息。</p></li><li><p>kafka.eagle.url：设置 jdbc 连接 MySQL 数据库的地址。</p></li><li><p>kafka.eagle.username：设置连接到 MySQL 数据库的用户名。</p></li><li><p>kafka.eagle.password：设置连接到 MySQL 数据库的用户密码。</p></li></ul><p>上面配置中，我开启了 Kafka Eagle 的监控趋势图，因此，还需要开启 Kafka 系统的 JMX 端口，默认 Kafka 没有开启 JMX 端口，可修改 Kafka 启动脚本 kafka-server-start.sh，添加如下内容：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> [ </span><span style="color:#9ECBFF;">&quot;x$KAFKA_HEAP_OPTS&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;"> ]; then</span></span>
<span class="line"><span style="color:#E1E4E8;">    export KAFKA_HEAP_OPTS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;-server -Xms2G -Xmx2G -XX:PermSize=128m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    export JMX_PORT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;9999&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">fi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> [ </span><span style="color:#032F62;">&quot;x$KAFKA_HEAP_OPTS&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;"> ]; then</span></span>
<span class="line"><span style="color:#24292E;">    export KAFKA_HEAP_OPTS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;-server -Xms2G -Xmx2G -XX:PermSize=128m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8 -XX:ConcGCThreads=5 -XX:InitiatingHeapOccupancyPercent=70&quot;</span></span>
<span class="line"><span style="color:#24292E;">    export JMX_PORT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;9999&quot;</span></span>
<span class="line"><span style="color:#24292E;">fi</span></span></code></pre></div><p>注意，这个 9999 端口可修改为任意其他端口。在 Kafka 集群中所有节点添加这个配置，添加完成后，重启所有 Kafka 集群节点以使配置生效。</p><h3 id="kafka-eagle-使用" tabindex="-1">Kafka Eagle 使用 <a class="header-anchor" href="#kafka-eagle-使用" aria-label="Permalink to &quot;Kafka Eagle 使用&quot;">​</a></h3><h4 id="_1-启动-kafka-eagle-服务" tabindex="-1">1.启动 Kafka Eagle 服务 <a class="header-anchor" href="#_1-启动-kafka-eagle-服务" aria-label="Permalink to &quot;1.启动 Kafka Eagle 服务&quot;">​</a></h4><p>所有配置完成后，就可以启动 Kafka Eagle 服务了，执行如下命令启动服务：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[kafka@</span><span style="color:#F97583;">nnmaster</span><span style="color:#E1E4E8;"> kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle]$  cd </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">kafka</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">eagle</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">bin</span></span>
<span class="line"><span style="color:#E1E4E8;">[kafka@</span><span style="color:#F97583;">nnmaster</span><span style="color:#E1E4E8;"> bin]$ .</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">ke.sh  start</span></span>
<span class="line"><span style="color:#E1E4E8;">[kafka@</span><span style="color:#F97583;">nnmaster</span><span style="color:#E1E4E8;"> bin]$ jps</span></span>
<span class="line"><span style="color:#79B8FF;">7557</span><span style="color:#E1E4E8;"> Jps</span></span>
<span class="line"><span style="color:#79B8FF;">15855</span><span style="color:#E1E4E8;"> KafkaEagle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[kafka@</span><span style="color:#D73A49;">nnmaster</span><span style="color:#24292E;"> kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle]$  cd </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">kafka</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">eagle</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">bin</span></span>
<span class="line"><span style="color:#24292E;">[kafka@</span><span style="color:#D73A49;">nnmaster</span><span style="color:#24292E;"> bin]$ .</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">ke.sh  start</span></span>
<span class="line"><span style="color:#24292E;">[kafka@</span><span style="color:#D73A49;">nnmaster</span><span style="color:#24292E;"> bin]$ jps</span></span>
<span class="line"><span style="color:#005CC5;">7557</span><span style="color:#24292E;"> Jps</span></span>
<span class="line"><span style="color:#005CC5;">15855</span><span style="color:#24292E;"> KafkaEagle</span></span></code></pre></div><p>服务启动成功后，可以看到有个 KafkaEagle 进程标识，表示启动成功，要查看 Kafka Eagle 启动日志，可访问 Kafka Eagle 的 logs 目录，主要查看 log.log、error.log 及 ke_console.out 三个文件。如果启动失败，文件中会有失败信息及失败原因。</p><p>要关闭 Kafka Eagle 服务，执行&quot;./ke.sh stop&quot;即可。</p><p>Kafka Eagle 服务启动后，即可打开 Web 界面，默认 Web 登录用户名为 admin，密码为 123456，登录端口为 8048，访问 <a href="http://172.16.213.151:8048" target="_blank" rel="noreferrer">http://172.16.213.151:8048</a> 地址即可打开登录界面。</p><h4 id="_2-kafka-eagle-的使用" tabindex="-1">2.Kafka Eagle 的使用 <a class="header-anchor" href="#_2-kafka-eagle-的使用" aria-label="Permalink to &quot;2.Kafka Eagle 的使用&quot;">​</a></h4><p>Kafka Eagle 的使用比较简单，下面是一个功能预览界面图：</p>`,33),y=s("p",null,"在上图中，对于左侧导航栏，我已经将每个栏目的功能做了标注，整体分为 5 个部分，分别是全局视图、Kakfa 消息管理、Kafka 集群监控、Kafka 监控告警及系统设置。",-1),i=s("p",null,"点击上图导航栏中的 BScreen 链接，即可进入下图界面：",-1),k=s("p",null,"此界面是个 Kafka 实时状态监控图，主要展示了消息生产的状态和消费状态，数据实时更新，非常炫酷。",-1),g=s("p",null,"接着前面的功能预览界面图，在此图右侧部分，显示了 Kafka 集群 Brokers 的数量、Topic 的数量、ZooKeeper 集群的节点数及消费者数量，点击 Brokers 的数量链接，显示下图界面：",-1),f=s("p",null,"此界面显示了 Kafka 集群的状态信息，主要是 Kakfa 占用的系统 CPU、内存等资源信息，要获得这些信息，需要在 Kafka 上开启 JMX 端口，这里设置的 JMX 端口为 9999。",-1),F=s("p",null,"接着，回到功能预览界面图，再点击 Topic 的链接，来到下图所示的界面：",-1),d=s("p",null,"此界面显示了 Kafka 集群中所有的 Topic 信息，包含 partitions 数量、数据偏差等，点击任意一个 Topic 链接，来到下图所示的界面：",-1),A=s("p",null,"此界面主要显示了某个 Topic 中目前的消息数、容量以及每个 Partition 中存储的消息数。",-1),h=s("p",null,"最后，再点击功能预览界面图中的消费者链接，来到下图所示的界面：",-1),u=s("p",null,"此界面主要显示了目前有哪些消费组，可以看到这里有一个 Logstash 消费者组，点击这个消费者组，然后点击 Runing 按钮，来到如下的界面：",-1),C=s("p",null,"此界面主要显示了目前消费者消费 Nginxlogs 这个 Topic 的状态信息，重点关注 Lag 列的信息，此信息表示消费延时，如果延时值过大，则表示消费速度过慢，需要引起注意。",-1),D=s("p",null,"下面再来看下 Kafka Eagle 提供的 KSQL 功能，如下图所示：",-1),_=s("p",null,[a('此界面中，右边的 select 语句，nginxlogs 表示 topic 的名称，"'),s("code",null,"partition"),a(' in (0)"表示查询哪个 partition 中的数据，最后的"limit 5"表示显示前 5 条消息。')],-1),m=s("p",null,"接着再来看下 Kafka 的监控指标，如下图所示：",-1),K=s("p",null,"上图曲线显示了每分钟推送到 Kafka 的消息数，另外还可以看到有很多其他监控指标，比如每秒生产多少数据量、每秒消费多少数据量等。",-1),b=s("p",null,"最后，再来看下如何配置监控告警，首先在告警栏中选择创建一个告警组，如下图所示：",-1),v=s("p",null,"此界面设置告警组名称、告警方式和告警接口，支持钉钉、微信和邮件告警，推荐钉钉告警，配置比较简单，直接给出一个告警接口地址即可。",-1),q=s("p",null,"接着，配置一个消费者延时告警，如下图所示：",-1),B=s("p",null,"此界面中主要配置的是消费延时值，上面配置为 1，也就是说延时值超过 1 就进行告警，这个值要根据实际情况进行设置。在海量数据环境下（上亿条数据），有几千条消息延时，其实也是正常的，而在小量数据环境下（几十万条数据），延时消息超过百条，可能就是消费延时了，需要关注延时的原因。",-1),x=s("p",null,"最后，再来看下如何设置集群的告警，如下图所示：",-1),T=s("p",null,"此界面中，配置的是对 Kafka 集群的告警，也可以设置 ZooKeeper、Topic、Producer 等的告警，告警可以设置告警级别、告警次数及告警组等信息。",-1),P=s("p",null,"所有配置完成后，就可以实现故障告警了，下图是一个钉钉告警截图：",-1),M=s("p",null,"从图中可以看出，此告警是消费延时导致的，我们设置的最大消费延时为 1，而目前延时是 793，这已经是第三次告警了，后面将不再进行告警，因为我配置的最大告警次数为 3。",-1),X=s("h3",{id:"小结",tabindex:"-1"},[a("小结 "),s("a",{class:"header-anchor",href:"#小结","aria-label":'Permalink to "小结"'},"​")],-1),w=s("p",null,"本课时主要讲解了 Kafka Eagle 的安装、配置与使用，其是目前最流行的 Kafka 监控利器，很多大企业都在使用它来监控和管理 Kafka，快速、熟练使用 Kafka Eagle 是本课程的重点。",-1);function H(z,S,j,W,R,O){const l=o("Image");return e(),t("div",null,[E,n(l,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWa2AQ597AADfl30QncI077.png"}),a(),y,i,n(l,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWbeAORQBAAlDnMWCVwI984.png"}),a(),k,g,n(l,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/34/1C/Ciqc1F8RWcGAJCXtAADdhhAt69Y878.png"}),a(),f,F,n(l,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWcmAWsZQAADQaJT1aIw478.png"}),a(),d,n(l,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWc-AV1dLAADXF7wAPKk061.png"}),a(),A,h,n(l,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWeCAd6KVAACdPx7Jf0Q608.png"}),a(),u,n(l,{alt:"Drawing 6.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWeeAXM3OAAEgJuuQ3KU227.png"}),a(),C,D,n(l,{alt:"Drawing 7.png",src:"https://s0.lgstatic.com/i/image/M00/34/1C/Ciqc1F8RWfaAairZAAEEUcme4_0353.png"}),a(),_,m,n(l,{alt:"Drawing 8.png",src:"https://s0.lgstatic.com/i/image/M00/34/1C/Ciqc1F8RWfyAFSK-AAFwH8ENnKw658.png"}),a(),K,b,n(l,{alt:"Drawing 9.png",src:"https://s0.lgstatic.com/i/image/M00/34/27/CgqCHl8RWgSAHxTjAACkzctvXWs371.png"}),a(),v,q,n(l,{alt:"Drawing 10.png",src:"https://s0.lgstatic.com/i/image/M00/34/28/CgqCHl8RWguAUvmYAACq3eB4nx8993.png"}),a(),B,x,n(l,{alt:"Drawing 11.png",src:"https://s0.lgstatic.com/i/image/M00/34/28/CgqCHl8RWhOAVNSkAACb9qXjWuY931.png"}),a(),T,P,n(l,{alt:"Drawing 12.png",src:"https://s0.lgstatic.com/i/image/M00/34/1C/Ciqc1F8RWhuAWMiFAAEaw2H9zcg810.png"}),a(),M,X,w])}const G=p(r,[["render",H]]);export{$ as __pageData,G as default};
