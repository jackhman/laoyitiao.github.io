import{_ as r,j as _,o as s,g as n,k as e,Q as o,s as a}from"./chunks/framework.4e7d56ce.js";const v=JSON.parse('{"title":"什么是重排序 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/096-Java 并发编程文档/(295) 第57讲：什么是指令重排序？为什么要重排序？.md","filePath":"posts/backEnd/096-Java 并发编程文档/(295) 第57讲：什么是指令重排序？为什么要重排序？.md","lastUpdated":1696417798000}'),p={name:"posts/backEnd/096-Java 并发编程文档/(295) 第57讲：什么是指令重排序？为什么要重排序？.md"},l=o("",8),c=a("br",null,null,-1),d=a("p",null,'图中左侧是 3 行 Java 代码，右侧是这 3 行代码可能被转化成的指令。可以看出 a = 100 对应的是 Load a、Set to 100、Store a，意味着从主存中读取 a 的值，然后把值设置为 100，并存储回去，同理， b = 5 对应的是下面三行 Load b、Set to 5、Store b，最后的 a = a + 10，对应的是 Load a、Set to 110、Store a。如果你仔细观察，会发现这里有两次"Load a"和两次"Store a"，说明存在一定的重排序的优化空间。',-1),i=a("br",null,null,-1),h=a("p",null,"经过重排序之后，情况如下图所示：",-1),b=a("br",null,null,-1),m=o("",22);function u(S,f,q,g,P,C){const t=_("Image");return s(),n("div",null,[l,e(t,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/75/87/CgpOIF5vI8yAE1n_AACnC3UQ3xM235.png"}),c,d,i,h,b,e(t,{alt:"",src:"https://s0.lgstatic.com/i/image3/M01/75/87/Cgq2xl5vI8yAfRpUAACP4YXZ3sg831.png"}),m])}const T=r(p,[["render",u]]);export{v as __pageData,T as default};
