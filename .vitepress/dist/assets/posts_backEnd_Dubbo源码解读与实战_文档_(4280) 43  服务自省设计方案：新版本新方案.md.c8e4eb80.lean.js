import{_ as t,j as p,o as n,g as i,k as r,h as o,s as e,Q as s}from"./chunks/framework.4e7d56ce.js";const y=JSON.parse('{"title":"43服务自省设计方案：新版本新方案","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Dubbo源码解读与实战_文档/(4280) 43  服务自省设计方案：新版本新方案.md","filePath":"posts/backEnd/Dubbo源码解读与实战_文档/(4280) 43  服务自省设计方案：新版本新方案.md","lastUpdated":1696682708000}'),c={name:"posts/backEnd/Dubbo源码解读与实战_文档/(4280) 43  服务自省设计方案：新版本新方案.md"},b=e("h1",{id:"_43服务自省设计方案-新版本新方案",tabindex:"-1"},[o("43服务自省设计方案：新版本新方案 "),e("a",{class:"header-anchor",href:"#_43服务自省设计方案-新版本新方案","aria-label":'Permalink to "43服务自省设计方案：新版本新方案"'},"​")],-1),d=e("p",null,"随着微服务架构的不断发展和普及，RPC 框架成为微服务架构中不可或缺的重要角色，Dubbo 作为 Java 生态中一款成熟的 RPC 框架也在随着技术的更新换代不断发展壮大。当然，传统的 Dubbo 架构也面临着新思想、新生态和新技术带来的挑战。",-1),l=e("p",null,[o("在微服务架构中，服务是基本单位，而 Dubbo 架构中服务的基本单位是 Java 接口，这种架构上的差别就会带来一系列挑战。"),e("strong",null,"从 2.7.5 版本开始，Dubbo 引入了服务自省架构，来应对微服务架构带来的挑战"),o("。具体都有哪些挑战呢？下面我们就来详细说明一下。")],-1),u=e("h3",{id:"注册中心面临的挑战",tabindex:"-1"},[o("注册中心面临的挑战 "),e("a",{class:"header-anchor",href:"#注册中心面临的挑战","aria-label":'Permalink to "注册中心面临的挑战"'},"​")],-1),m=e("p",null,"在开始介绍注册中心面临的挑战之前，我们先来回顾一下前面课时介绍过的 Dubbo 传统架构以及这个架构中最核心的组件：",-1),_=s("",14),v=s("",18),g=s("",9);function D(S,h,I,C,P,R){const a=p("Image");return n(),i("div",null,[b,d,l,u,m,r(a,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image2/M01/03/B5/Cip5yF_hcH2AVI2PAAB7_C-aKWA247.png"}),o(),_,r(a,{alt:"Lark20201222-120323.png",src:"https://s0.lgstatic.com/i/image/M00/8B/DD/CgqCHl_hcJqACV_gAAEpu4IHuz4068.png"}),o(),v,r(a,{alt:"Lark20201222-120318.png",src:"https://s0.lgstatic.com/i/image2/M01/03/B6/Cip5yF_hcMyALC7UAAEPa7NIifA395.png"}),o(),g])}const L=t(c,[["render",D]]);export{y as __pageData,L as default};
