import{_ as o,D as e,o as t,g as c,J as n,h as a,Q as l,m as p}from"./chunks/framework.f67d7268.js";const B=JSON.parse('{"title":"16Ingre和Egre：入口流量和出口流量控制","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md","filePath":"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md","lastUpdated":1696682708000}'),r={name:"posts/backEnd/微服务Service Mesh原理与实战_文档/(6009) 16  Ingre 和 Egre：入口流量和出口流量控制.md"},y=l("",22),E=l("",65),i=l("",31),F=p("p",null,"今天我们学习了一种全新的设计模式：Egress，Egress 最基本的功能是做出口流量的权限控制。其实通过 Envoy 的强大七层代理实现的 Egress Gateway 可以实现很多功能，在实际项目中我就通过 Egress Gateway 提升了外部服务访问的性能，那么在你的经验里 Egress Gateway 还有哪些应用场景呢? 欢迎在留言区和我分享你的观点。",-1),d=p("p",null,"今天内容到这里就结束了，下一讲我会讲解如何在 Istio 中完成金丝雀发布：金丝雀部署和版本控制。我们下一讲再见！",-1);function u(D,g,A,C,h,b){const s=e("Image");return t(),c("div",null,[y,n(s,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image6/M00/04/29/CioPOWAikmiAcbONAACHq-N5-0s752.png"}),a(),E,n(s,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image6/M00/04/2D/Cgp9HWAikpmAQQN3AAP80pyzQ1o891.png"}),a(),i,n(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image6/M00/04/2D/Cgp9HWAikquAESGWAAGAzMGoHMY346.png"}),a(),F,d])}const m=o(r,[["render",u]]);export{B as __pageData,m as default};
