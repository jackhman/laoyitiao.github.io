import{_ as o,j as e,o as r,g as t,k as p,h as a,Q as l,s}from"./chunks/framework.4e7d56ce.js";const x=JSON.parse('{"title":"ShardingSphere 如何抽象编排治理？ ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3570) 11  编排治理：如何实现分布式环境下的动态配置管理？.md","filePath":"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3570) 11  编排治理：如何实现分布式环境下的动态配置管理？.md","lastUpdated":1696417798000}'),c={name:"posts/backEnd/ShardingSphere 核心原理精讲_文档/(3570) 11  编排治理：如何实现分布式环境下的动态配置管理？.md"},y=l("",7),E=s("p",null,"集中式配置管理的设计思想",-1),i=s("p",null,"在 ShardingSphere 中，提供了多种配置中心的实现方案，包括主流的 ZooKeeeper、Etcd、Apollo 和 Nacos。开发人员也可以根据需要实现自己的配置中心并通过 SPI 机制加载到 ShardingSphere 运行时环境中。",-1),h=s("p",null,[a("另一方面，配置信息不是一成不变的。"),s("strong",null,"对修改后的配置信息的统一分发，是配置中心可以提供的另一个重要能力"),a("。配置中心中配置信息的任何变化都可以实时同步到各个服务实例中。在 ShardingSphere 中，通过配置中心可以支持数据源、数据表、分片以及读写分离策略的动态切换。")],-1),d=s("p",null,"同时，在集中式配置信息管理方案的基础上，ShardingSphere 也支持从本地加载配置信息的实现方案。如果我们希望以本地的配置信息为准，并将本地配置覆盖配置中心的配置，通过一个开关就可以做到这一点。",-1),g=s("h4",{id:"shardingsphere-中的注册中心",tabindex:"-1"},[a("ShardingSphere 中的注册中心 "),s("a",{class:"header-anchor",href:"#shardingsphere-中的注册中心","aria-label":'Permalink to "ShardingSphere 中的注册中心"'},"​")],-1),F=s("p",null,"在实现方式上，注册中心与配置中心非常类似，ShardingSphere 也提供了基于 ZooKeeeper 和 Etcd 这两款第三方工具的注册中心实现方案，而 ZooKeeeper 和 Etcd 同样也可以被用作配置中心。",-1),C=s("p",null,"注册中心与配置中心的不同之处在于两者保存的数据类型。配置中心管理的显然是配置数据，但注册中心存放的是 ShardingSphere 运行时的各种动态/临时状态数据，最典型的运行时状态数据就是当前的 Datasource 实例。那么，保存这些动态和临时状态数据有什么用呢？我们来看一下这张图：",-1),D=l("",32),u=s("p",null,"ZooKeeper 中的配置节点图",-1),A=s("p",null,'我们关注"config"段内容，其中"rule"节点包含了读写分离的规则设置：',-1),v=l("",13);function S(m,B,_,b,k,f){const n=e("Image");return r(),t("div",null,[y,p(n,{alt:"1.png",src:"https://s0.lgstatic.com/i/image/M00/35/6E/CgqCHl8VVZeAej3eAABEQzB6x7o265.png"}),a(),E,i,h,d,g,F,C,p(n,{alt:"2.png",src:"https://s0.lgstatic.com/i/image/M00/35/62/Ciqc1F8VVaeARWcwAABcQXkFH-E790.png"}),a(),D,p(n,{alt:"3.png",src:"https://s0.lgstatic.com/i/image/M00/35/6E/CgqCHl8VVf2AWu6mAAAPpWnlsUo874.png"}),a(),u,A,p(n,{alt:"4.png",src:"https://s0.lgstatic.com/i/image/M00/35/6E/CgqCHl8VVgWAXXOKAAAuZGtB8EQ493.png"}),a(),v])}const j=o(c,[["render",S]]);export{x as __pageData,j as default};
