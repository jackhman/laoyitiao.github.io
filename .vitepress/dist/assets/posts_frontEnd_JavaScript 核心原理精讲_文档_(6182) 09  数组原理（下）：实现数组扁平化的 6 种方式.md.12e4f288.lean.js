import{_ as p,j as o,o as e,h as t,k as l,f as a,Q as r,s}from"./chunks/framework.d3daa342.js";const S=JSON.parse('{"title":"09数组原理（下）：实现数组扁平化的6种方式","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6182) 09  数组原理（下）：实现数组扁平化的 6 种方式.md","filePath":"posts/frontEnd/JavaScript 核心原理精讲_文档/(6182) 09  数组原理（下）：实现数组扁平化的 6 种方式.md","lastUpdated":1696682708000}'),c={name:"posts/frontEnd/JavaScript 核心原理精讲_文档/(6182) 09  数组原理（下）：实现数组扁平化的 6 种方式.md"},E=r("",42),y=s("p",null,[a("通过这个在线网站 "),s("a",{href:"https://regexper.com/",target:"_blank",rel:"noreferrer"},"https://regexper.com/"),a(" 可以把正则分析成容易理解的可视化的逻辑脑图。其中我们可以看到，匹配规则是：全局匹配（g）左括号或者右括号，将它们替换成空格，最后返回处理后的结果。之后拿着正则处理好的结果重新在外层包裹括号，最后通过 JSON.parse 转换成数组返回。")],-1),i=s("p",null,"以上就是这六种实现数组扁平化的方式，你可以再思考下看看是否还有更多的实现方式，我们可以交流一下。",-1),F=s("h3",{id:"总结",tabindex:"-1"},[a("总结 "),s("a",{class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'},"​")],-1),d=s("p",null,"本讲的内容就介绍这么多了。我将日常开发中有可能遇到数组扁平化的几种方法分别讲了一遍，又在最后一个方法中给你推荐了一个比较容易理解的正则表达式的分析工具。希望这几种方法能为你提升 JS 编码能力带来帮助和启发。",-1),C=s("p",null,"综上我们可以看到，数组扁平化这节课的知识点结合了数组 API、ES6，以及 JSON 方法的相关知识。你可以通过下面的表格再来看一下这六种方式的代码思路。",-1),h=s("p",null,"表格列举了这几种方法实现的难易程度，以及编码思路的描述。希望你能对这几种方法融会贯通，如果在未来的面试中遇到这样的题目，愿你能够轻松应对，给面试官一个满意的答复。",-1),u=s("p",null,"在日常的前端开发工作中，你往往会在业务开发的时候遇到各种数组问题，所以你要思考最合适的解决方式。其实扁平化只是其中的一个引子，其他涉及数组的相关知识点还有很多。",-1),A=s("p",null,"我最后给你留一个和数组相关的作业：试着写出实现数组去重的方式，看看你能够写出几种呢？",-1),g=s("p",null,"下一讲，我们来说说数组排序，这也是数据结构中必不可少的知识，我们到时见。",-1);function f(B,D,_,v,b,k){const n=o("Image");return e(),t("div",null,[E,l(n,{alt:"Lark20210202-151541.png",src:"https://s0.lgstatic.com/i/image/M00/94/9B/Ciqc1GAY_EWAE3pDAAERgfI0plY241.png"}),a(),y,i,F,d,C,l(n,{alt:"Lark20210202-151546.png",src:"https://s0.lgstatic.com/i/image2/M01/0C/93/CgpVE2AY_DiAQNC5AAFrgibLZp4762.png"}),a(),h,u,A,g])}const x=p(c,[["render",f]]);export{S as __pageData,x as default};
