import{_ as o,j as e,o as t,g as c,k as a,s as n,h as p,Q as l}from"./chunks/framework.b3d8e22e.js";const q=JSON.parse('{"title":"使用 pytest 进行数据驱动的基本思路 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/devops/114-测试开发入门与实战文档/(4675) 15  Panda：拒绝低效，数据驱动新手段.md","filePath":"posts/devops/114-测试开发入门与实战文档/(4675) 15  Panda：拒绝低效，数据驱动新手段.md","lastUpdated":1696417798000}'),r={name:"posts/devops/114-测试开发入门与实战文档/(4675) 15  Panda：拒绝低效，数据驱动新手段.md"},E=n("p",null,"你好，我是蔡超，欢迎来到第 15 课时，经过从第一节课迄今为止的学习，你已经对测试框架的搭建，使用有比较深入的理解。 公司里的各种项目假设需要自动化测试，你也可以根据本专栏能融合 API 测试和 UI 测试，并学会了使用 PageObject 模型，且拥有数据驱动能力的测试框架了。",-1),y=n("p",null,[p("今天我将带你在"),n("strong",null,"数据驱动这个话题上继续深耕"),p(" ，一起来探索在自动化测试中"),n("strong",null,"如何使用不同类型的数据驱动，下方这个本课时的内容脑图可供你学习参考。")],-1),i=l("",26),d=l("",10),F=l("",58),_=l("",10),u=n("p",null,"接着 pytest 会在其中经过一系列复杂的操作，最终为 text_para 这个 fixture 完成参数化，并且根据数据的组数将测试用例 test_func 分成多个测试用例，接着依次运行新生成的测试用例，并且为每一个测试用例提供一组数据，如下：",-1),h=l("",22);function m(A,f,g,C,D,v){const s=e("Image");return t(),c("div",null,[E,y,a(s,{alt:"Lark20201028-190551.png",src:"https://s0.lgstatic.com/i/image/M00/64/E7/CgqCHl-ZUKyAIUsJAALUSW5S0PI459.png"}),i,a(s,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/64/E6/CgqCHl-ZTzeAXyTQAACWaRTvsc0516.png"}),d,a(s,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/64/E7/CgqCHl-ZUAyAOH7TAAAJXFXWlIE940.png"}),F,a(s,{alt:"Drawing 3.png",src:"https://s0.lgstatic.com/i/image/M00/64/DB/Ciqc1F-ZT4mAECokAABqMkmXXgs908.png"}),_,a(s,{alt:"Drawing 4.png",src:"https://s0.lgstatic.com/i/image/M00/64/DB/Ciqc1F-ZT5CAadvKAAA6CFGmj18747.png"}),u,a(s,{alt:"Drawing 5.png",src:"https://s0.lgstatic.com/i/image/M00/64/E7/CgqCHl-ZT6iADUUHAAANxdO_dSA750.png"}),h])}const b=o(r,[["render",m]]);export{q as __pageData,b as default};
