import{_ as o,j as e,o as t,g as c,k as n,Q as a,s as p,h as l}from"./chunks/framework.e0c66c3f.js";const _=JSON.parse('{"title":"模式原理分析 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","filePath":"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md","lastUpdated":1696338709000}'),r={name:"posts/backEnd/趣学设计模式_文档/(6889) 24  组合模式：如何用树形结构处理对象之间的复杂关系？.md"},E=a("",7),y=a("",3),i=p("p",null,[l("除了树形结构以外，组合模式中还有"),p("strong",null,"环形结构"),l(" 和"),p("strong",null,"双向结构"),l("（如下图），其中，环形结构和数据结构中的单向链表很相似，而双向结构其实就是 Spring 中 Bean 常用的结构。")],-1),d=a("",10),F=a("",32);function A(b,u,D,g,C,v){const s=e("Image");return t(),c("div",null,[E,n(s,{alt:"image.png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3VjyAdaL-AABoXi-mYc0931.png"}),y,n(s,{alt:"image (1).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VkWAAa_UAACkaBZlf0E608.png"}),i,n(s,{alt:"image (2).png",src:"https://s0.lgstatic.com/i/image6/M00/43/22/CioPOWC3Vk-AIZSUAAFRh5xYT_k955.png"}),d,n(s,{alt:"image (3).png",src:"https://s0.lgstatic.com/i/image6/M00/43/1A/Cgp9HWC3VlqAYuyLAABhZFxXIQY493.png"}),F])}const B=o(r,[["render",A]]);export{_ as __pageData,B as default};
