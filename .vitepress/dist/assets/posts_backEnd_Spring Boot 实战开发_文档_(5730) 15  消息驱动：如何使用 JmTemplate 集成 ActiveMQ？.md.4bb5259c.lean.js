import{_ as e,j as o,o as t,g as c,k as p,h as a,s,Q as l}from"./chunks/framework.b3d8e22e.js";const S=JSON.parse('{"title":"JMS 规范与 ActiveMQ ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/backEnd/Spring Boot 实战开发_文档/(5730) 15  消息驱动：如何使用 JmTemplate 集成 ActiveMQ？.md","filePath":"posts/backEnd/Spring Boot 实战开发_文档/(5730) 15  消息驱动：如何使用 JmTemplate 集成 ActiveMQ？.md","lastUpdated":1696417798000}'),r={name:"posts/backEnd/Spring Boot 实战开发_文档/(5730) 15  消息驱动：如何使用 JmTemplate 集成 ActiveMQ？.md"},E=s("p",null,"14 讲我们介绍了基于 Kafka 和 KafkaTemplate 实现消息发送和消费，并重构了 SpringCSS 案例系统中的 account-service 和 customer-service 服务。今天，我们继续介绍 ActiveMQ，并基于 JmsTemplate 模板工具类为 SpringCSS 案例添加对应的消息通信机制。",-1),i=s("h3",{id:"jms-规范与-activemq",tabindex:"-1"},[a("JMS 规范与 ActiveMQ "),s("a",{class:"header-anchor",href:"#jms-规范与-activemq","aria-label":'Permalink to "JMS 规范与 ActiveMQ"'},"​")],-1),y=s("p",null,"JMS（Java Messaging Service）是一种 Java 消息服务，它基于消息传递语义，提供了一整套经过抽象的公共 API。目前，业界也存在一批 JMS 规范的实现框架，其中具备代表性的是 ActiveMQ。",-1),d=s("h4",{id:"jms-规范",tabindex:"-1"},[a("JMS 规范 "),s("a",{class:"header-anchor",href:"#jms-规范","aria-label":'Permalink to "JMS 规范"'},"​")],-1),g=s("p",null,"JMS 规范提供了一批核心接口供开发人员使用，而这些接口构成了客户端的 API 体系，如下图所示：",-1),v=l("",65),u=l("",25);function m(h,F,C,A,b,M){const n=o("Image");return t(),c("div",null,[E,i,y,d,g,p(n,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image2/M01/04/A0/CgpVE1_0G4iAFaHdAADIv5Y696k445.png"}),a(),v,p(n,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image2/M01/03/CB/Cip5yF_ivRuAdYV0AAANYpYvrk4834.png"}),a(),u])}const k=e(r,[["render",m]]);export{S as __pageData,k as default};
