import{_ as o,j as e,o as t,g as c,k as a,Q as l,s,h as p}from"./chunks/framework.4e7d56ce.js";const v=JSON.parse('{"title":"前期准备 ","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3529) 12  列表样式：实践 Flutter 中内容多样式展示方式.md","filePath":"posts/frontEnd/101-Flutter快学快用24讲文档/(3529) 12  列表样式：实践 Flutter 中内容多样式展示方式.md","lastUpdated":1696417798000}'),r={name:"posts/frontEnd/101-Flutter快学快用24讲文档/(3529) 12  列表样式：实践 Flutter 中内容多样式展示方式.md"},E=l("",37),y=s("h4",{id:"组件设计",tabindex:"-1"},[p("组件设计 "),s("a",{class:"header-anchor",href:"#组件设计","aria-label":'Permalink to "组件设计"'},"​")],-1),i=s("p",null,"按照我们 06 课时的知识点，我们需要将界面的组件进行拆解分析，由于这部分我们在 06 课时也分析过，因此这里比较快速地分析出下面的一个组件树，如图 2 所示。",-1),d=l("",12),F=s("h4",{id:"组件设计-1",tabindex:"-1"},[p("组件设计 "),s("a",{class:"header-anchor",href:"#组件设计-1","aria-label":'Permalink to "组件设计"'},"​")],-1),C=s("p",null,'根据上面的规则，我们将三个图片分为一组，则存在 2 种组件组合规则，如图 4 所示的左右图的两个组合规则。图 4 左边为三小图并列组合规则，图 4 右侧为大小图组合规则，其次这部分还可能出现两种情况，第一种是第一个为大图，第二种是最后一个为大图，也就是"大小小"和"小小大"组件组合规则。',-1),u=l("",19),g=s("h4",{id:"组件设计-2",tabindex:"-1"},[p("组件设计 "),s("a",{class:"header-anchor",href:"#组件设计-2","aria-label":'Permalink to "组件设计"'},"​")],-1),D=s("p",null,"根据图 5 的效果图，我们按照 06 课时的知识点，绘制出图 6 的一个组件树。",-1),A=l("",21);function m(B,h,k,f,I,_){const n=e("Image");return t(),c("div",null,[E,a(n,{alt:"图片1.png",src:"https://s0.lgstatic.com/i/image/M00/33/F0/CgqCHl8RIO-AVjCIAANJnR6nMPc935.png"}),y,i,a(n,{alt:"图片2.png",src:"https://s0.lgstatic.com/i/image/M00/33/F0/CgqCHl8RIPyAE8_gAALBPW0-Bj0112.png"}),d,a(n,{alt:"图片3.png",src:"https://s0.lgstatic.com/i/image/M00/33/E5/Ciqc1F8RIRaAUc1mAAfclNZgPPA347.png"}),F,C,a(n,{alt:"图片4.png",src:"https://s0.lgstatic.com/i/image/M00/33/E5/Ciqc1F8RISOAdHsLAAHLoId25k8599.png"}),u,a(n,{alt:"图片5.png",src:"https://s0.lgstatic.com/i/image/M00/33/E5/Ciqc1F8RIUWAJaWRAAQ7AhPuYYY687.png"}),g,D,a(n,{alt:"图片6.png",src:"https://s0.lgstatic.com/i/image/M00/33/E5/Ciqc1F8RIVKAZyj1AAJ_M5lRbOU489.png"}),A])}const S=o(r,[["render",m]]);export{v as __pageData,S as default};
