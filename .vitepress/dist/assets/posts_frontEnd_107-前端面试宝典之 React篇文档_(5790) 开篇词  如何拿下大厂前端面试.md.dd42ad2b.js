import{_ as r,j as n,o as p,h as _,k as a,f as t,Q as s,s as o}from"./chunks/framework.d3daa342.js";const P=JSON.parse('{"title":"开篇词如何拿下大厂前端面试","description":"","frontmatter":{},"headers":[],"relativePath":"posts/frontEnd/107-前端面试宝典之 React篇文档/(5790) 开篇词  如何拿下大厂前端面试.md","filePath":"posts/frontEnd/107-前端面试宝典之 React篇文档/(5790) 开篇词  如何拿下大厂前端面试.md","lastUpdated":1696682708000}'),c={name:"posts/frontEnd/107-前端面试宝典之 React篇文档/(5790) 开篇词  如何拿下大厂前端面试.md"},l=s('<h1 id="开篇词如何拿下大厂前端面试" tabindex="-1">开篇词如何拿下大厂前端面试 <a class="header-anchor" href="#开篇词如何拿下大厂前端面试" aria-label="Permalink to &quot;开篇词如何拿下大厂前端面试&quot;">​</a></h1><p>你好，我是伯约，一名前端面试官，也是一位资深的前端实践者。</p><p>我长期钻研大型前端应用架构与性能治理，参与过诸多企业级项目并成功搭建适用于多个 BU 的前端中台，拥有丰富的实战经验，平时关注主流前端框架的发展和实践。近几年，我也在负责新同学的面试把关，以及人才梯队建设，对前端朋友的成长与困惑有一些切实的体会。</p><p>近几年，<strong>随着前后端的分离，前端的工作越来越专业化，各大互联网公司对前端工程师的要求也越来越高，一个岗位宁缺毋滥。面试时，也越来越偏向于&quot;考原理，抠细节，挖深处&quot;。</strong></p><p>在这样严峻的环境下，作为前端工程师，想进大厂不仅需要掌握一定的底层原理，还需要触类旁通，具备高效解决技术难题的能力。</p><p>就拿我自己面试新同学的经验来说，失败的应聘者基本分为两大类：</p><ul><li><p>&quot;小白&quot;，这部分人群基本都输在<strong>没什么项目经验</strong>上，回答的基本都是一些死记硬背的答案，没有结合项目的理解；</p></li><li><p>经验老到的求职者，他们参与的项目少则十几个，多则数十个，但最后仍与 Offer 失之交臂，主要是因为他们<strong>缺乏对技术栈的深入思考，只流于表面上的使用</strong>。</p></li></ul><p>就比如，我问到 React 组件设计相关问题时，有经验的求职者会讲到函数组件、纯组件、类组件等，这类问题大部分人都可以答上来。如果我进一步追问高阶组件与渲染劫持（Render Hijack）相关的内容，能够回答上来的人就大大减少了。</p><h3 id="关于前端面试-应该从何下手" tabindex="-1">关于前端面试，应该从何下手？ <a class="header-anchor" href="#关于前端面试-应该从何下手" aria-label="Permalink to &quot;关于前端面试，应该从何下手？&quot;">​</a></h3><p><strong>这不只是初入前端的同学会有的疑问，从事多年开发的同学依然会有这样的问题。</strong></p><p>在面试的准备阶段，如果你还只是拼命地刷面试题，显然是不够的。在真实的面试中，面试官往往会在一个知识点的基础上，横向或纵向地追问，狠抓知识盲区，打得你措手不及。所以，切忌通过点状的、零散的知识点去完成学习与记忆，一定要通过横向比较、纵向延伸的方式建立知识体系，通过体系化学习逐步填充知识盲区。</p><p>这也验证了一句话：<strong>正确的方式比学习本身更重要，也使学习更高效</strong>。那么怎样的方式才是正确的呢？我们应该从哪里学起，从哪里看起呢？</p><p>我在面试的时候，无论这个同学是否通过，都会在最后问一下求职者的学习方式。我发现大家一般是从书籍、网络社区及微信公众号这 3 个渠道来学习的。书籍的内容虽然是成体系的，但有一定的滞后性。而网络社区与公众号呈现的内容就过于零碎，需要自己去整理、完成知识体系建设，但好处是足够新，紧跟当下。</p><p>这就导致一个很&quot;分裂&quot;的情况：<strong>看书跟不上潮流，看网文难以积累</strong>。你很难从这些内容中真正学到更深层次的知识，久而久之大家便形成了前端知识不必深究、浅尝辄止的态度。</p><p>当然还有一种情况是<strong>你知道知识点，但不能准确完整地表达、不知道该如何描述</strong>。但当面试官提起的时候，又能记忆起来，说，&quot;对对对，就是那个，我刚确实不知道该怎么讲&quot;。这种情况非常多，我个人觉 得，这说明你并没有真正地理解知识点，只是囫囵吞枣般学习而已，知识点与代码并没能在你的脑海中建立完整的映射关系。</p><p>这两点都限制了我们对前端的学习。我们应该<strong>从日常的开发问题中，从面试的问题中去学习，通过反思与复盘不断学习成长</strong>，这也是我设计该课程的核心。这门课我以应用较广的 React 为切入点，结合自己多年的面试经验，以大厂真实面试题为例，带你归纳总结解题思路和方法，融会贯通掌握前端面试技巧，助你拿下大厂前端 Offer。</p><h3 id="这个课程是如何设计的" tabindex="-1">这个课程是如何设计的？ <a class="header-anchor" href="#这个课程是如何设计的" aria-label="Permalink to &quot;这个课程是如何设计的？&quot;">​</a></h3><p>在纵向深挖问题的同时，为了解决知识点零散的痛点，我也会帮助你基于树状结构去掌握知识点的底层原理，以及它们之间的深层次联系，通过不断补全技术栈的方式带你攻克瓶颈。比如 React 的主要内容有以下几点：组件基础、状态管理、渲染流程等。</p>',18),i=o("p",null,"在组件基础上，我们还会再进一步延伸出更细的点：",-1),g=s('<p>基于树状的知识体系，可以使我们的学习更为轻松、快捷，记忆也更为牢固。因此，我将专栏设计为 6 大模块，合计 20 讲，通过&quot;分析题干&quot;-&gt;&quot;构建知识导图&quot;-&gt;&quot;横向技术对比与纵向原理解析&quot;-&gt;&quot;答题文案&quot;的方式，和你逐步梳理 React 的学习要点。</p><ol><li><p><strong>组件基础</strong>（ 01 ~ 05 ）：从经典面试问题入手带你梳理组件的设计原理与思路，帮助你掌握分析和解决问题的技巧。</p></li><li><p><strong>状态管理</strong>（ 06 ~ 08 ）：从状态的理解、运用与工程化实践入手，帮助你真正理解 React 的状态管理。</p></li><li><p><strong>渲染流程</strong>（ 09 ~ 12 ）：只有理解渲染流程，才能做出正确的性能优化。该模块可以加强你对 React 工作模式的理解程度。</p></li><li><p><strong>性能优化</strong>（ 13 ~ 15 ）：从工程化的视角阐述性能优化问题，带你掌握中高级职位必杀技。</p></li><li><p><strong>React Hooks</strong>（ 16 ~ 18 ）：解析 Hooks 的原理，API 的区别及最佳的设计模式，帮助你完美胜任组件模式向 Hooks 转移的工作。</p></li><li><p><strong>React 生态</strong>（ 19 ~ 20 ）：讲解面试必考的 React-Router 以及常用的工具库，带你探索 React 生态圈，帮助你掌握经过时间和大型项目验证的 React 工具。</p></li></ol><p>最后，我还会专门有一讲内容，来告诉你如何编写一份 HR 满意的简历，帮你顺利敲开大厂面试的大门。</p><p>当然，你也可能会担心，课程是否会有所遗漏、是否会过时。但如果深入学习，你会发现课程是在训练一种可以在学习中复制的思维。正如前面所说，正确的学习方式比学习本身更为重要，当我们掌握了正确的学习方式，那将会是一把强大无比的武器，不断地促使我们前进。</p><h3 id="讲师寄语" tabindex="-1">讲师寄语 <a class="header-anchor" href="#讲师寄语" aria-label="Permalink to &quot;讲师寄语&quot;">​</a></h3><p>在拿下大厂 Offer 之前，我同样经历过一个背答案、记答案的过程，但收效甚微，在日后的工作中我发现那并不是一种高效的方式。在更新越来越快，大家越来越学不动的时代，学习方式越来越重要，所以<strong>这门课我不仅希望帮你解决面试的问题 ，更希望带你提升学习的能力，提升技术软实力。</strong></p><p>在学习和实践的过程中，你可能会遇到一些问题。请不要担心，你可以随时在评论区留言和提问，我会尽量抽出时间来认真解答你的提问。但我也希望你能在提出问题的同时，用本课程的思维方式对问题有一个完整的阐述。这样就不只是你问我答，而是<strong>在自问、在复盘、在自驱前进</strong>，如果你能到达这样一种学习状态，那就可以毕业了。</p><p>最后，希望你能通过这一专栏的学习，实现自己的&quot;大厂梦&quot;。</p><p>[</p>',9),u=o("p",null,[t("]("),o("a",{href:"https://shenceyun.lagou.com/t/mka",target:"_blank",rel:"noreferrer"},"https://shenceyun.lagou.com/t/mka"),t(")")],-1),h=o("p",null,"《大前端高薪训练营》",-1),d=o("p",null,[t("对标阿里 P7 技术需求 + 每月大厂内推，6 个月助你斩获名企高薪 Offer。"),o("a",{href:"https://shenceyun.lagou.com/t/mka",target:"_blank",rel:"noreferrer"},"点击链接"),t("，快来领取！")],-1);function f(q,m,R,A,k,T){const e=n("Image");return p(),_("div",null,[l,a(e,{alt:"Drawing 0.png",src:"https://s0.lgstatic.com/i/image/M00/72/94/Ciqc1F_EZyuAQfGNAACUnsVS3bw151.png"}),t(),i,a(e,{alt:"Drawing 1.png",src:"https://s0.lgstatic.com/i/image/M00/72/94/Ciqc1F_EZzCAQNYZAAESfbDOAJY943.png"}),t(),g,a(e,{alt:"Drawing 2.png",src:"https://s0.lgstatic.com/i/image/M00/72/94/Ciqc1F_EZ0eANc6tAASyC72ZqWw643.png"}),t(),u,h,d])}const C=r(c,[["render",f]]);export{P as __pageData,C as default};
